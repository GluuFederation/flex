openapi: 3.0.3
info:
  title: Jans Config API
  contact:
    name: Contact
    url: 'https://github.com/JanssenProject/jans/discussions'
  license:
    name: License
    url: 'https://github.com/JanssenProject/jans/blob/main/LICENSE'
  version: OAS Version
servers:
  - url: 'https://jans.local.io'
    description: The Jans server
tags:
  - name: Attribute
  - name: Default Authentication Method
  - name: Cache Configuration
  - name: Cache Configuration – Memcached
  - name: Cache Configuration – Redis
  - name: Cache Configuration – in-Memory
  - name: Cache Configuration – Native-Persistence
  - name: Configuration – Properties
  - name: Configuration – SMTP
  - name: Configuration – Logging
  - name: Configuration – JWK - JSON Web Key (JWK)
  - name: Custom Scripts
  - name: Database - LDAP configuration
  - name: OAuth - OpenID Connect - Clients
  - name: OAuth - UMA Resources
  - name: OAuth - Scopes
  - name: Agama - Configuration
  - name: Agama
  - name: Statistics - User
  - name: Health - Check
  - name: Server Stats
  - name: Auth - Session Management
  - name: Organization Configuration
  - name: Auth Server Health - Check
  - name: Plugins
  - name: Configuration – Config API
  - name: Client Authorization
  - name: Jans Assets
  - name: Token
  - name: Fido2 - Configuration
  - name: Fido2 - Registration
  - name: Configuration – User Management
  - name: Admin UI - Role
  - name: Admin UI - Permission
  - name: Admin UI - Role-Permissions Mapping
  - name: Admin UI - License
  - name: Admin UI - Webhooks
  - name: Jans Link - Configuration
  - name: SCIM - Config Management
  - name: SAML - Configuration
  - name: SAML - Trust Relationship
  - name: SAML - Identity Broker
  - name: Keycloak Link - Configuration
  - name: Lock - Configuration
  - name: Lock - Audit
paths:
  /api/v1/health/app-version:
    get:
      tags:
        - Health - Check
      summary: Returns application version
      description: Returns application version
      operationId: get-app-version
      parameters:
        - name: artifact
          in: query
          description: artifact name for which version is requied else ALL
          schema:
            type: string
            default: all
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonNode'
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/app-version.readonly'
  /api/v1/health:
    get:
      tags:
        - Health - Check
      summary: Returns application health status
      description: Returns application health status
      operationId: get-config-health
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthStatus'
        '500':
          description: InternalServerError
  /api/v1/health/live:
    get:
      tags:
        - Health - Check
      summary: Returns application liveness status
      description: Returns application liveness status
      operationId: get-config-health-live
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: InternalServerError
  /api/v1/health/ready:
    get:
      tags:
        - Health - Check
      summary: Returns application readiness status
      description: Returns application readiness status
      operationId: get-config-health-ready
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '500':
          description: InternalServerError
  /api/v1/health/server-stat:
    get:
      tags:
        - Health - Check
      summary: Returns application server status
      description: Returns application server status
      operationId: get-server-stat
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsData'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dbType": "sql",
                        "lastUpdate": "2024-11-01T12:11:01",
                        "facterData": {
                            "memoryfree": "39.7%",
                            "swapfree": "0.0%",
                            "hostname": "pujavs-amazed-rat.gluu.info",
                            "ipaddress": "167.99.13.66",
                            "uptime": "1 day, 3:54",
                            "free_disk_space": "95.4%",
                            "load_average": "0.13623046875"
                        }
                    }
        '500':
          description: InternalServerError
  /api/v1/health/service-status:
    get:
      tags:
        - Health - Check
      summary: Fetch service status
      description: Fetch service status
      operationId: get-service-status
      parameters:
        - name: service
          in: query
          description: Service name to check status
          schema:
            type: string
            default: all
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonNode'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                      "jans-auth": "Running",
                      "jans-config-api": "Down",
                      "jans-casa": "Not present",
                      "jans-fido2": "Running",
                      "jans-scim": "Running",
                      "jans-link": "Running",
                      "jans-lock": "Running",
                      "keycloak": "Running"
                    }
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/data.readonly'
  /api/v1/acrs:
    get:
      tags:
        - Default Authentication Method
      summary: Gets default authentication method.
      description: Gets default authentication method.
      operationId: get-acrs
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                      "defaultAcr": "basic"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/acrs.readonly'
            - 'https://jans.io/oauth/config/acrs.write'
            - 'https://jans.io/oauth/config/read-all'
    put:
      tags:
        - Default Authentication Method
      summary: Updates default authentication method.
      description: Updates default authentication method.
      operationId: put-acrs
      requestBody:
        description: String representing patch-document.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationMethod'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                    "defaultAcr": "basic"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationMethod'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/acrs.write'
            - 'https://jans.io/oauth/config/write-all'
  '/api/v1/agama-deployment/{name}':
    get:
      tags:
        - Agama
      summary: Fetches deployed Agama project based on name.
      description: Fetches deployed Agama project based on name.
      operationId: get-agama-prj-by-name
      parameters:
        - name: name
          in: path
          description: Agama project name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agama project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployment'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.readonly'
    post:
      tags:
        - Agama
      summary: Deploy an Agama project.
      description: Deploy an Agama project.
      operationId: post-agama-prj
      parameters:
        - name: name
          in: path
          description: Agama project name
          required: true
          schema:
            type: string
        - name: autoconfigure
          in: query
          description: 'Boolean value to indicating to auto configure the project '
          schema:
            type: string
      requestBody:
        description: Agama gama file
        content:
          application/zip:
            schema:
              type: array
              items:
                type: string
                format: byte
      responses:
        '202':
          description: Agama project accepted
          content:
            application/zip:
              schema:
                type: string
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.write'
    delete:
      tags:
        - Agama
      summary: Delete a deployed Agama project.
      description: Delete a deployed Agama project.
      operationId: delete-agama-prj
      parameters:
        - name: name
          in: path
          description: Agama project name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.delete'
  '/api/v1/agama-deployment/configs/{name}':
    get:
      tags:
        - Agama
      summary: Retrieve the list of configs based on name.
      description: Retrieve the list of configs based on name.
      operationId: get-agama-prj-configs
      parameters:
        - name: name
          in: path
          description: Agama project name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Agama projects configs
          content:
            application/json:
              schema:
                type: string
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.readonly'
    put:
      tags:
        - Agama
      summary: Update an Agama project.
      description: Update an Agama project.
      operationId: put-agama-prj
      parameters:
        - name: name
          in: path
          description: Agama project name
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Agama flow config, key is `name` of config property and `value` is the
          property value. 
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: object
      responses:
        '202':
          description: Agama project accepted
          content:
            application/json:
              schema:
                type: string
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.write'
  /api/v1/agama-deployment:
    get:
      tags:
        - Agama
      summary: Retrieve the list of projects deployed currently.
      description: Retrieve the list of projects deployed currently.
      operationId: get-agama-prj
      parameters:
        - name: start
          in: query
          description: Start index for the result
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Search size - count of the results to return
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Agama projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.readonly'
  '/api/v1/agama/syntax-check/{qname}':
    post:
      tags:
        - Agama - Configuration
      summary: Determine if the text passed is valid Agama code
      description: Determine if the text passed is valid Agama code
      operationId: agama-syntax-check
      parameters:
        - name: qname
          in: path
          description: Agama Flow name
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Agama Syntax Check message
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/agama.readonly'
            - 'https://jans.io/oauth/config/agama.write'
            - 'https://jans.io/oauth/config/read-all'
  '/api/v1/jans-assets/{inum}':
    get:
      tags:
        - Jans Assets
      summary: Gets an asset by inum - unique identifier
      description: Gets an asset by inum - unique identifier
      operationId: get-asset-by-inum
      parameters:
        - name: inum
          in: path
          description: Asset Inum
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "dn": "inum=0b436302-b729-4eb2-b211-335980dcab43,ou=document,o=jans",
                        "selected": false,
                        "inum": "0b436302-b729-4eb2-b211-335980dcab43",
                        "displayName": "mermaid-extra.css",
                        "description": "/opt/jans/jetty/jans-config-api/",
                        "document": ".mermaid {\r\n\toverflow: auto;\r\n}\r\n\r\n.mermaid svg {\r\n\twidth: 1315px;\r\n\theight: 600px;\r\n}\r\n",
                        "jansModuleProperty": [
                            "config-api",
                            "jar",
                            "/opt/jans/jetty/jans-config-api/custom/lib"
                        ],
                        "jansLevel": "1",
                        "jansRevision": "2",
                        "jansEnabled": true,
                        "baseDn": "inum=0b436302-b729-4eb2-b211-335980dcab43,ou=document,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
    delete:
      tags:
        - Jans Assets
      summary: Delete an asset
      description: Delete an asset
      operationId: delete-asset
      parameters:
        - name: inum
          in: path
          description: Asset identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-delete'
  '/api/v1/jans-assets/name/{name}':
    get:
      tags:
        - Jans Assets
      summary: Fetch asset by name
      description: Fetch asset by name.
      operationId: get-asset-by-name
      parameters:
        - name: name
          in: path
          description: Asset Name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: ''
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
  /api/v1/jans-assets/asset-dir-mapping:
    get:
      tags:
        - Jans Assets
      summary: Get valid asset types
      description: Get valid asset types
      operationId: get-asset-dir-mapping
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetDirMapping'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
  /api/v1/jans-assets:
    get:
      tags:
        - Jans Assets
      summary: Gets all Jans assets.
      description: Gets all Jans assets.
      operationId: get-all-assets
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: status
          in: query
          description: Status of the attribute
          schema:
            type: string
            default: all
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'adminCanEdit=true,dataType=string'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 2,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "inum=0b436302-b729-4eb2-b211-335980dcab43,ou=document,o=jans",
                                "selected": false,
                                "inum": "0b436302-b729-4eb2-b211-335980dcab43",
                                "displayName": "mermaid-extra.css",
                                "description": "/opt/jans/jetty/jans-config-api/",
                                "document": ".mermaid {\r\n\toverflow: auto;\r\n}\r\n\r\n.mermaid svg {\r\n\twidth: 1315px;\r\n\theight: 600px;\r\n}\r\n",
                                "jansModuleProperty": [
                                    "config-api",
                                    "jar",
                                    "/opt/jans/jetty/jans-config-api/custom/lib"
                                ],
                                "jansLevel": "1",
                                "jansRevision": "2",
                                "jansEnabled": true,
                                "baseDn": "inum=0b436302-b729-4eb2-b211-335980dcab43,ou=document,o=jans"
                            },
                            {
                                "dn": "inum=9d2f39f5-a910-4a03-a888-6f0f1ee03445,ou=document,o=jans",
                                "selected": false,
                                "inum": "9d2f39f5-a910-4a03-a888-6f0f1ee03445",
                                "displayName": "kc-saml-plugin.jar",
                                "description": "/opt/jans/jetty/jans-config-api/",
                                "creationDate": "2024-03-14T12:53:00",
                                "jansModuleProperty": [
                                    "config-api",
                                    "jar",
                                    "/opt/jans/jetty/jans-config-api/custom/lib"
                                ],
                                "jansEnabled": true,
                                "baseDn": "inum=9d2f39f5-a910-4a03-a888-6f0f1ee03445,ou=document,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
  /api/v1/jans-assets/services:
    get:
      tags:
        - Jans Assets
      summary: Gets asset services
      description: Gets asset services
      operationId: get-asset-services
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
  /api/v1/jans-assets/asset-type:
    get:
      tags:
        - Jans Assets
      summary: Get valid asset types
      description: Get valid asset types
      operationId: get-asset-types
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-read'
  '/api/v1/jans-assets/service/{service-name}':
    post:
      tags:
        - Jans Assets
      summary: Load assets on server for a service
      description: Load assets on server for a service
      operationId: load-service-asset
      parameters:
        - name: service-name
          in: path
          description: Service Name
          required: true
          schema:
            type: string
      requestBody:
        description: String multipart form.
        content:
          multipart/form-data:
            schema:
              type: string
      responses:
        '200':
          description: Asset file loaded
          content:
            application/json:
              schema:
                type: string
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-write'
  /api/v1/jans-assets/upload:
    put:
      tags:
        - Jans Assets
      summary: Update existing asset
      description: Update existing asset
      operationId: put-asset
      requestBody:
        description: String multipart form.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetForm'
            examples:
              Response json example:
                description: Response json example
                value: "{\n    \"dn\": \"inum=ed901270-c0cd-43cf-a683-10795ff66349,ou=document,o=jans\",\n    \"selected\": false,\n    \"inum\": \"ed901270-c0cd-43cf-a683-10795ff66349\",\n    \"displayName\": \"janssen_dove_icon.png\",\n    \"description\": \"/opt/jans/jetty/jans-auth/custom/static\",\n\t\"jansModuleProperty\": [\n        \"agama\",\n        \"img\",\n        \"/opt/jans/jetty/jans-auth\"\n    ],\n    \"jansLevel\": \"1\",\n    \"jansRevision\": \"2\",\n    \"jansEnabled\": true,\n    \"baseDn\": \"inum=ed901270-c0cd-43cf-a683-10795ff66349,ou=document,o=jans\"\n}\n"
      responses:
        '200':
          description: Modified Asset
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                Response json example:
                  description: Response json example
                  value: "{\n    \"dn\": \"inum=ed901270-c0cd-43cf-a683-10795ff66349,ou=document,o=jans\",\n    \"selected\": false,\n    \"inum\": \"ed901270-c0cd-43cf-a683-10795ff66349\",\n    \"displayName\": \"janssen_dove_icon.png\",\n    \"description\": \"/opt/jans/jetty/jans-auth/custom/static\",\n\t\"jansModuleProperty\": [\n        \"agama\",\n        \"img\",\n        \"/opt/jans/jetty/jans-auth\"\n    ],\n    \"jansLevel\": \"1\",\n    \"jansRevision\": \"2\",\n    \"jansEnabled\": true,\n    \"baseDn\": \"inum=ed901270-c0cd-43cf-a683-10795ff66349,ou=document,o=jans\"\n}\n"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-write'
    post:
      tags:
        - Jans Assets
      summary: Upload new asset
      description: Upload new asset
      operationId: post-new-asset
      requestBody:
        description: String multipart form.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetForm'
            examples:
              Response json example:
                description: Response json example
                value: "{\n    \"displayName\": \"kc-saml-plugin.jar\",\n    \"description\": \"Config api pligin\",\n    \"document\":\"\",\n    \"jansModuleProperty\": [\n\t\t\"config-api\",\n\t\t\"jar\",\n\t\t\"/opt/jans/jetty/jans-config-api/custom/lib\"\n\t],\t\n    \"jansLevel\": \"1\",\n    \"jansRevision\": \"1\",\n    \"jansEnabled\": true,\n    \"jansAlias\": \"\"\n}\n"
      responses:
        '201':
          description: Newly created Asset
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                Response json example:
                  description: Response json example
                  value: "{\n    \"displayName\": \"kc-saml-plugin.jar\",\n    \"description\": \"Config api pligin\",\n    \"document\":\"\",\n    \"jansModuleProperty\": [\n\t\t\"config-api\",\n\t\t\"jar\",\n\t\t\"/opt/jans/jetty/jans-config-api/custom/lib\"\n\t],\t\n    \"jansLevel\": \"1\",\n    \"jansRevision\": \"1\",\n    \"jansEnabled\": true,\n    \"jansAlias\": \"\"\n}\n"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans_asset-write'
  /api/v1/attributes:
    get:
      tags:
        - Attribute
      summary: Gets a list of Jans attributes.
      description: Gets a list of Jans attributes.
      operationId: get-attributes
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: status
          in: query
          description: Status of the attribute
          schema:
            type: string
            default: all
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'adminCanEdit=true,dataType=string'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 78,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "inum=08E2,ou=attributes,o=jans",
                                "selected": false,
                                "inum": "08E2",
                                "name": "departmentNumber",
                                "displayName": "Department",
                                "description": "Organizational Department",
                                "origin": "jansCustomPerson",
                                "dataType": "string",
                                "editType": [
                                    "admin"
                                ],
                                "viewType": [
                                    "user",
                                    "admin"
                                ],
                                "claimName": "department_number",
                                "status": "inactive",
                                "saml1Uri": "urn:mace:dir:attribute-def:departmentNumber",
                                "saml2Uri": "urn:oid:2.16.840.1.113730.3.1.2",
                                "urn": "urn:mace:dir:attribute-def:departmentNumber",
                                "oxMultiValuedAttribute": false,
                                "custom": false,
                                "whitePagesCanView": false,
                                "adminCanEdit": true,
                                "userCanView": true,
                                "userCanEdit": false,
                                "adminCanAccess": true,
                                "adminCanView": true,
                                "userCanAccess": true,
                                "baseDn": "inum=08E2,ou=attributes,o=jans"
                            },
                            {
                                "dn": "inum=0C18,ou=attributes,o=jans",
                                "selected": false,
                                "inum": "0C18",
                                "name": "telephoneNumber",
                                "displayName": "Home Telephone Number",
                                "description": "Home Telephone Number",
                                "origin": "jansCustomPerson",
                                "dataType": "string",
                                "editType": [
                                    "user",
                                    "admin"
                                ],
                                "viewType": [
                                    "user",
                                    "admin"
                                ],
                                "claimName": "phone_number",
                                "status": "inactive",
                                "saml1Uri": "urn:mace:dir:attribute-def:telephoneNumber",
                                "saml2Uri": "urn:oid:2.5.4.20",
                                "urn": "urn:mace:dir:attribute-def:phone_number",
                                "oxMultiValuedAttribute": false,
                                "custom": false,
                                "whitePagesCanView": false,
                                "adminCanEdit": true,
                                "userCanView": true,
                                "userCanEdit": true,
                                "adminCanAccess": true,
                                "adminCanView": true,
                                "userCanAccess": true,
                                "baseDn": "inum=0C18,ou=attributes,o=jans"
                            }
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.readonly'
    put:
      tags:
        - Attribute
      summary: Updates an existing attribute
      description: Updates an existing attribute
      operationId: put-attributes
      requestBody:
        description: JansAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JansAttribute'
            examples:
              Request example:
                description: Request example
                value: |
                  {
                      "adminCanAccess": true,
                      "adminCanEdit": true,
                      "adminCanView": true,
                      "custom": false,
                      "dataType": "string",
                      "description": "QAAdded Attribute",
                      "displayName": "QAAdded Attribute",
                      "editType": [
                          "admin",
                          "user"
                      ],
                      "name": "qaattribute",
                      "origin": "jansPerson",
                      "jansMultivaluedAttr": false,
                      "status": "active",
                      "urn": "urn:mace:dir:attribute-def:qaattribute",
                      "userCanAccess": true,
                      "userCanEdit": true,
                      "userCanView": true,
                      "viewType": [
                          "admin",
                          "user"
                      ],
                      "whitePagesCanView": false
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JansAttribute'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "adminCanAccess": true,
                        "adminCanEdit": true,
                        "adminCanView": true,
                        "custom": false,
                        "dataType": "string",
                        "description": "QAAdded Attribute",
                        "displayName": "QAAdded Attribute",
                        "editType": [
                            "admin",
                            "user"
                        ],
                        "name": "qaattribute",
                        "origin": "jansPerson",
                        "jansMultivaluedAttr": false,
                        "status": "active",
                        "urn": "urn:mace:dir:attribute-def:qaattribute",
                        "userCanAccess": true,
                        "userCanEdit": true,
                        "userCanView": true,
                        "viewType": [
                            "admin",
                            "user"
                        ],
                        "whitePagesCanView": false
                    }
        '401':
          description: Unauthorized
        '406':
          description: NotAcceptable
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.write'
    post:
      tags:
        - Attribute
      summary: Adds a new attribute
      description: Adds a new attribute
      operationId: post-attributes
      requestBody:
        description: JansAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JansAttribute'
            examples:
              Request example:
                description: Request example
                value: |
                  {
                      "adminCanAccess": true,
                      "adminCanEdit": true,
                      "adminCanView": true,
                      "custom": false,
                      "dataType": "string",
                      "description": "QAAdded Attribute",
                      "displayName": "QAAdded Attribute",
                      "editType": [
                          "admin",
                          "user"
                      ],
                      "name": "qaattribute",
                      "origin": "jansPerson",
                      "jansMultivaluedAttr": false,
                      "status": "active",
                      "urn": "urn:mace:dir:attribute-def:qaattribute",
                      "userCanAccess": true,
                      "userCanEdit": true,
                      "userCanView": true,
                      "viewType": [
                          "admin",
                          "user"
                      ],
                      "whitePagesCanView": false
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JansAttribute'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "adminCanAccess": true,
                        "adminCanEdit": true,
                        "adminCanView": true,
                        "custom": false,
                        "dataType": "string",
                        "description": "QAAdded Attribute",
                        "displayName": "QAAdded Attribute",
                        "editType": [
                            "admin",
                            "user"
                        ],
                        "name": "qaattribute",
                        "origin": "jansPerson",
                        "jansMultivaluedAttr": false,
                        "status": "active",
                        "urn": "urn:mace:dir:attribute-def:qaattribute",
                        "userCanAccess": true,
                        "userCanEdit": true,
                        "userCanView": true,
                        "viewType": [
                            "admin",
                            "user"
                        ],
                        "whitePagesCanView": false
                    }
        '400':
          description: BadRequest
        '401':
          description: Unauthorized
        '406':
          description: NotAcceptable
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.write'
  '/api/v1/attributes/{inum}':
    get:
      tags:
        - Attribute
      summary: Gets an attribute based on inum
      description: Gets an attribute based on inum
      operationId: get-attributes-by-inum
      parameters:
        - name: inum
          in: path
          description: Attribute Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JansAttribute'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "dn": "inum=08E2,ou=attributes,o=jans",
                        "selected": false,
                        "inum": "08E2",
                        "name": "departmentNumber",
                        "displayName": "Department",
                        "description": "Organizational Department",
                        "origin": "jansCustomPerson",
                        "dataType": "string",
                        "editType": [
                            "admin"
                        ],
                        "viewType": [
                            "user",
                            "admin"
                        ],
                        "claimName": "department_number",
                        "status": "inactive",
                        "saml1Uri": "urn:mace:dir:attribute-def:departmentNumber",
                        "saml2Uri": "urn:oid:2.16.840.1.113730.3.1.2",
                        "urn": "urn:mace:dir:attribute-def:departmentNumber",
                        "oxMultiValuedAttribute": false,
                        "custom": false,
                        "whitePagesCanView": false,
                        "adminCanEdit": true,
                        "userCanView": true,
                        "userCanEdit": false,
                        "adminCanAccess": true,
                        "adminCanView": true,
                        "userCanAccess": true,
                        "baseDn": "inum=08E2,ou=attributes,o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.readonly'
    delete:
      tags:
        - Attribute
      summary: Deletes an attribute based on inum
      description: Deletes an attribute based on inum
      operationId: delete-attributes-by-inum
      parameters:
        - name: inum
          in: path
          description: Attribute Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.delete'
    patch:
      tags:
        - Attribute
      summary: Partially modify a JansAttribute
      description: Partially modify a JansAttribute
      operationId: patch-attributes-by-inum
      parameters:
        - name: inum
          in: path
          description: Attribute Id
          required: true
          schema:
            type: string
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PatchRequest'
            examples:
              Patch request example:
                description: Patch request example
                value: |
                  [ {op:replace, path: displayName, value: "CustomAttribute" } ]
      responses:
        '200':
          description: Updated JansAttribute
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JansAttribute'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "adminCanAccess": true,
                        "adminCanEdit": true,
                        "adminCanView": true,
                        "custom": false,
                        "dataType": "string",
                        "description": "QAAdded Attribute",
                        "displayName": "QAAdded Attribute",
                        "editType": [
                            "admin",
                            "user"
                        ],
                        "name": "qaattribute",
                        "origin": "jansPerson",
                        "jansMultivaluedAttr": false,
                        "status": "active",
                        "urn": "urn:mace:dir:attribute-def:qaattribute",
                        "userCanAccess": true,
                        "userCanEdit": true,
                        "userCanView": true,
                        "viewType": [
                            "admin",
                            "user"
                        ],
                        "whitePagesCanView": false
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/attributes.write'
  /api/v1/jans-auth-server/config:
    get:
      tags:
        - Configuration – Properties
      summary: Gets all Jans authorization server configuration properties.
      description: Gets all Jans authorization server configuration properties.
      operationId: get-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/config/properties.readonly'
    patch:
      tags:
        - Configuration – Properties
      summary: >-
        Partially modifies Jans authorization server Application configuration
        properties.
      description: >-
        Partially modifies Jans authorization server AppConfiguration
        properties.
      operationId: patch-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [

                  {"op":"add","path":"/authenticationFilters","value":[{}]},

                  {"op":"replace","path":"/useNestedJwtDuringEncryption","value":"true"},

                  {"op":"add","path":"/loggingLevel","value":"TRACE"}

                  ]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/config/properties.write'
  /api/v1/jans-auth-server/config/feature-flags:
    get:
      tags:
        - Configuration – Properties
      summary: Returns feature flags type configured for Jans authorization server.
      description: Returns feature flags type configured for Jans authorization server.
      operationId: get-feature-flag-type
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/config/properties.readonly'
  /api/v1/jans-auth-server/config/persistence:
    get:
      tags:
        - Configuration – Properties
      summary: Returns persistence type configured for Jans authorization server.
      description: Returns persistence type configured for Jans authorization server.
      operationId: get-properties-persistence
      responses:
        '200':
          description: Jans Authorization Server persistence type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistenceConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "persistenceType": "ldap"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/config/properties.readonly'
  /api/v1/config/cache:
    get:
      tags:
        - Cache Configuration
      summary: Returns cache configuration.
      description: Returns cache configuration.
      operationId: get-config-cache
      responses:
        '200':
          description: Cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "cacheProviderType": "NATIVE_PERSISTENCE",
                        "memcachedConfiguration": {
                            "servers": "localhost:11211",
                            "maxOperationQueueLength": 100000,
                            "bufferSize": 32768,
                            "defaultPutExpiration": 60,
                            "connectionFactoryType": "DEFAULT"
                        },
                        "inMemoryConfiguration": {
                            "defaultPutExpiration": 60
                        },
                        "redisConfiguration": {
                            "redisProviderType": "STANDALONE",
                            "servers": "localhost:6379",
                            "defaultPutExpiration": 60,
                            "useSSL": false,
                            "maxIdleConnections": 10,
                            "maxTotalConnections": 500,
                            "connectionTimeout": 3000,
                            "soTimeout": 3000,
                            "maxRetryAttempts": 5
                        },
                        "nativePersistenceConfiguration": {
                            "defaultPutExpiration": 60,
                            "defaultCleanupBatchSize": 10000,
                            "deleteExpiredOnGetRequest": false,
                            "disableAttemptUpdateBeforeInsert": false
                        }
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.readonly'
    patch:
      tags:
        - Cache Configuration
      summary: Patch cache configuration.
      description: Patch cache configuration
      operationId: patch-config-cache
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/memcachedConfiguration",
                  "value": {
                          "servers": "localhost:11211",
                          "maxOperationQueueLength": 100000,
                          "bufferSize": 32768,
                          "defaultPutExpiration":80,
                          "connectionFactoryType": "DEFAULT"
                      }}] 
      responses:
        '200':
          description: Cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "cacheProviderType": "NATIVE_PERSISTENCE",
                        "memcachedConfiguration": {
                            "servers": "localhost:11211",
                            "maxOperationQueueLength": 100000,
                            "bufferSize": 32768,
                            "defaultPutExpiration": 60,
                            "connectionFactoryType": "DEFAULT"
                        },
                        "inMemoryConfiguration": {
                            "defaultPutExpiration": 60
                        },
                        "redisConfiguration": {
                            "redisProviderType": "STANDALONE",
                            "servers": "localhost:6379",
                            "defaultPutExpiration": 60,
                            "useSSL": false,
                            "maxIdleConnections": 10,
                            "maxTotalConnections": 500,
                            "connectionTimeout": 3000,
                            "soTimeout": 3000,
                            "maxRetryAttempts": 5
                        },
                        "nativePersistenceConfiguration": {
                            "defaultPutExpiration": 60,
                            "defaultCleanupBatchSize": 10000,
                            "deleteExpiredOnGetRequest": false,
                            "disableAttemptUpdateBeforeInsert": false
                        }
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
  /api/v1/config/cache/in-memory:
    get:
      tags:
        - Cache Configuration – in-Memory
      summary: Returns in-Memory cache configuration.
      description: Returns in-Memory cache configuration.
      operationId: get-config-cache-in-memory
      responses:
        '200':
          description: In-Memory configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InMemoryConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.readonly'
    put:
      tags:
        - Cache Configuration – in-Memory
      summary: Updates in-Memory cache configuration.
      description: Updates in-Memory cache configuration
      operationId: put-config-cache-in-memory
      requestBody:
        description: inMemoryConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InMemoryConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "defaultPutExpiration": 60
                  }
      responses:
        '200':
          description: In-Memory cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InMemoryConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
    patch:
      tags:
        - Cache Configuration – in-Memory
      summary: Patch In-Memory cache configuration.
      description: Patch In-Memory cache configuration
      operationId: patch-config-cache-in-memory
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/defaultPutExpiration",
                  "value":80}] 
      responses:
        '200':
          description: In-Memory cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InMemoryConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
  /api/v1/config/cache/memcached:
    get:
      tags:
        - Cache Configuration – Memcached
      summary: Returns memcached cache configuration.
      description: Returns memcached cache configuration.
      operationId: get-config-cache-memcached
      responses:
        '200':
          description: Memcached configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemcachedConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "servers": "localhost:11211",
                        "maxOperationQueueLength": 100000,
                        "bufferSize": 32768,
                        "defaultPutExpiration": 80,
                        "connectionFactoryType": "DEFAULT"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.readonly'
    put:
      tags:
        - Cache Configuration – Memcached
      summary: Updates memcached cache configuration.
      description: Updates memcached cache configuration
      operationId: put-config-cache-memcached
      requestBody:
        description: Memcached Configuration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemcachedConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "servers": "localhost:11211",
                      "maxOperationQueueLength": 100000,
                      "bufferSize": 32768,
                      "defaultPutExpiration": 80,
                      "connectionFactoryType": "DEFAULT"
                  }
      responses:
        '200':
          description: Native persistence cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemcachedConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "servers": "localhost:11211",
                        "maxOperationQueueLength": 100000,
                        "bufferSize": 32768,
                        "defaultPutExpiration": 80,
                        "connectionFactoryType": "DEFAULT"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
    patch:
      tags:
        - Cache Configuration – Memcached
      summary: Patch memcached cache configuration.
      description: Patch memcached cache configuration
      operationId: patch-config-cache-memcached
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/maxOperationQueueLength",
                  "value":10001}] 
      responses:
        '200':
          description: Memcached cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemcachedConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "servers": "localhost:11211",
                        "maxOperationQueueLength": 100000,
                        "bufferSize": 32768,
                        "defaultPutExpiration": 80,
                        "connectionFactoryType": "DEFAULT"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
  /api/v1/config/cache/native-persistence:
    get:
      tags:
        - Cache Configuration – Native-Persistence
      summary: Returns native persistence cache configuration.
      description: Returns native persistence cache configuration.
      operationId: get-config-cache-native-persistence
      responses:
        '200':
          description: Native persistence configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NativePersistenceConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60,
                        "defaultCleanupBatchSize": 10000,
                        "deleteExpiredOnGetRequest": false,
                        "disableAttemptUpdateBeforeInsert": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.readonly'
    put:
      tags:
        - Cache Configuration – Native-Persistence
      summary: Updates native persistence cache configuration.
      description: Updates native persistence cache configuration
      operationId: put-config-cache-native-persistence
      requestBody:
        description: NativePersistenceConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NativePersistenceConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "defaultPutExpiration": 60,
                      "defaultCleanupBatchSize": 10000,
                      "deleteExpiredOnGetRequest": false,
                      "disableAttemptUpdateBeforeInsert": false
                  }
      responses:
        '200':
          description: Native persistence cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NativePersistenceConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60,
                        "defaultCleanupBatchSize": 10000,
                        "deleteExpiredOnGetRequest": false,
                        "disableAttemptUpdateBeforeInsert": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
    patch:
      tags:
        - Cache Configuration – Native-Persistence
      summary: Patch native persistence cache configuration.
      description: Patch native persistence cache configuration
      operationId: patch-config-cache-native-persistence
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/defaultCleanupBatchSize",
                  "value":10001}] 
      responses:
        '200':
          description: Native persistence cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NativePersistenceConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "defaultPutExpiration": 60,
                        "defaultCleanupBatchSize": 10000,
                        "deleteExpiredOnGetRequest": false,
                        "disableAttemptUpdateBeforeInsert": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
  /api/v1/config/cache/redis:
    get:
      tags:
        - Cache Configuration – Redis
      summary: Returns Redis cache configuration.
      description: Returns Redis cache configuration
      operationId: get-config-cache-redis
      responses:
        '200':
          description: Redis cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "redisProviderType": "STANDALONE",
                        "servers": "localhost:6379",
                        "defaultPutExpiration": 60,
                        "useSSL": false,
                        "maxIdleConnections": 10,
                        "maxTotalConnections": 500,
                        "connectionTimeout": 3000,
                        "soTimeout": 3000,
                        "maxRetryAttempts": 5
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.readonly'
    put:
      tags:
        - Cache Configuration – Redis
      summary: Updates Redis cache configuration.
      description: Updates Redis cache configuration
      operationId: put-config-cache-redis
      requestBody:
        description: RedisConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "redisProviderType": "STANDALONE",
                      "servers": "localhost:6379",
                      "defaultPutExpiration": 60,
                      "useSSL": false,
                      "maxIdleConnections": 10,
                      "maxTotalConnections": 500,
                      "connectionTimeout": 3000,
                      "soTimeout": 3000,
                      "maxRetryAttempts": 5
                  }
      responses:
        '200':
          description: Redis cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "redisProviderType": "STANDALONE",
                        "servers": "localhost:6379",
                        "defaultPutExpiration": 60,
                        "useSSL": false,
                        "maxIdleConnections": 10,
                        "maxTotalConnections": 500,
                        "connectionTimeout": 3000,
                        "soTimeout": 3000,
                        "maxRetryAttempts": 5
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
    patch:
      tags:
        - Cache Configuration – Redis
      summary: Patch Redis cache configuration.
      description: Patch Redis cache configuration
      operationId: patch-config-cache-redis
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/defaultPutExpiration",
                  "value":80}] 
      responses:
        '200':
          description: Redis cache configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "redisProviderType": "STANDALONE",
                        "servers": "localhost:6379",
                        "defaultPutExpiration": 60,
                        "useSSL": false,
                        "maxIdleConnections": 10,
                        "maxTotalConnections": 500,
                        "connectionTimeout": 3000,
                        "soTimeout": 3000,
                        "maxRetryAttempts": 5
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/cache.write'
  '/api/v1/clients/authorizations/{userId}/{clientId}/{username}':
    delete:
      tags:
        - Client Authorization
      summary: Revoke client authorization
      description: Revoke client authorizations
      operationId: delete-client-authorization
      parameters:
        - name: userId
          in: path
          description: User identifier
          required: true
          schema:
            type: string
        - name: clientId
          in: path
          description: Client identifier
          required: true
          schema:
            type: string
        - name: username
          in: path
          description: User name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/client/authorizations.delete'
  '/api/v1/clients/authorizations/{userId}':
    get:
      tags:
        - Client Authorization
      summary: Gets list of client authorization
      description: Gets list of client authorizations
      operationId: get-client-authorization
      parameters:
        - name: userId
          in: path
          description: User identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAuth'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "DeletableEntity{expirationDate=null, deletable=false} BaseEntry [dn=inum=3000.1e5c4db0-e01e-4e8c-9360-28cb6f0a8026,ou=clients,o=jans]": [
                            {
                                "dn": "inum=10B2,ou=scopes,o=jans",
                                "inum": "10B2",
                                "displayName": "view_username",
                                "id": "user_name",
                                "description": "View your local username in the Janssen Server.",
                                "scopeType": "openid",
                                "claims": [
                                    "inum=42E0,ou=attributes,o=jans"
                                ],
                                "defaultScope": false,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2023-03-31T12:03:39",
                                "umaType": false,
                                "baseDn": "inum=10B2,ou=scopes,o=jans"
                            },
                            {
                                "dn": "inum=43F1,ou=scopes,o=jans",
                                "inum": "43F1",
                                "displayName": "view_profile",
                                "id": "profile",
                                "description": "View your basic profile info.",
                                "scopeType": "openid",
                                "claims": [
                                    "inum=2B29,ou=attributes,o=jans",
                                    "inum=0C85,ou=attributes,o=jans",
                                    "inum=B4B0,ou=attributes,o=jans",
                                    "inum=A0E8,ou=attributes,o=jans",
                                    "inum=5EC6,ou=attributes,o=jans",
                                    "inum=B52A,ou=attributes,o=jans",
                                    "inum=64A0,ou=attributes,o=jans",
                                    "inum=EC3A,ou=attributes,o=jans",
                                    "inum=3B47,ou=attributes,o=jans",
                                    "inum=3692,ou=attributes,o=jans",
                                    "inum=98FC,ou=attributes,o=jans",
                                    "inum=A901,ou=attributes,o=jans",
                                    "inum=36D9,ou=attributes,o=jans",
                                    "inum=BE64,ou=attributes,o=jans",
                                    "inum=6493,ou=attributes,o=jans",
                                    "inum=4CF1,ou=attributes,o=jans",
                                    "inum=29DA,ou=attributes,o=jans"
                                ],
                                "defaultScope": false,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2023-03-31T12:03:39",
                                "umaType": false,
                                "baseDn": "inum=43F1,ou=scopes,o=jans"
                            },
                            {
                                "dn": "inum=F0C4,ou=scopes,o=jans",
                                "inum": "F0C4",
                                "displayName": "authenticate_openid_connect",
                                "id": "openid",
                                "description": "Authenticate using OpenID Connect.",
                                "scopeType": "openid",
                                "defaultScope": true,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2023-03-31T12:03:39",
                                "umaType": false,
                                "baseDn": "inum=F0C4,ou=scopes,o=jans"
                            },
                            {
                                "dn": "inum=341A,ou=scopes,o=jans",
                                "inum": "341A",
                                "displayName": "view_client",
                                "id": "clientinfo",
                                "description": "View the client info.",
                                "scopeType": "openid",
                                "claims": [
                                    "inum=2B29,ou=attributes,o=jans",
                                    "inum=29DA,ou=attributes,o=jans"
                                ],
                                "defaultScope": false,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2023-03-31T12:03:39",
                                "umaType": false,
                                "baseDn": "inum=341A,ou=scopes,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/client/authorizations.readonly'
  /api/v1/openid/clients:
    get:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Gets list of OpenID Connect clients
      description: Gets list of OpenID Connect clients
      operationId: get-oauth-openid-clients
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'applicationType=web,persistClientAuthorizations=true'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 8,
                        "entriesCount": 8,
                        "entries": [
                            {
                                "dn": "inum=1201.c091b1aa-4429-454e-8c80-bc11ed9bac0d,ou=clients,o=jans",
                                "clientSecret": "hm7fKhoxVfsR",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/.well-known/scim-configuration"
                                ],
                                "grantTypes": [
                                    "client_credentials"
                                ],
                                "applicationType": "native",
                                "clientName": "SCIM client",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=1200.485475,ou=scopes,o=jans",
                                    "inum=1200.EE9755,ou=scopes,o=jans",
                                    "inum=1200.57CC3F,ou=scopes,o=jans",
                                    "inum=1200.57EA2A,ou=scopes,o=jans",
                                    "inum=1200.C5C2EF,ou=scopes,o=jans",
                                    "inum=1200.369E7D,ou=scopes,o=jans",
                                    "inum=1200.472E10,ou=scopes,o=jans",
                                    "inum=1200.D8FE2A,ou=scopes,o=jans",
                                    "inum=1200.0F2F42,ou=scopes,o=jans",
                                    "inum=1200.A9B43A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "displayName": "SCIM client",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=1201.c091b1aa-4429-454e-8c80-bc11ed9bac0d,ou=clients,o=jans",
                                "inum": "1201.c091b1aa-4429-454e-8c80-bc11ed9bac0d"
                            },
                            {
                                "dn": "inum=1800.bc140317-7ee2-42a1-8b9e-c653c9a68927,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "d2U1A5Es6uuE",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/admin-ui",
                                    "http://localhost:4100"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": "Jans Config Api Client",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=C4F7,ou=scopes,o=jans",
                                    "inum=1200.485475,ou=scopes,o=jans",
                                    "inum=1200.EE9755,ou=scopes,o=jans",
                                    "inum=1800.01.1,ou=scopes,o=jans",
                                    "inum=1800.01.2,ou=scopes,o=jans",
                                    "inum=1800.03.1,ou=scopes,o=jans",
                                    "inum=1800.03.2,ou=scopes,o=jans",
                                    "inum=1800.01.3,ou=scopes,o=jans",
                                    "inum=1800.01.4,ou=scopes,o=jans",
                                    "inum=1800.01.5,ou=scopes,o=jans",
                                    "inum=1800.03.3,ou=scopes,o=jans",
                                    "inum=1800.01.6,ou=scopes,o=jans",
                                    "inum=1800.01.7,ou=scopes,o=jans",
                                    "inum=1800.01.8,ou=scopes,o=jans",
                                    "inum=1800.02.1,ou=scopes,o=jans",
                                    "inum=1800.01.9,ou=scopes,o=jans",
                                    "inum=1800.02.2,ou=scopes,o=jans",
                                    "inum=1800.01.10,ou=scopes,o=jans",
                                    "inum=1800.02.3,ou=scopes,o=jans",
                                    "inum=1800.01.11,ou=scopes,o=jans",
                                    "inum=1800.01.12,ou=scopes,o=jans",
                                    "inum=1800.01.13,ou=scopes,o=jans",
                                    "inum=1800.01.14,ou=scopes,o=jans",
                                    "inum=1800.01.15,ou=scopes,o=jans",
                                    "inum=1800.01.16,ou=scopes,o=jans",
                                    "inum=1800.01.17,ou=scopes,o=jans",
                                    "inum=1800.01.18,ou=scopes,o=jans",
                                    "inum=1800.01.19,ou=scopes,o=jans",
                                    "inum=1800.01.20,ou=scopes,o=jans",
                                    "inum=1800.01.21,ou=scopes,o=jans",
                                    "inum=1800.01.22,ou=scopes,o=jans",
                                    "inum=1800.01.23,ou=scopes,o=jans",
                                    "inum=1800.01.24,ou=scopes,o=jans",
                                    "inum=1800.01.25,ou=scopes,o=jans",
                                    "inum=1800.01.26,ou=scopes,o=jans",
                                    "inum=1800.01.27,ou=scopes,o=jans",
                                    "inum=1800.01.28,ou=scopes,o=jans",
                                    "inum=1800.01.29,ou=scopes,o=jans",
                                    "inum=1800.01.30,ou=scopes,o=jans",
                                    "inum=1800.01.31,ou=scopes,o=jans",
                                    "inum=1800.01.32,ou=scopes,o=jans",
                                    "inum=1800.01.33,ou=scopes,o=jans",
                                    "inum=1800.02.4,ou=scopes,o=jans",
                                    "inum=1800.02.5,ou=scopes,o=jans",
                                    "inum=1800.01.34,ou=scopes,o=jans",
                                    "inum=1800.02.6,ou=scopes,o=jans",
                                    "inum=1800.01.35,ou=scopes,o=jans",
                                    "inum=1800.01.36,ou=scopes,o=jans",
                                    "inum=1800.01.37,ou=scopes,o=jans",
                                    "inum=1800.01.38,ou=scopes,o=jans",
                                    "inum=1800.01.39,ou=scopes,o=jans",
                                    "inum=1800.01.40,ou=scopes,o=jans",
                                    "inum=1800.01.41,ou=scopes,o=jans",
                                    "inum=1800.01.42,ou=scopes,o=jans",
                                    "inum=1800.01.43,ou=scopes,o=jans",
                                    "inum=1800.01.44,ou=scopes,o=jans",
                                    "inum=1800.01.45,ou=scopes,o=jans",
                                    "inum=1800.01.46,ou=scopes,o=jans",
                                    "inum=1800.01.47,ou=scopes,o=jans",
                                    "inum=1800.04.1,ou=scopes,o=jans",
                                    "inum=1800.04.2,ou=scopes,o=jans",
                                    "inum=1800.04.12,ou=scopes,o=jans",
                                    "inum=1800.04.13,ou=scopes,o=jans",
                                    "inum=1800.04.3,ou=scopes,o=jans",
                                    "inum=1800.04.14,ou=scopes,o=jans",
                                    "inum=1800.04.4,ou=scopes,o=jans",
                                    "inum=1800.04.5,ou=scopes,o=jans",
                                    "inum=1800.04.6,ou=scopes,o=jans",
                                    "inum=1800.04.7,ou=scopes,o=jans",
                                    "inum=1800.04.8,ou=scopes,o=jans",
                                    "inum=1800.04.9,ou=scopes,o=jans",
                                    "inum=1800.04.10,ou=scopes,o=jans",
                                    "inum=1800.04.11,ou=scopes,o=jans",
                                    "inum=1800.01.49,ou=scopes,o=jans",
                                    "inum=1800.01.50,ou=scopes,o=jans",
                                    "inum=1800.01.51,ou=scopes,o=jans",
                                    "inum=1800.01.52,ou=scopes,o=jans",
                                    "inum=1800.01.53,ou=scopes,o=jans",
                                    "inum=1800.01.54,ou=scopes,o=jans",
                                    "inum=1800.01.55,ou=scopes,o=jans",
                                    "inum=1800.01.56,ou=scopes,o=jans",
                                    "inum=1800.01.57,ou=scopes,o=jans",
                                    "inum=1800.01.58,ou=scopes,o=jans",
                                    "inum=1800.01.59,ou=scopes,o=jans",
                                    "inum=1800.01.60,ou=scopes,o=jans",
                                    "inum=1800.01.61,ou=scopes,o=jans",
                                    "inum=1800.01.62,ou=scopes,o=jans",
                                    "inum=1800.01.63,ou=scopes,o=jans",
                                    "inum=1800.01.64,ou=scopes,o=jans",
                                    "inum=1800.01.65,ou=scopes,o=jans",
                                    "inum=1800.01.66,ou=scopes,o=jans",
                                    "inum=1800.01.67,ou=scopes,o=jans",
                                    "inum=1800.01.067,ou=scopes,o=jans",
                                    "inum=1800.01.68,ou=scopes,o=jans",
                                    "inum=1800.01.69,ou=scopes,o=jans",
                                    "inum=1800.01.70,ou=scopes,o=jans",
                                    "inum=1800.01.71,ou=scopes,o=jans",
                                    "inum=1800.01.72,ou=scopes,o=jans",
                                    "inum=1800.01.73,ou=scopes,o=jans",
                                    "inum=1800.01.74,ou=scopes,o=jans",
                                    "inum=1800.01.75,ou=scopes,o=jans",
                                    "inum=1800.01.76,ou=scopes,o=jans",
                                    "inum=1800.01.77,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "displayName": "Jans Config Api Client",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=1800.bc140317-7ee2-42a1-8b9e-c653c9a68927,ou=clients,o=jans",
                                "inum": "1800.bc140317-7ee2-42a1-8b9e-c653c9a68927"
                            },
                            {
                                "dn": "inum=2000.6b0541e3-acc7-4fb1-96c2-b704c3e65f9f,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "RyF17ubsbdTb",
                                "frontChannelLogoutUri": "http://localhost:4100/logout",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/admin",
                                    "http://localhost:4100"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials",
                                    "urn:ietf:params:oauth:grant-type:device_code"
                                ],
                                "applicationType": "web",
                                "clientName": "Jans TUI Client",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "userInfoSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "postLogoutRedirectUris": [
                                    "http://localhost:4100",
                                    "https://pujavs-definite-dory.gluu.info/admin"
                                ],
                                "scopes": [
                                    "inum=C4F7,ou=scopes,o=jans",
                                    "inum=C4F6,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=F0C4,ou=scopes,o=jans",
                                    "inum=B9D2-D6E5,ou=scopes,o=jans"
                                ],
                                "trustedClient": true,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "accessTokenLifetime": 2592000,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "updateTokenScriptDns": [
                                        "inum=2D3E.5A04,ou=scripts,o=jans"
                                    ],
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "displayName": "Jans TUI Client",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=2000.6b0541e3-acc7-4fb1-96c2-b704c3e65f9f,ou=clients,o=jans",
                                "inum": "2000.6b0541e3-acc7-4fb1-96c2-b704c3e65f9f"
                            },
                            {
                                "dn": "inum=2100.45b8d476-f4a7-4351-a936-d49623aedf85,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "oruB9zGAzlEs",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/admin-ui",
                                    "http://localhost:4100"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "client_credentials",
                                    "password",
                                    "refresh_token"
                                ],
                                "applicationType": "web",
                                "clientName": "Jans SCIM Client for SAML",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=F0C4,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "description": "Jans SCIM Client for SAML",
                                "displayName": "Jans SCIM Client for SAML",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=2100.45b8d476-f4a7-4351-a936-d49623aedf85,ou=clients,o=jans",
                                "inum": "2100.45b8d476-f4a7-4351-a936-d49623aedf85"
                            },
                            {
                                "dn": "inum=2101.90177254-fdc7-44bb-a2e2-56ad4c8b71f7,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "0m3XirLDM4u4",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/kc/realms/jans/kc-jans-authn-rest-bridge/auth-complete"
                                ],
                                "responseTypes": [
                                    "code",
                                    "token"
                                ],
                                "grantTypes": [
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": "kc_saml_openid",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "description": "Keycloak OpenID client used for SAML authentication",
                                "displayName": "kc_saml_openid",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=2101.90177254-fdc7-44bb-a2e2-56ad4c8b71f7,ou=clients,o=jans",
                                "inum": "2101.90177254-fdc7-44bb-a2e2-56ad4c8b71f7"
                            },
                            {
                                "dn": "inum=2102.bc5b8f1b-fa8b-405e-9063-9efb69d80146,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "hFZN4udFr6am",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/kc/realms/jans/dev/null"
                                ],
                                "responseTypes": [
                                    "token"
                                ],
                                "grantTypes": [
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": "kc_scheduler_api",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "description": "keycloak scheduler openid client used to obtain API keys to invoke the config-api",
                                "displayName": "kc_scheduler_api",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=2102.bc5b8f1b-fa8b-405e-9063-9efb69d80146,ou=clients,o=jans",
                                "inum": "2102.bc5b8f1b-fa8b-405e-9063-9efb69d80146"
                            },
                            {
                                "dn": "inum=2103.6eecd736-a1b0-4411-bfc1-c93e40fa328f,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "A4bnhfJ6qynt",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/kc/realms/master/kc-jans-authn-rest-bridge/auth-complete"
                                ],
                                "responseTypes": [
                                    "code",
                                    "token"
                                ],
                                "grantTypes": [
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": "kc_master_auth",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "description": "keycloak master realm client used to authenticate administrators",
                                "displayName": "kc_master_auth",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=2103.6eecd736-a1b0-4411-bfc1-c93e40fa328f,ou=clients,o=jans",
                                "inum": "2103.6eecd736-a1b0-4411-bfc1-c93e40fa328f"
                            },
                            {
                                "dn": "inum=3000.6a724dcb-2dd1-47be-9fcd-981b83556965,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "4MfT17z8Bt1O",
                                "frontChannelLogoutUri": "https://pujavs-definite-dory.gluu.info/jans-casa/autologout",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/jans-casa"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": "Client for Casa",
                                "clientNameLocalized": {},
                                "logoUriLocalized": {},
                                "clientUriLocalized": {},
                                "policyUriLocalized": {},
                                "tosUriLocalized": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "userInfoSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "postLogoutRedirectUris": [
                                    "https://pujavs-definite-dory.gluu.info/jans-casa/bye.zul"
                                ],
                                "scopes": [
                                    "inum=F0C4,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=10B2,ou=scopes,o=jans",
                                    "inum=341A,ou=scopes,o=jans",
                                    "inum=3000.01.1,ou=scopes,o=jans",
                                    "inum=3000.01.2,ou=scopes,o=jans",
                                    "inum=3000.01.3,ou=scopes,o=jans"
                                ],
                                "trustedClient": true,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "dpopBoundAccessToken": false,
                                    "jansDefaultPromptLogin": false,
                                    "minimumAcrLevel": -1
                                },
                                "displayName": "Client for Casa",
                                "allAuthenticationMethods": [
                                    "client_secret_basic"
                                ],
                                "authenticationMethod": "client_secret_basic",
                                "baseDn": "inum=3000.6a724dcb-2dd1-47be-9fcd-981b83556965,ou=clients,o=jans",
                                "inum": "3000.6a724dcb-2dd1-47be-9fcd-981b83556965"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.readonly'
    put:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Update OpenId Connect client
      description: Update OpenId Connect client
      operationId: put-oauth-openid-client
      requestBody:
        description: OpenID Connect Client object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "dn": "inum=f8c1a111-0919-47e8-a4d4-f7c18f73a644,ou=clients,o=jans",
                      "baseDn": "inum=f8c1a111-0919-47e8-a4d4-f7c18f73a644,ou=clients,o=jans",
                      "inum": "f8c1a111-0919-47e8-a4d4-f7c18f73a644",
                      "deletable": false,
                      "clientSecret": "test1234",
                      "frontChannelLogoutSessionRequired": false,
                      "redirectUris": [
                          "https://jans.server2/admin-ui",
                          "http://localhost:4100"
                      ],
                      "responseTypes": [
                          "code"
                      ],
                      "grantTypes": [
                          "authorization_code",
                          "refresh_token",
                          "client_credentials"
                      ],
                      "applicationType": "web",
                      "clientName": "",
                      "logoUri": "",
                      "clientUri": "",
                      "policyUri":"",
                      "tosUri": "",
                      "subjectType": "pairwise",
                      "idTokenSignedResponseAlg": "RS256",
                      "tokenEndpointAuthMethod": "client_secret_basic",
                      "scopes": [
                          "inum=C4F7,ou=scopes,o=jans"
                      ],
                      "trustedClient": false,
                      "persistClientAuthorizations": true,
                      "includeClaimsInIdToken": false,
                      "customAttributes": [
                          {
                              "name": "displayName",
                              "multiValued": false,
                              "values": [
                                  "Api Client"
                              ],
                              "value": "Api Client",
                              "displayValue": "Api Client"
                          }
                      ],
                      "customObjectClasses": [
                          "top"
                      ],
                      "rptAsJwt": false,
                      "accessTokenAsJwt": false,
                      "accessTokenSigningAlg": "RS256",
                      "disabled": false,
                      "attributes": {
                          "runIntrospectionScriptBeforeJwtCreation": false,
                          "keepClientAuthorizationAfterExpiration": false,
                          "allowSpontaneousScopes": false,
                          "backchannelLogoutSessionRequired": false,
                          "parLifetime": 600,
                          "requirePar": false,
                          "jansDefaultPromptLogin": false
                      },
                      "tokenBindingSupported": false,
                      "authenticationMethod": "client_secret_basic",
                      "displayName": "Api Client"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "deletable": false,
                        "clientSecret": "WZMK8thDpvw1xtE0N+SbXA==",
                        "frontChannelLogoutSessionRequired": false,
                        "redirectUris": [
                            "https://jans.server2/admin-ui",
                            "http://localhost:4100"
                        ],
                        "responseTypes": [
                            "code"
                        ],
                        "grantTypes": [
                            "authorization_code",
                            "refresh_token",
                            "client_credentials"
                        ],
                        "applicationType": "web",
                        "clientName": "Jans Config Api Client",
                        "logoUri": "",
                        "clientUri": "",
                        "policyUri": "",
                        "tosUri": "",
                        "subjectType": "pairwise",
                        "idTokenSignedResponseAlg": "RS256",
                        "tokenEndpointAuthMethod": "client_secret_basic",
                        "scopes": [
                            "inum=C4F7,ou=scopes,o=jans",
                            "inum=1200.487800,ou=scopes,o=jans",
                            "inum=1200.9CEE5C,ou=scopes,o=jans",
                            "inum=1800.FFE5C0,ou=scopes,o=jans",
                            "inum=1800.472951,ou=scopes,o=jans",
                            "inum=1800.556F45,ou=scopes,o=jans",
                            "inum=1800.77FB4F,ou=scopes,o=jans",
                            "inum=1800.AA8DFE,ou=scopes,o=jans",
                            "inum=1800.CD5B72,ou=scopes,o=jans",
                            "inum=1800.CBCF52,ou=scopes,o=jans",
                            "inum=1800.12284F,ou=scopes,o=jans",
                            "inum=1800.141B26,ou=scopes,o=jans",
                            "inum=1800.A018AC,ou=scopes,o=jans",
                            "inum=1800.6E4456,ou=scopes,o=jans",
                            "inum=1800.55499D,ou=scopes,o=jans",
                            "inum=1800.E730AA,ou=scopes,o=jans",
                            "inum=1800.097318,ou=scopes,o=jans",
                            "inum=1800.04CF24,ou=scopes,o=jans",
                            "inum=1800.F963F9,ou=scopes,o=jans",
                            "inum=1800.31F580,ou=scopes,o=jans",
                            "inum=1800.E512E3,ou=scopes,o=jans",
                            "inum=1800.E65DC6,ou=scopes,o=jans",
                            "inum=1800.3C1F46,ou=scopes,o=jans",
                            "inum=1800.20D48C,ou=scopes,o=jans",
                            "inum=1800.4601AA,ou=scopes,o=jans",
                            "inum=1800.A9B842,ou=scopes,o=jans",
                            "inum=1800.864485,ou=scopes,o=jans",
                            "inum=1800.F0B654,ou=scopes,o=jans",
                            "inum=1800.45F1D7,ou=scopes,o=jans",
                            "inum=1800.B78FA5,ou=scopes,o=jans",
                            "inum=1800.E3D7E0,ou=scopes,o=jans",
                            "inum=1800.E212DC,ou=scopes,o=jans",
                            "inum=1800.94F80F,ou=scopes,o=jans",
                            "inum=1800.9F96F3,ou=scopes,o=jans",
                            "inum=1800.CB50EC,ou=scopes,o=jans",
                            "inum=1800.1CA946,ou=scopes,o=jans",
                            "inum=1800.18231E,ou=scopes,o=jans",
                            "inum=1800.C25D78,ou=scopes,o=jans",
                            "inum=1800.12B340,ou=scopes,o=jans",
                            "inum=1800.7A78C3,ou=scopes,o=jans",
                            "inum=1800.ECB839,ou=scopes,o=jans",
                            "inum=1800.62579C,ou=scopes,o=jans",
                            "inum=1800.29B156,ou=scopes,o=jans",
                            "inum=1800.9DC774,ou=scopes,o=jans",
                            "inum=1800.71BA21,ou=scopes,o=jans",
                            "inum=1800.FC35D2,ou=scopes,o=jans",
                            "inum=1800.F8CA5F,ou=scopes,o=jans",
                            "inum=1800.D92553,ou=scopes,o=jans",
                            "inum=1800.08CB80,ou=scopes,o=jans",
                            "inum=1800.DF434B,ou=scopes,o=jans",
                            "inum=1800.127954,ou=scopes,o=jans",
                            "inum=1800.E7CB8C,ou=scopes,o=jans"
                        ],
                        "trustedClient": false,
                        "persistClientAuthorizations": true,
                        "includeClaimsInIdToken": false,
                        "customAttributes": [
                            {
                                "name": "displayName",
                                "multiValued": false,
                                "values": [
                                    "Jans Config Api Client"
                                ],
                                "value": "Jans Config Api Client",
                                "displayValue": "Jans Config Api Client"
                            }
                        ],
                        "customObjectClasses": [
                            "top"
                        ],
                        "rptAsJwt": false,
                        "accessTokenAsJwt": false,
                        "accessTokenSigningAlg": "RS256",
                        "disabled": false,
                        "attributes": {
                            "runIntrospectionScriptBeforeJwtCreation": false,
                            "keepClientAuthorizationAfterExpiration": false,
                            "allowSpontaneousScopes": false,
                            "backchannelLogoutSessionRequired": false,
                            "parLifetime": 600,
                            "requirePar": false,
                            "jansDefaultPromptLogin": false
                        },
                        "tokenBindingSupported": false,
                        "authenticationMethod": "client_secret_basic",
                        "displayName": "Jans Config Api Client",
                        "baseDn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "inum": "1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.write'
    post:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Create new OpenId Connect client
      description: Create new OpenId Connect client
      operationId: post-oauth-openid-client
      requestBody:
        description: OpenID Connect Client object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "deletable": false,
                      "clientSecret": "test1234",
                      "frontChannelLogoutSessionRequired": false,
                      "redirectUris": [
                          "https://jans.server2/admin-ui",
                          "http://localhost:4100"
                      ],
                      "responseTypes": [
                          "code"
                      ],
                      "grantTypes": [
                          "authorization_code",
                          "refresh_token",
                          "client_credentials"
                      ],
                      "applicationType": "web",
                      "clientName": "",
                      "logoUri": "",
                      "clientUri": "",
                      "policyUri":"",
                      "tosUri": "",
                      "subjectType": "pairwise",
                      "idTokenSignedResponseAlg": "RS256",
                      "tokenEndpointAuthMethod": "client_secret_basic",
                      "scopes": [
                          "inum=C4F7,ou=scopes,o=jans"
                      ],
                      "trustedClient": false,
                      "persistClientAuthorizations": true,
                      "includeClaimsInIdToken": false,
                      "customAttributes": [
                          {
                              "name": "displayName",
                              "multiValued": false,
                              "values": [
                                  "Api Client"
                              ],
                              "value": "Api Client",
                              "displayValue": "Api Client"
                          }
                      ],
                      "customObjectClasses": [
                          "top"
                      ],
                      "rptAsJwt": false,
                      "accessTokenAsJwt": false,
                      "accessTokenSigningAlg": "RS256",
                      "disabled": false,
                      "attributes": {
                          "runIntrospectionScriptBeforeJwtCreation": false,
                          "keepClientAuthorizationAfterExpiration": false,
                          "allowSpontaneousScopes": false,
                          "backchannelLogoutSessionRequired": false,
                          "parLifetime": 600,
                          "requirePar": false,
                          "jansDefaultPromptLogin": false
                      },
                      "tokenBindingSupported": false,
                      "authenticationMethod": "client_secret_basic",
                      "displayName": "Api Client"
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "deletable": false,
                        "clientSecret": "WZMK8thDpvw1xtE0N+SbXA==",
                        "frontChannelLogoutSessionRequired": false,
                        "redirectUris": [
                            "https://jans.server2/admin-ui",
                            "http://localhost:4100"
                        ],
                        "responseTypes": [
                            "code"
                        ],
                        "grantTypes": [
                            "authorization_code",
                            "refresh_token",
                            "client_credentials"
                        ],
                        "applicationType": "web",
                        "clientName": "Jans Config Api Client",
                        "logoUri": "",
                        "clientUri": "",
                        "policyUri": "",
                        "tosUri": "",
                        "subjectType": "pairwise",
                        "idTokenSignedResponseAlg": "RS256",
                        "tokenEndpointAuthMethod": "client_secret_basic",
                        "scopes": [
                            "inum=C4F7,ou=scopes,o=jans",
                            "inum=1200.487800,ou=scopes,o=jans",
                            "inum=1200.9CEE5C,ou=scopes,o=jans",
                            "inum=1800.FFE5C0,ou=scopes,o=jans",
                            "inum=1800.472951,ou=scopes,o=jans",
                            "inum=1800.556F45,ou=scopes,o=jans",
                            "inum=1800.77FB4F,ou=scopes,o=jans",
                            "inum=1800.AA8DFE,ou=scopes,o=jans",
                            "inum=1800.CD5B72,ou=scopes,o=jans",
                            "inum=1800.CBCF52,ou=scopes,o=jans",
                            "inum=1800.12284F,ou=scopes,o=jans",
                            "inum=1800.141B26,ou=scopes,o=jans",
                            "inum=1800.A018AC,ou=scopes,o=jans",
                            "inum=1800.6E4456,ou=scopes,o=jans",
                            "inum=1800.55499D,ou=scopes,o=jans",
                            "inum=1800.E730AA,ou=scopes,o=jans",
                            "inum=1800.097318,ou=scopes,o=jans",
                            "inum=1800.04CF24,ou=scopes,o=jans",
                            "inum=1800.F963F9,ou=scopes,o=jans",
                            "inum=1800.31F580,ou=scopes,o=jans",
                            "inum=1800.E512E3,ou=scopes,o=jans",
                            "inum=1800.E65DC6,ou=scopes,o=jans",
                            "inum=1800.3C1F46,ou=scopes,o=jans",
                            "inum=1800.20D48C,ou=scopes,o=jans",
                            "inum=1800.4601AA,ou=scopes,o=jans",
                            "inum=1800.A9B842,ou=scopes,o=jans",
                            "inum=1800.864485,ou=scopes,o=jans",
                            "inum=1800.F0B654,ou=scopes,o=jans",
                            "inum=1800.45F1D7,ou=scopes,o=jans",
                            "inum=1800.B78FA5,ou=scopes,o=jans",
                            "inum=1800.E3D7E0,ou=scopes,o=jans",
                            "inum=1800.E212DC,ou=scopes,o=jans",
                            "inum=1800.94F80F,ou=scopes,o=jans",
                            "inum=1800.9F96F3,ou=scopes,o=jans",
                            "inum=1800.CB50EC,ou=scopes,o=jans",
                            "inum=1800.1CA946,ou=scopes,o=jans",
                            "inum=1800.18231E,ou=scopes,o=jans",
                            "inum=1800.C25D78,ou=scopes,o=jans",
                            "inum=1800.12B340,ou=scopes,o=jans",
                            "inum=1800.7A78C3,ou=scopes,o=jans",
                            "inum=1800.ECB839,ou=scopes,o=jans",
                            "inum=1800.62579C,ou=scopes,o=jans",
                            "inum=1800.29B156,ou=scopes,o=jans",
                            "inum=1800.9DC774,ou=scopes,o=jans",
                            "inum=1800.71BA21,ou=scopes,o=jans",
                            "inum=1800.FC35D2,ou=scopes,o=jans",
                            "inum=1800.F8CA5F,ou=scopes,o=jans",
                            "inum=1800.D92553,ou=scopes,o=jans",
                            "inum=1800.08CB80,ou=scopes,o=jans",
                            "inum=1800.DF434B,ou=scopes,o=jans",
                            "inum=1800.127954,ou=scopes,o=jans",
                            "inum=1800.E7CB8C,ou=scopes,o=jans"
                        ],
                        "trustedClient": false,
                        "persistClientAuthorizations": true,
                        "includeClaimsInIdToken": false,
                        "customAttributes": [
                            {
                                "name": "displayName",
                                "multiValued": false,
                                "values": [
                                    "Jans Config Api Client"
                                ],
                                "value": "Jans Config Api Client",
                                "displayValue": "Jans Config Api Client"
                            }
                        ],
                        "customObjectClasses": [
                            "top"
                        ],
                        "rptAsJwt": false,
                        "accessTokenAsJwt": false,
                        "accessTokenSigningAlg": "RS256",
                        "disabled": false,
                        "attributes": {
                            "runIntrospectionScriptBeforeJwtCreation": false,
                            "keepClientAuthorizationAfterExpiration": false,
                            "allowSpontaneousScopes": false,
                            "backchannelLogoutSessionRequired": false,
                            "parLifetime": 600,
                            "requirePar": false,
                            "jansDefaultPromptLogin": false
                        },
                        "tokenBindingSupported": false,
                        "authenticationMethod": "client_secret_basic",
                        "displayName": "Jans Config Api Client",
                        "baseDn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "inum": "1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6"
                    }
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.write'
  '/api/v1/openid/clients/{inum}':
    get:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Get OpenId Connect Client by Inum
      description: Get OpenId Connect Client by Inum
      operationId: get-oauth-openid-clients-by-inum
      parameters:
        - name: inum
          in: path
          description: Client identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "deletable": false,
                        "clientSecret": "WZMK8thDpvw1xtE0N+SbXA==",
                        "frontChannelLogoutSessionRequired": false,
                        "redirectUris": [
                            "https://jans.server2/admin-ui",
                            "http://localhost:4100"
                        ],
                        "responseTypes": [
                            "code"
                        ],
                        "grantTypes": [
                            "authorization_code",
                            "refresh_token",
                            "client_credentials"
                        ],
                        "applicationType": "web",
                        "clientName": "Jans Config Api Client",
                        "logoUri": "",
                        "clientUri": "",
                        "policyUri": "",
                        "tosUri": "",
                        "subjectType": "pairwise",
                        "idTokenSignedResponseAlg": "RS256",
                        "tokenEndpointAuthMethod": "client_secret_basic",
                        "scopes": [
                            "inum=C4F7,ou=scopes,o=jans",
                            "inum=1200.487800,ou=scopes,o=jans",
                            "inum=1200.9CEE5C,ou=scopes,o=jans",
                            "inum=1800.FFE5C0,ou=scopes,o=jans",
                            "inum=1800.472951,ou=scopes,o=jans",
                            "inum=1800.556F45,ou=scopes,o=jans",
                            "inum=1800.77FB4F,ou=scopes,o=jans",
                            "inum=1800.AA8DFE,ou=scopes,o=jans",
                            "inum=1800.CD5B72,ou=scopes,o=jans",
                            "inum=1800.CBCF52,ou=scopes,o=jans",
                            "inum=1800.12284F,ou=scopes,o=jans",
                            "inum=1800.141B26,ou=scopes,o=jans",
                            "inum=1800.A018AC,ou=scopes,o=jans",
                            "inum=1800.6E4456,ou=scopes,o=jans",
                            "inum=1800.55499D,ou=scopes,o=jans",
                            "inum=1800.E730AA,ou=scopes,o=jans",
                            "inum=1800.097318,ou=scopes,o=jans",
                            "inum=1800.04CF24,ou=scopes,o=jans",
                            "inum=1800.F963F9,ou=scopes,o=jans",
                            "inum=1800.31F580,ou=scopes,o=jans",
                            "inum=1800.E512E3,ou=scopes,o=jans",
                            "inum=1800.E65DC6,ou=scopes,o=jans",
                            "inum=1800.3C1F46,ou=scopes,o=jans",
                            "inum=1800.20D48C,ou=scopes,o=jans",
                            "inum=1800.4601AA,ou=scopes,o=jans",
                            "inum=1800.A9B842,ou=scopes,o=jans",
                            "inum=1800.864485,ou=scopes,o=jans",
                            "inum=1800.F0B654,ou=scopes,o=jans",
                            "inum=1800.45F1D7,ou=scopes,o=jans",
                            "inum=1800.B78FA5,ou=scopes,o=jans",
                            "inum=1800.E3D7E0,ou=scopes,o=jans",
                            "inum=1800.E212DC,ou=scopes,o=jans",
                            "inum=1800.94F80F,ou=scopes,o=jans",
                            "inum=1800.9F96F3,ou=scopes,o=jans",
                            "inum=1800.CB50EC,ou=scopes,o=jans",
                            "inum=1800.1CA946,ou=scopes,o=jans",
                            "inum=1800.18231E,ou=scopes,o=jans",
                            "inum=1800.C25D78,ou=scopes,o=jans",
                            "inum=1800.12B340,ou=scopes,o=jans",
                            "inum=1800.7A78C3,ou=scopes,o=jans",
                            "inum=1800.ECB839,ou=scopes,o=jans",
                            "inum=1800.62579C,ou=scopes,o=jans",
                            "inum=1800.29B156,ou=scopes,o=jans",
                            "inum=1800.9DC774,ou=scopes,o=jans",
                            "inum=1800.71BA21,ou=scopes,o=jans",
                            "inum=1800.FC35D2,ou=scopes,o=jans",
                            "inum=1800.F8CA5F,ou=scopes,o=jans",
                            "inum=1800.D92553,ou=scopes,o=jans",
                            "inum=1800.08CB80,ou=scopes,o=jans",
                            "inum=1800.DF434B,ou=scopes,o=jans",
                            "inum=1800.127954,ou=scopes,o=jans",
                            "inum=1800.E7CB8C,ou=scopes,o=jans"
                        ],
                        "trustedClient": false,
                        "persistClientAuthorizations": true,
                        "includeClaimsInIdToken": false,
                        "customAttributes": [
                            {
                                "name": "displayName",
                                "multiValued": false,
                                "values": [
                                    "Jans Config Api Client"
                                ],
                                "value": "Jans Config Api Client",
                                "displayValue": "Jans Config Api Client"
                            }
                        ],
                        "customObjectClasses": [
                            "top"
                        ],
                        "rptAsJwt": false,
                        "accessTokenAsJwt": false,
                        "accessTokenSigningAlg": "RS256",
                        "disabled": false,
                        "attributes": {
                            "runIntrospectionScriptBeforeJwtCreation": false,
                            "keepClientAuthorizationAfterExpiration": false,
                            "allowSpontaneousScopes": false,
                            "backchannelLogoutSessionRequired": false,
                            "parLifetime": 600,
                            "requirePar": false,
                            "jansDefaultPromptLogin": false
                        },
                        "tokenBindingSupported": false,
                        "authenticationMethod": "client_secret_basic",
                        "displayName": "Jans Config Api Client",
                        "baseDn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "inum": "1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.readonly'
    delete:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Delete OpenId Connect client
      description: Delete OpenId Connect client
      operationId: delete-oauth-openid-client-by-inum
      parameters:
        - name: inum
          in: path
          description: Client identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.delete'
    patch:
      tags:
        - OAuth - OpenID Connect - Clients
      summary: Patch OpenId Connect client
      description: Patch OpenId Connect client
      operationId: patch-oauth-openid-client-by-inum
      parameters:
        - name: inum
          in: path
          description: Client identifier
          required: true
          schema:
            type: string
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/responseTypes",
                  "value":["code","token"]}] 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "deletable": false,
                        "clientSecret": "WZMK8thDpvw1xtE0N+SbXA==",
                        "frontChannelLogoutSessionRequired": false,
                        "redirectUris": [
                            "https://jans.server2/admin-ui",
                            "http://localhost:4100"
                        ],
                        "responseTypes": [
                            "code"
                        ],
                        "grantTypes": [
                            "authorization_code",
                            "refresh_token",
                            "client_credentials"
                        ],
                        "applicationType": "web",
                        "clientName": "Jans Config Api Client",
                        "logoUri": "",
                        "clientUri": "",
                        "policyUri": "",
                        "tosUri": "",
                        "subjectType": "pairwise",
                        "idTokenSignedResponseAlg": "RS256",
                        "tokenEndpointAuthMethod": "client_secret_basic",
                        "scopes": [
                            "inum=C4F7,ou=scopes,o=jans",
                            "inum=1200.487800,ou=scopes,o=jans",
                            "inum=1200.9CEE5C,ou=scopes,o=jans",
                            "inum=1800.FFE5C0,ou=scopes,o=jans",
                            "inum=1800.472951,ou=scopes,o=jans",
                            "inum=1800.556F45,ou=scopes,o=jans",
                            "inum=1800.77FB4F,ou=scopes,o=jans",
                            "inum=1800.AA8DFE,ou=scopes,o=jans",
                            "inum=1800.CD5B72,ou=scopes,o=jans",
                            "inum=1800.CBCF52,ou=scopes,o=jans",
                            "inum=1800.12284F,ou=scopes,o=jans",
                            "inum=1800.141B26,ou=scopes,o=jans",
                            "inum=1800.A018AC,ou=scopes,o=jans",
                            "inum=1800.6E4456,ou=scopes,o=jans",
                            "inum=1800.55499D,ou=scopes,o=jans",
                            "inum=1800.E730AA,ou=scopes,o=jans",
                            "inum=1800.097318,ou=scopes,o=jans",
                            "inum=1800.04CF24,ou=scopes,o=jans",
                            "inum=1800.F963F9,ou=scopes,o=jans",
                            "inum=1800.31F580,ou=scopes,o=jans",
                            "inum=1800.E512E3,ou=scopes,o=jans",
                            "inum=1800.E65DC6,ou=scopes,o=jans",
                            "inum=1800.3C1F46,ou=scopes,o=jans",
                            "inum=1800.20D48C,ou=scopes,o=jans",
                            "inum=1800.4601AA,ou=scopes,o=jans",
                            "inum=1800.A9B842,ou=scopes,o=jans",
                            "inum=1800.864485,ou=scopes,o=jans",
                            "inum=1800.F0B654,ou=scopes,o=jans",
                            "inum=1800.45F1D7,ou=scopes,o=jans",
                            "inum=1800.B78FA5,ou=scopes,o=jans",
                            "inum=1800.E3D7E0,ou=scopes,o=jans",
                            "inum=1800.E212DC,ou=scopes,o=jans",
                            "inum=1800.94F80F,ou=scopes,o=jans",
                            "inum=1800.9F96F3,ou=scopes,o=jans",
                            "inum=1800.CB50EC,ou=scopes,o=jans",
                            "inum=1800.1CA946,ou=scopes,o=jans",
                            "inum=1800.18231E,ou=scopes,o=jans",
                            "inum=1800.C25D78,ou=scopes,o=jans",
                            "inum=1800.12B340,ou=scopes,o=jans",
                            "inum=1800.7A78C3,ou=scopes,o=jans",
                            "inum=1800.ECB839,ou=scopes,o=jans",
                            "inum=1800.62579C,ou=scopes,o=jans",
                            "inum=1800.29B156,ou=scopes,o=jans",
                            "inum=1800.9DC774,ou=scopes,o=jans",
                            "inum=1800.71BA21,ou=scopes,o=jans",
                            "inum=1800.FC35D2,ou=scopes,o=jans",
                            "inum=1800.F8CA5F,ou=scopes,o=jans",
                            "inum=1800.D92553,ou=scopes,o=jans",
                            "inum=1800.08CB80,ou=scopes,o=jans",
                            "inum=1800.DF434B,ou=scopes,o=jans",
                            "inum=1800.127954,ou=scopes,o=jans",
                            "inum=1800.E7CB8C,ou=scopes,o=jans"
                        ],
                        "trustedClient": false,
                        "persistClientAuthorizations": true,
                        "includeClaimsInIdToken": false,
                        "customAttributes": [
                            {
                                "name": "displayName",
                                "multiValued": false,
                                "values": [
                                    "Jans Config Api Client"
                                ],
                                "value": "Jans Config Api Client",
                                "displayValue": "Jans Config Api Client"
                            }
                        ],
                        "customObjectClasses": [
                            "top"
                        ],
                        "rptAsJwt": false,
                        "accessTokenAsJwt": false,
                        "accessTokenSigningAlg": "RS256",
                        "disabled": false,
                        "attributes": {
                            "runIntrospectionScriptBeforeJwtCreation": false,
                            "keepClientAuthorizationAfterExpiration": false,
                            "allowSpontaneousScopes": false,
                            "backchannelLogoutSessionRequired": false,
                            "parLifetime": 600,
                            "requirePar": false,
                            "jansDefaultPromptLogin": false
                        },
                        "tokenBindingSupported": false,
                        "authenticationMethod": "client_secret_basic",
                        "displayName": "Jans Config Api Client",
                        "baseDn": "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                        "inum": "1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/openid/clients.write'
  /api/v1/api-config:
    get:
      tags:
        - Configuration – Config API
      summary: Gets config-api configuration properties.
      description: Gets config-api configuration properties.
      operationId: get-config-api-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/properties.readonly'
    patch:
      tags:
        - Configuration – Config API
      summary: Partially modifies config-api configuration properties.
      description: Partially modifies config-api Configuration properties.
      operationId: patch-config-api-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiAppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/properties.write'
  /api/v1/config/smtp:
    get:
      tags:
        - Configuration – SMTP
      summary: Returns SMTP server configuration
      description: Returns SMTP server configuration
      operationId: get-config-smtp
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "valid": false,
                        "port": 0,
                        "requires_ssl": false,
                        "trust_host": false,
                        "requires_authentication": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/smtp.readonly'
    put:
      tags:
        - Configuration – SMTP
      summary: Updates SMTP server configuration
      description: Updates SMTP server configuration
      operationId: put-config-smtp
      requestBody:
        description: SmtpConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "valid": true,
                      "host": "localhost",
                      "port": 260,
                      "requires_ssl": true,
                      "trust_host": true,
                      "from_name": "John",
                      "from_email_address": "john@grow.org",
                      "requires_authentication": true,
                      "user_name": "smtp_user",
                      "password": "password"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "valid": false,
                        "port": 0,
                        "requires_ssl": false,
                        "trust_host": false,
                        "requires_authentication": false
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/smtp.write'
    post:
      tags:
        - Configuration – SMTP
      summary: Adds SMTP server configuration
      description: Adds SMTP server configuration
      operationId: post-config-smtp
      requestBody:
        description: SmtpConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "valid": true,
                      "host": "localhost",
                      "port": 260,
                      "requires_ssl": true,
                      "trust_host": true,
                      "from_name": "John",
                      "from_email_address": "john@grow.org",
                      "requires_authentication": true,
                      "user_name": "smtp_user",
                      "password": "password"
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "valid": false,
                        "port": 0,
                        "requires_ssl": false,
                        "trust_host": false,
                        "requires_authentication": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/smtp.write'
    delete:
      tags:
        - Configuration – SMTP
      summary: Deletes SMTP server configuration
      description: Deletes SMTP server configuration
      operationId: delete-config-smtp
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/smtp.delete'
  /api/v1/config/smtp/test:
    post:
      tags:
        - Configuration – SMTP
      summary: Signing Test SMTP server configuration
      description: Signing Test SMTP server configuration
      operationId: test-config-smtp
      requestBody:
        description: SmtpTest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpTest'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
                description: boolean value true if successful
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/smtp.write'
  /api/v1/config/scripts:
    get:
      tags:
        - Custom Scripts
      summary: Gets a list of custom scripts
      description: Gets a list of custom scripts
      operationId: get-config-scripts
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'adminCanEdit=true,dataType=string'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 37,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "inum=0300-BA90,ou=scripts,o=jans",
                                "inum": "0300-BA90",
                                "name": "discovery_java_params",
                                "description": "Java Custom Sample Script",
                                "script": "/* Copyright (c) 2022, Gluu\n Author: Yuriy Z\n */\n\nimport io.jans.model.SimpleCustomProperty;\nimport io.jans.model.custom.script.model.CustomScript;\nimport io.jans.model.custom.script.type.discovery.DiscoveryType;\nimport io.jans.service.custom.script.CustomScriptManager;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.json.JSONObject;\n\nimport java.util.Map;\n\npublic class Discovery implements DiscoveryType {\n\n    private static final Logger log = LoggerFactory.getLogger(Discovery.class);\n    private static final Logger scriptLogger = LoggerFactory.getLogger(CustomScriptManager.class);\n\n    @Override\n    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Destroy of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public int getApiVersion() {\n        log.info(\"getApiVersion Discovery Java custom script: 11\");\n        return 11;\n    }\n\n    @Override\n    public boolean modifyResponse(Object responseAsJsonObject, Object context) {\n        scriptLogger.info(\"write to script logger\");\n        JSONObject response = (JSONObject) responseAsJsonObject;\n        response.accumulate(\"key_from_java\", \"value_from_script_on_java\");\n        return true;\n    }\n}\n",
                                "scriptType": "discovery",
                                "programmingLanguage": "java",
                                "moduleProperties": [
                                    {
                                        "value1": "location_type",
                                        "value2": "ldap"
                                    }
                                ],
                                "level": 1,
                                "revision": 11,
                                "enabled": true,
                                "modified": false,
                                "internal": false,
                                "locationType": "ldap",
                                "baseDn": "inum=0300-BA90,ou=scripts,o=jans"
                            },
                            {
                                "dn": "inum=031C-4A65,ou=scripts,o=jans",
                                "inum": "031C-4A65",
                                "name": "id_generator",
                                "description": "Sample Id Generator script",
                                "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.id import IdGeneratorType\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom java.util import Arrays, ArrayList\n\nimport java\n\nclass IdGenerator(IdGeneratorType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Id generator. Initialization\"\n        print \"Id generator. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Id generator. Destroy\"\n        print \"Id generator. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Id generator init method\n    #   appId is application Id\n    #   idType is Id Type\n    #   idPrefix is Id Prefix\n    #   user is io.jans.oxtrust.model.JanssenCustomPerson\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def generateId(self, appId, idType, idPrefix, configurationAttributes):\n        print \"Id generator. Generate Id\"\n        print \"Id generator. Generate Id. AppId: '\", appId, \"', IdType: '\", idType, \"', IdPrefix: '\", idPrefix, \"'\"\n\n        # Return None or empty string to trigger default Id generation method\n        return None\n",
                                "scriptType": "id_generator",
                                "programmingLanguage": "python",
                                "moduleProperties": [
                                    {
                                        "value1": "location_type",
                                        "value2": "ldap"
                                    }
                                ],
                                "level": 100,
                                "revision": 1,
                                "enabled": false,
                                "modified": false,
                                "internal": false,
                                "locationType": "ldap",
                                "baseDn": "inum=031C-4A65,ou=scripts,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
    put:
      tags:
        - Custom Scripts
      summary: Updates a custom script
      description: Updates a custom script
      operationId: put-config-scripts
      requestBody:
        description: CustomScript object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                              "name": "test_application_session_test",
                              "description": "Sample Application Session script",
                              "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.session import ApplicationSessionType\nfrom io.jans.service.cdi.util import CdiUtil\nfrom io.jans.persist import PersistenceEntryManager\nfrom io.jans.as.model.config import StaticConfiguration\nfrom io.jans.as.model.ldap import TokenEntity\nfrom jakarta.faces.application import FacesMessage\nfrom io.jans.jsf2.message import FacesMessages\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom io.jans.as.model.config import Constants\nfrom java.util import Arrays, ArrayList\nfrom io.jans.as.service.external.session import SessionEventType\n\nimport java\n\nclass ApplicationSession(ApplicationSessionType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Application session. Initialization\"\n\n        self.entryManager = CdiUtil.bean(PersistenceEntryManager)\n        self.staticConfiguration = CdiUtil.bean(StaticConfiguration)\n\n        print \"Application session. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Application session. Destroy\"\n        print \"Application session. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Called each time specific session event occurs\n    # event is io.jans.as.service.external.session.SessionEvent\n    def onEvent(self, event):\n        if event.getType() == SessionEventType.AUTHENTICATED:\n            print \"Session is authenticated, session: \" + event.getSessionId().getId()\n        return\n\n    # Application calls it at start session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def startSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session\"\n\n        user_name = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER)\n\n        first_session = self.isFirstSession(user_name)\n        if not first_session:\n            facesMessages = CdiUtil.bean(FacesMessages)\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Please, end active session first!\")\n            return False\n\n        print \"Application session. External session started successfully\"\n        return True\n\n    # Application calls it at end session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def endSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session end\"\n\n        print \"Application session. External session ended successfully\"\n        return True\n\n    # Application calls it during /session/active endpoint call to modify response if needed\n    #   jsonArray is org.json.JSONArray\n    #   context is io.jans.as.server.model.common.ExecutionContext\n    def modifyActiveSessionsResponse(self, jsonArray, context):\n        return False\n\n    def isFirstSession(self, user_name):\n        tokenLdap = TokenEntity()\n        tokenLdap.setDn(self.staticConfiguration.getBaseDn().getClients())\n        tokenLdap.setUserId(user_name)\n\n        tokenLdapList = self.entryManager.findEntries(tokenLdap, 1)\n        print \"Application session. isFirstSession. Get result: '%s'\" % tokenLdapList\n\n        if (tokenLdapList != None) and (tokenLdapList.size() > 0):\n            print \"Application session. isFirstSession: False\"\n            return False\n\n        print \"Application session. isFirstSession: True\"\n        return True\n",
                              "scriptType": "application_session",
                              "programmingLanguage": "python",
                              "moduleProperties": [
                                  {
                                      "value1": "location_type",
                                      "value2": "ldap"
                                  }
                              ],
                              "level": 800,
                              "revision": 8,
                              "enabled": false,
                              "modified": false,
                              "internal": false,
                              "locationType": "ldap"
                          }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=4144edf6-af99-451d-be29-f3eb5c0e9143,ou=scripts,o=jans",
                        "inum": "4144edf6-af99-451d-be29-f3eb5c0e9143",
                        "name": "test_application_session_test",
                        "description": "Sample Application Session script",
                        "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.session import ApplicationSessionType\nfrom io.jans.service.cdi.util import CdiUtil\nfrom io.jans.persist import PersistenceEntryManager\nfrom io.jans.as.model.config import StaticConfiguration\nfrom io.jans.as.model.ldap import TokenEntity\nfrom jakarta.faces.application import FacesMessage\nfrom io.jans.jsf2.message import FacesMessages\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom io.jans.as.model.config import Constants\nfrom java.util import Arrays, ArrayList\nfrom io.jans.as.service.external.session import SessionEventType\n\nimport java\n\nclass ApplicationSession(ApplicationSessionType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Application session. Initialization\"\n\n        self.entryManager = CdiUtil.bean(PersistenceEntryManager)\n        self.staticConfiguration = CdiUtil.bean(StaticConfiguration)\n\n        print \"Application session. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Application session. Destroy\"\n        print \"Application session. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Called each time specific session event occurs\n    # event is io.jans.as.service.external.session.SessionEvent\n    def onEvent(self, event):\n        if event.getType() == SessionEventType.AUTHENTICATED:\n            print \"Session is authenticated, session: \" + event.getSessionId().getId()\n        return\n\n    # Application calls it at start session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def startSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session\"\n\n        user_name = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER)\n\n        first_session = self.isFirstSession(user_name)\n        if not first_session:\n            facesMessages = CdiUtil.bean(FacesMessages)\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Please, end active session first!\")\n            return False\n\n        print \"Application session. External session started successfully\"\n        return True\n\n    # Application calls it at end session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def endSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session end\"\n\n        print \"Application session. External session ended successfully\"\n        return True\n\n    # Application calls it during /session/active endpoint call to modify response if needed\n    #   jsonArray is org.json.JSONArray\n    #   context is io.jans.as.server.model.common.ExecutionContext\n    def modifyActiveSessionsResponse(self, jsonArray, context):\n        return False\n\n    def isFirstSession(self, user_name):\n        tokenLdap = TokenEntity()\n        tokenLdap.setDn(self.staticConfiguration.getBaseDn().getClients())\n        tokenLdap.setUserId(user_name)\n\n        tokenLdapList = self.entryManager.findEntries(tokenLdap, 1)\n        print \"Application session. isFirstSession. Get result: '%s'\" % tokenLdapList\n\n        if (tokenLdapList != None) and (tokenLdapList.size() > 0):\n            print \"Application session. isFirstSession: False\"\n            return False\n\n        print \"Application session. isFirstSession: True\"\n        return True\n",
                        "scriptType": "application_session",
                        "programmingLanguage": "python",
                        "moduleProperties": [
                            {
                                "value1": "location_type",
                                "value2": "ldap"
                            }
                        ],
                        "level": 800,
                        "revision": 8,
                        "enabled": false,
                        "modified": false,
                        "internal": false,
                        "locationType": "ldap",
                        "baseDn": "inum=4144edf6-af99-451d-be29-f3eb5c0e9143,ou=scripts,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.write'
    post:
      tags:
        - Custom Scripts
      summary: Adds a new custom script
      description: Adds a new custom script
      operationId: post-config-scripts
      parameters:
        - name: addScriptTemplate
          in: query
          description: >-
            Boolean flag to indicate if script template is to be added. If
            CustomScript request object has script populated then script
            template will not be added.
          schema:
            type: boolean
            default: false
      requestBody:
        description: CustomScript object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomScript'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                              "name": "test_application_session_test",
                              "description": "Sample Application Session script",
                              "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.session import ApplicationSessionType\nfrom io.jans.service.cdi.util import CdiUtil\nfrom io.jans.persist import PersistenceEntryManager\nfrom io.jans.as.model.config import StaticConfiguration\nfrom io.jans.as.model.ldap import TokenEntity\nfrom jakarta.faces.application import FacesMessage\nfrom io.jans.jsf2.message import FacesMessages\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom io.jans.as.model.config import Constants\nfrom java.util import Arrays, ArrayList\nfrom io.jans.as.service.external.session import SessionEventType\n\nimport java\n\nclass ApplicationSession(ApplicationSessionType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Application session. Initialization\"\n\n        self.entryManager = CdiUtil.bean(PersistenceEntryManager)\n        self.staticConfiguration = CdiUtil.bean(StaticConfiguration)\n\n        print \"Application session. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Application session. Destroy\"\n        print \"Application session. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Called each time specific session event occurs\n    # event is io.jans.as.service.external.session.SessionEvent\n    def onEvent(self, event):\n        if event.getType() == SessionEventType.AUTHENTICATED:\n            print \"Session is authenticated, session: \" + event.getSessionId().getId()\n        return\n\n    # Application calls it at start session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def startSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session\"\n\n        user_name = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER)\n\n        first_session = self.isFirstSession(user_name)\n        if not first_session:\n            facesMessages = CdiUtil.bean(FacesMessages)\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Please, end active session first!\")\n            return False\n\n        print \"Application session. External session started successfully\"\n        return True\n\n    # Application calls it at end session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def endSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session end\"\n\n        print \"Application session. External session ended successfully\"\n        return True\n\n    # Application calls it during /session/active endpoint call to modify response if needed\n    #   jsonArray is org.json.JSONArray\n    #   context is io.jans.as.server.model.common.ExecutionContext\n    def modifyActiveSessionsResponse(self, jsonArray, context):\n        return False\n\n    def isFirstSession(self, user_name):\n        tokenLdap = TokenEntity()\n        tokenLdap.setDn(self.staticConfiguration.getBaseDn().getClients())\n        tokenLdap.setUserId(user_name)\n\n        tokenLdapList = self.entryManager.findEntries(tokenLdap, 1)\n        print \"Application session. isFirstSession. Get result: '%s'\" % tokenLdapList\n\n        if (tokenLdapList != None) and (tokenLdapList.size() > 0):\n            print \"Application session. isFirstSession: False\"\n            return False\n\n        print \"Application session. isFirstSession: True\"\n        return True\n",
                              "scriptType": "application_session",
                              "programmingLanguage": "python",
                              "moduleProperties": [
                                  {
                                      "value1": "location_type",
                                      "value2": "ldap"
                                  }
                              ],
                              "level": 800,
                              "revision": 8,
                              "enabled": false,
                              "modified": false,
                              "internal": false,
                              "locationType": "ldap"
                          }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=4144edf6-af99-451d-be29-f3eb5c0e9143,ou=scripts,o=jans",
                        "inum": "4144edf6-af99-451d-be29-f3eb5c0e9143",
                        "name": "test_application_session_test",
                        "description": "Sample Application Session script",
                        "script": "# oxAuth is available under the MIT License (2008). See http://opensource.org/licenses/MIT for full text.\n# Copyright (c) 2016, Janssen\n#\n# Author: Yuriy Movchan\n#\n\nfrom io.jans.model.custom.script.type.session import ApplicationSessionType\nfrom io.jans.service.cdi.util import CdiUtil\nfrom io.jans.persist import PersistenceEntryManager\nfrom io.jans.as.model.config import StaticConfiguration\nfrom io.jans.as.model.ldap import TokenEntity\nfrom jakarta.faces.application import FacesMessage\nfrom io.jans.jsf2.message import FacesMessages\nfrom io.jans.util import StringHelper, ArrayHelper\nfrom io.jans.as.model.config import Constants\nfrom java.util import Arrays, ArrayList\nfrom io.jans.as.service.external.session import SessionEventType\n\nimport java\n\nclass ApplicationSession(ApplicationSessionType):\n    def __init__(self, currentTimeMillis):\n        self.currentTimeMillis = currentTimeMillis\n\n    def init(self, customScript, configurationAttributes):\n        print \"Application session. Initialization\"\n\n        self.entryManager = CdiUtil.bean(PersistenceEntryManager)\n        self.staticConfiguration = CdiUtil.bean(StaticConfiguration)\n\n        print \"Application session. Initialized successfully\"\n\n        return True   \n\n    def destroy(self, configurationAttributes):\n        print \"Application session. Destroy\"\n        print \"Application session. Destroyed successfully\"\n        return True   \n\n    def getApiVersion(self):\n        return 11\n\n    # Called each time specific session event occurs\n    # event is io.jans.as.service.external.session.SessionEvent\n    def onEvent(self, event):\n        if event.getType() == SessionEventType.AUTHENTICATED:\n            print \"Session is authenticated, session: \" + event.getSessionId().getId()\n        return\n\n    # Application calls it at start session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def startSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session\"\n\n        user_name = sessionId.getSessionAttributes().get(Constants.AUTHENTICATED_USER)\n\n        first_session = self.isFirstSession(user_name)\n        if not first_session:\n            facesMessages = CdiUtil.bean(FacesMessages)\n            facesMessages.add(FacesMessage.SEVERITY_ERROR, \"Please, end active session first!\")\n            return False\n\n        print \"Application session. External session started successfully\"\n        return True\n\n    # Application calls it at end session request to allow notify 3rd part systems\n    #   httpRequest is jakarta.servlet.http.HttpServletRequest\n    #   sessionId is io.jans.as.model.common.SessionId\n    #   configurationAttributes is java.util.Map<String, SimpleCustomProperty>\n    def endSession(self, httpRequest, sessionId, configurationAttributes):\n        print \"Application session. Starting external session end\"\n\n        print \"Application session. External session ended successfully\"\n        return True\n\n    # Application calls it during /session/active endpoint call to modify response if needed\n    #   jsonArray is org.json.JSONArray\n    #   context is io.jans.as.server.model.common.ExecutionContext\n    def modifyActiveSessionsResponse(self, jsonArray, context):\n        return False\n\n    def isFirstSession(self, user_name):\n        tokenLdap = TokenEntity()\n        tokenLdap.setDn(self.staticConfiguration.getBaseDn().getClients())\n        tokenLdap.setUserId(user_name)\n\n        tokenLdapList = self.entryManager.findEntries(tokenLdap, 1)\n        print \"Application session. isFirstSession. Get result: '%s'\" % tokenLdapList\n\n        if (tokenLdapList != None) and (tokenLdapList.size() > 0):\n            print \"Application session. isFirstSession: False\"\n            return False\n\n        print \"Application session. isFirstSession: True\"\n        return True\n",
                        "scriptType": "application_session",
                        "programmingLanguage": "python",
                        "moduleProperties": [
                            {
                                "value1": "location_type",
                                "value2": "ldap"
                            }
                        ],
                        "level": 800,
                        "revision": 8,
                        "enabled": false,
                        "modified": false,
                        "internal": false,
                        "locationType": "ldap",
                        "baseDn": "inum=4144edf6-af99-451d-be29-f3eb5c0e9143,ou=scripts,o=jans"
                    }
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.write'
  '/api/v1/config/scripts/{inum}':
    delete:
      tags:
        - Custom Scripts
      summary: Deletes a custom script
      description: Deletes a custom script
      operationId: delete-config-scripts-by-inum
      parameters:
        - name: inum
          in: path
          description: Script identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.delete'
    patch:
      tags:
        - Custom Scripts
      summary: Patches a custom script
      description: Patches a custom script
      operationId: patch-config-scripts-by-inum
      parameters:
        - name: inum
          in: path
          description: Script identifier
          required: true
          schema:
            type: string
      requestBody:
        description: JsonPatch object
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >
                  [{ "op": "replace", "path": "/enabled", "value":false},{ "op":
                  "replace", "path": "/revision", "value":2}] 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.write'
  '/api/v1/config/scripts/inum/{inum}':
    get:
      tags:
        - Custom Scripts
      summary: Gets a script by Inum
      description: Gets a script by Inum
      operationId: get-config-scripts-by-inum
      parameters:
        - name: inum
          in: path
          description: Script identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=0300-BA90,ou=scripts,o=jans",
                        "inum": "0300-BA90",
                        "name": "discovery_java_params",
                        "description": "Java Custom Sample Script",
                        "script": "/* Copyright (c) 2022, Gluu\n Author: Yuriy Z\n */\n\nimport io.jans.model.SimpleCustomProperty;\nimport io.jans.model.custom.script.model.CustomScript;\nimport io.jans.model.custom.script.type.discovery.DiscoveryType;\nimport io.jans.service.custom.script.CustomScriptManager;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.json.JSONObject;\n\nimport java.util.Map;\n\npublic class Discovery implements DiscoveryType {\n\n    private static final Logger log = LoggerFactory.getLogger(Discovery.class);\n    private static final Logger scriptLogger = LoggerFactory.getLogger(CustomScriptManager.class);\n\n    @Override\n    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Destroy of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public int getApiVersion() {\n        log.info(\"getApiVersion Discovery Java custom script: 11\");\n        return 11;\n    }\n\n    @Override\n    public boolean modifyResponse(Object responseAsJsonObject, Object context) {\n        scriptLogger.info(\"write to script logger\");\n        JSONObject response = (JSONObject) responseAsJsonObject;\n        response.accumulate(\"key_from_java\", \"value_from_script_on_java\");\n        return true;\n    }\n}\n",
                        "scriptType": "discovery",
                        "programmingLanguage": "java",
                        "moduleProperties": [
                            {
                                "value1": "location_type",
                                "value2": "ldap"
                            }
                        ],
                        "level": 1,
                        "revision": 11,
                        "enabled": true,
                        "modified": false,
                        "internal": false,
                        "locationType": "ldap",
                        "baseDn": "inum=0300-BA90,ou=scripts,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
  '/api/v1/config/scripts/name/{name}':
    get:
      tags:
        - Custom Scripts
      summary: Fetch custom script by name
      description: Fetch custom script by name
      operationId: get-custom-script-by-name
      parameters:
        - name: name
          in: path
          description: Script name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CustomScript
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScript'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=0300-BA90,ou=scripts,o=jans",
                        "inum": "0300-BA90",
                        "name": "discovery_java_params",
                        "description": "Java Custom Sample Script",
                        "script": "/* Copyright (c) 2022, Gluu\n Author: Yuriy Z\n */\n\nimport io.jans.model.SimpleCustomProperty;\nimport io.jans.model.custom.script.model.CustomScript;\nimport io.jans.model.custom.script.type.discovery.DiscoveryType;\nimport io.jans.service.custom.script.CustomScriptManager;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.json.JSONObject;\n\nimport java.util.Map;\n\npublic class Discovery implements DiscoveryType {\n\n    private static final Logger log = LoggerFactory.getLogger(Discovery.class);\n    private static final Logger scriptLogger = LoggerFactory.getLogger(CustomScriptManager.class);\n\n    @Override\n    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Destroy of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public int getApiVersion() {\n        log.info(\"getApiVersion Discovery Java custom script: 11\");\n        return 11;\n    }\n\n    @Override\n    public boolean modifyResponse(Object responseAsJsonObject, Object context) {\n        scriptLogger.info(\"write to script logger\");\n        JSONObject response = (JSONObject) responseAsJsonObject;\n        response.accumulate(\"key_from_java\", \"value_from_script_on_java\");\n        return true;\n    }\n}\n",
                        "scriptType": "discovery",
                        "programmingLanguage": "java",
                        "moduleProperties": [
                            {
                                "value1": "location_type",
                                "value2": "ldap"
                            }
                        ],
                        "level": 1,
                        "revision": 11,
                        "enabled": true,
                        "modified": false,
                        "internal": false,
                        "locationType": "ldap",
                        "baseDn": "inum=0300-BA90,ou=scripts,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
  /api/v1/config/scripts/types:
    get:
      tags:
        - Custom Scripts
      summary: Fetch custom script types
      description: Fetch custom script types
      operationId: get-custom-script-type
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                    - person_authentication
                    - authorization_challenge
                    - introspection
                    - resource_owner_password_credentials
                    - application_session
                    - cache_refresh
                    - client_registration
                    - id_generator
                    - uma_rpt_policy
                    - uma_rpt_claims
                    - uma_claims_gathering
                    - access_evaluation
                    - consent_gathering
                    - dynamic_scope
                    - spontaneous_scope
                    - end_session
                    - post_authn
                    - client_authn
                    - select_account
                    - create_user
                    - scim
                    - ciba_end_user_notification
                    - revoke_token
                    - persistence_extension
                    - idp
                    - discovery
                    - health_check
                    - authz_detail
                    - update_token
                    - config_api_auth
                    - modify_ssa_response
                    - fido2_extension
                    - lock_extension
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [
                        "discovery",
                        "consent_gathering",
                        "ciba_end_user_notification",
                        "id_generator",
                        "idp",
                        "introspection",
                        "persistence_extension",
                        "cache_refresh",
                        "uma_rpt_policy",
                        "update_token",
                        "scim",
                        "end_session",
                        "config_api_auth",
                        "uma_claims_gathering",
                        "person_authentication",
                        "resource_owner_password_credentials",
                        "authorization_challenge",
                        "client_registration",
                        "dynamic_scope",
                        "application_session"
                    ]
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
  /api/v1/config/scripts/script-types:
    get:
      tags:
        - Custom Scripts
      summary: Fetch custom script types
      description: Fetch custom script types
      operationId: get-custom-script-types
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [
                        "discovery",
                        "consent_gathering",
                        "ciba_end_user_notification",
                        "id_generator",
                        "idp",
                        "introspection",
                        "persistence_extension",
                        "cache_refresh",
                        "uma_rpt_policy",
                        "update_token",
                        "scim",
                        "end_session",
                        "config_api_auth",
                        "uma_claims_gathering",
                        "person_authentication",
                        "resource_owner_password_credentials",
                        "authorization_challenge",
                        "client_registration",
                        "dynamic_scope",
                        "application_session"
                    ]
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
  '/api/v1/config/scripts/type/{type}':
    get:
      tags:
        - Custom Scripts
      summary: Gets list of scripts by type
      description: Gets list of scripts by type
      operationId: get-config-scripts-by-type
      parameters:
        - name: type
          in: path
          description: Script type
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'adminCanEdit=true,dataType=string'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 1,
                        "entriesCount": 1,
                        "entries": [
                            {
                                "dn": "inum=0300-BA90,ou=scripts,o=jans",
                                "inum": "0300-BA90",
                                "name": "discovery_java_params",
                                "description": "Java Custom Sample Script",
                                "script": "/* Copyright (c) 2022, Gluu\n Author: Yuriy Z\n */\n\nimport io.jans.model.SimpleCustomProperty;\nimport io.jans.model.custom.script.model.CustomScript;\nimport io.jans.model.custom.script.type.discovery.DiscoveryType;\nimport io.jans.service.custom.script.CustomScriptManager;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.json.JSONObject;\n\nimport java.util.Map;\n\npublic class Discovery implements DiscoveryType {\n\n    private static final Logger log = LoggerFactory.getLogger(Discovery.class);\n    private static final Logger scriptLogger = LoggerFactory.getLogger(CustomScriptManager.class);\n\n    @Override\n    public boolean init(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean init(CustomScript customScript, Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Init of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public boolean destroy(Map<String, SimpleCustomProperty> configurationAttributes) {\n        log.info(\"Destroy of Discovery Java custom script\");\n        return true;\n    }\n\n    @Override\n    public int getApiVersion() {\n        log.info(\"getApiVersion Discovery Java custom script: 11\");\n        return 11;\n    }\n\n    @Override\n    public boolean modifyResponse(Object responseAsJsonObject, Object context) {\n        scriptLogger.info(\"write to script logger\");\n        JSONObject response = (JSONObject) responseAsJsonObject;\n        response.accumulate(\"key_from_java\", \"value_from_script_on_java\");\n        return true;\n    }\n}\n",
                                "scriptType": "discovery",
                                "programmingLanguage": "java",
                                "moduleProperties": [
                                    {
                                        "value1": "location_type",
                                        "value2": "ldap"
                                    }
                                ],
                                "level": 1,
                                "revision": 11,
                                "enabled": true,
                                "modified": false,
                                "internal": false,
                                "locationType": "ldap",
                                "baseDn": "inum=0300-BA90,ou=scripts,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scripts.readonly'
  /api/v1/jans-auth-server/health:
    get:
      tags:
        - Auth Server Health - Check
      summary: Returns auth server health status
      description: Returns auth server health status
      operationId: get-auth-server-health
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonNode'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "status": "running",
                        "db_status": "online"
                    }
        '500':
          description: InternalServerError
  '/api/v1/config/jwks/{kid}':
    get:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Get a JSON Web Key based on kid
      description: Get a JSON Web Key based on kid
      operationId: get-jwk-by-kid
      parameters:
        - name: kid
          in: path
          description: The unique identifier for the key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONWebKey'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "kid": "1230bfb-276a-44aa-a97d-667b57587108_sig_rs256",
                        "kty": "RSA",
                        "use": "sig",
                        "alg": "RS256",
                        "exp": 1599751946863,
                        "x5c": [
                            "A0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMMFm94QXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjAwOTA4MTUzMjE3WhcNMjAwOTEwMTUzMjI2WjAhMR8wHQYDVQQDDBZveEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzj1NEHyGk/ywG25py2s/zVVrRggzRO0jE6VOUvqUzsEJwt1aszQ4onFu6vgtjNwq2ZmEFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN/d+tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW/e+/Wags/ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm/GpCASAk9ZD8Ebnmy9RM71zDCgmvq/hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr/DLR3SVyCYbKBbRQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBADaqrfVH1FX0FLp99TG9fHOiOMD12vsIPANb9QbIADineFrSvUI3zIX56PpvMT+EApaLPcIYSwG1YziWT1oGDGkfyinofSRGl4JcC63slChUBfjlBZlXTIlc7CJA7CfzO6BW3SvO0GPF0NStCUD9Ou4oOVaIc3XrPzhIAp71cF9iLFnQUK1hiD9NhQUm5v2Nq+sQdjAxSlqigXnc+rB9+V8snCkr9x9q1cysq1ZyCRT55psa53Irqtc50T2PHA6kyzEVW51+yFaZa8z+WMoofr6ndx2DFI7n5+8jFGs9WoP+/zV8E/XK61iy+EdXVjXQYVcArjEzeIahn8QOd/hUcfo="
                        ],
                        "n": "EFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN_d-tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW_e-_Wags_ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm_GpCASAk9ZD8Ebnmy9RM71zDCgmvq_hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr_DLR3SVyCYbKBbRQ",
                        "e": "AQAB"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.readonly'
    delete:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Delete a JSON Web Key based on kid
      description: Delete a JSON Web Key based on kid
      operationId: delete-config-jwk-kid
      parameters:
        - name: kid
          in: path
          description: The unique identifier for the key
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.delete'
    patch:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Patch a specific JSON Web Key based on kid
      description: Patch a specific JSON Web Key based on kid
      operationId: patch-config-jwk-kid
      parameters:
        - name: kid
          in: path
          description: The unique identifier for the key
          required: true
          schema:
            type: string
      requestBody:
        description: JsonPatch object
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [
                      { "op": "replace", "path": "/use", "value":"enc"},
                      { "op": "replace", "path": "/e", "value":"Updated_XYZ"}
                  ] 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONWebKey'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "kid": "1230bfb-276a-44aa-a97d-667b57587108_sig_rs256",
                        "kty": "RSA",
                        "use": "enc",
                        "alg": "RS256",
                        "exp": 1599751946863,
                        "x5c": [
                            "A0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMMFm94QXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjAwOTA4MTUzMjE3WhcNMjAwOTEwMTUzMjI2WjAhMR8wHQYDVQQDDBZveEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzj1NEHyGk/ywG25py2s/zVVrRggzRO0jE6VOUvqUzsEJwt1aszQ4onFu6vgtjNwq2ZmEFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN/d+tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW/e+/Wags/ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm/GpCASAk9ZD8Ebnmy9RM71zDCgmvq/hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr/DLR3SVyCYbKBbRQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBADaqrfVH1FX0FLp99TG9fHOiOMD12vsIPANb9QbIADineFrSvUI3zIX56PpvMT+EApaLPcIYSwG1YziWT1oGDGkfyinofSRGl4JcC63slChUBfjlBZlXTIlc7CJA7CfzO6BW3SvO0GPF0NStCUD9Ou4oOVaIc3XrPzhIAp71cF9iLFnQUK1hiD9NhQUm5v2Nq+sQdjAxSlqigXnc+rB9+V8snCkr9x9q1cysq1ZyCRT55psa53Irqtc50T2PHA6kyzEVW51+yFaZa8z+WMoofr6ndx2DFI7n5+8jFGs9WoP+/zV8E/XK61iy+EdXVjXQYVcArjEzeIahn8QOd/hUcfo="
                        ],
                        "n": "EFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN_d-tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW_e-_Wags_ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm_GpCASAk9ZD8Ebnmy9RM71zDCgmvq_hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr_DLR3SVyCYbKBbRQ",
                        "e": "Updated_XYZ"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.write'
  /api/v1/config/jwks:
    get:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Gets list of JSON Web Key (JWK) used by server
      description: Gets list of JSON Web Key (JWK) used by server
      operationId: get-config-jwks
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebKeysConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: "{\n    \"keys\": [\n        {\n            \"descr\": \"Signature Key: RSA RSASSA-PKCS1-v1_5 using SHA-256\",\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"use\": \"sig\",\n            \"kid\": \"abc3a91b-dd1b-47b0-b7e7-aaf2ec3b9d5e_sig_rs256\",\n            \"x5c\": [\n                \"E3+Z7Ie9FVpDIqeBo/xI8/q7CCDxCHTtiTQjGS5j/XV4VcPt7i9mrQsajbndCAmynVw==\"\n            ],\n            \"name\": \"id_token RS256 Sign Key\",\n            \"exp\": 1666775666429,\n            \"alg\": \"RS256\",\n            \"n\": \"qzu2jRl6UoTnnUJS6zg7ghavupiUQ3Ux4fAH6H7DCXF-cuOgelBjUj_GLPqz5FeOCnQ\"\n        },\n\t\t{\n            \"descr\": \"Encryption Key: Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF\",\n            \"kty\": \"EC\",\n            \"use\": \"enc\",\n            \"crv\": \"P-256\",\n            \"kid\": \"0870a2b9-1200-42a2-9b12-e2fa89ce3bd0_enc_ecdh-es\",\n            \"x5c\": [\n                \"tE24Ofz3eFhtBAIhAINgdWN86TOOEAUXUr2ijmaAPBgn7mGoeg4c7FfyZTxn\"\n            ],\n            \"name\": \"id_token ECDH-ES Encryption Key\",\n            \"x\": \"NBJAtpZ-jWGjaXDFYgt38\",\n            \"y\": \"7n6oS9y5vN2XrTKMKilo\",\n            \"exp\": 1666775666429,\n            \"alg\": \"ECDH-ES\"\n        }\n    ]\n}\n"
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.readonly'
    put:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Replaces JSON Web Keys
      description: Replaces JSON Web Keys
      operationId: put-config-jwks
      requestBody:
        description: JSON Web Keys object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebKeysConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: "{\n    \"keys\": [\n        {\n            \"descr\": \"Signature Key: RSA RSASSA-PKCS1-v1_5 using SHA-256\",\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"use\": \"sig\",\n            \"kid\": \"abc3a91b-dd1b-47b0-b7e7-aaf2ec3b9d5e_sig_rs256\",\n            \"x5c\": [\n                \"E3+Z7Ie9FVpDIqeBo/xI8/q7CCDxCHTtiTQjGS5j/XV4VcPt7i9mrQsajbndCAmynVw==\"\n            ],\n            \"name\": \"id_token RS256 Sign Key\",\n            \"exp\": 1666775666429,\n            \"alg\": \"RS256\",\n            \"n\": \"qzu2jRl6UoTnnUJS6zg7ghavupiUQ3Ux4fAH6H7DCXF-cuOgelBjUj_GLPqz5FeOCnQ\"\n        },\n\t\t{\n            \"descr\": \"Encryption Key: Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF\",\n            \"kty\": \"EC\",\n            \"use\": \"enc\",\n            \"crv\": \"P-256\",\n            \"kid\": \"0870a2b9-1200-42a2-9b12-e2fa89ce3bd0_enc_ecdh-es\",\n            \"x5c\": [\n                \"tE24Ofz3eFhtBAIhAINgdWN86TOOEAUXUr2ijmaAPBgn7mGoeg4c7FfyZTxn\"\n            ],\n            \"name\": \"id_token ECDH-ES Encryption Key\",\n            \"x\": \"NBJAtpZ-jWGjaXDFYgt38\",\n            \"y\": \"7n6oS9y5vN2XrTKMKilo\",\n            \"exp\": 1666775666429,\n            \"alg\": \"ECDH-ES\"\n        }\n    ]\n}\n"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebKeysConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: "{\n    \"keys\": [\n        {\n            \"descr\": \"Signature Key: RSA RSASSA-PKCS1-v1_5 using SHA-256\",\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"use\": \"sig\",\n            \"kid\": \"abc3a91b-dd1b-47b0-b7e7-aaf2ec3b9d5e_sig_rs256\",\n            \"x5c\": [\n                \"E3+Z7Ie9FVpDIqeBo/xI8/q7CCDxCHTtiTQjGS5j/XV4VcPt7i9mrQsajbndCAmynVw==\"\n            ],\n            \"name\": \"id_token RS256 Sign Key\",\n            \"exp\": 1666775666429,\n            \"alg\": \"RS256\",\n            \"n\": \"qzu2jRl6UoTnnUJS6zg7ghavupiUQ3Ux4fAH6H7DCXF-cuOgelBjUj_GLPqz5FeOCnQ\"\n        },\n\t\t{\n            \"descr\": \"Encryption Key: Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF\",\n            \"kty\": \"EC\",\n            \"use\": \"enc\",\n            \"crv\": \"P-256\",\n            \"kid\": \"0870a2b9-1200-42a2-9b12-e2fa89ce3bd0_enc_ecdh-es\",\n            \"x5c\": [\n                \"tE24Ofz3eFhtBAIhAINgdWN86TOOEAUXUr2ijmaAPBgn7mGoeg4c7FfyZTxn\"\n            ],\n            \"name\": \"id_token ECDH-ES Encryption Key\",\n            \"x\": \"NBJAtpZ-jWGjaXDFYgt38\",\n            \"y\": \"7n6oS9y5vN2XrTKMKilo\",\n            \"exp\": 1666775666429,\n            \"alg\": \"ECDH-ES\"\n        }\n    ]\n}\n"
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.write'
    patch:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Patches JSON Web Keys
      description: Patches JSON Web Keys
      operationId: patch-config-jwks
      requestBody:
        description: JsonPatch object
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: "[\n\t{ \"op\": \"add\", \"path\": \"/keys/1\", \"value\":{\n            \"descr\": \"Test Key\",\n            \"kty\": \"EC\",\n            \"use\": \"enc\",\n            \"crv\": \"P-256\",\n            \"kid\": \"1234a2b9-1200-42a2-9b12-e2fa89ce3bd0_enc_ecdh-es\",\n            \"x5c\": [\n                \"tE24Ofz3eFhtBAIhAINgdWN86TOOEAUXUr2ijmaAPBgn7mGoeg4c7FfyZTxn\"\n            ],\n            \"name\": \"test-key\",\n            \"x\": \"NBJAtpZ-jWGjaXDFYgt38\",\n            \"y\": \"7n6oS9y5vN2XrTKMKilo\",\n            \"exp\": 1666775666429,\n            \"alg\": \"ECDH-ES\"\n        }\n\t}\n] \n"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebKeysConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: "{\n    \"keys\": [\n        {\n            \"descr\": \"Signature Key: RSA RSASSA-PKCS1-v1_5 using SHA-256\",\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"use\": \"sig\",\n            \"kid\": \"abc3a91b-dd1b-47b0-b7e7-aaf2ec3b9d5e_sig_rs256\",\n            \"x5c\": [\n                \"E3+Z7Ie9FVpDIqeBo/xI8/q7CCDxCHTtiTQjGS5j/XV4VcPt7i9mrQsajbndCAmynVw==\"\n            ],\n            \"name\": \"id_token RS256 Sign Key\",\n            \"exp\": 1666775666429,\n            \"alg\": \"RS256\",\n            \"n\": \"qzu2jRl6UoTnnUJS6zg7ghavupiUQ3Ux4fAH6H7DCXF-cuOgelBjUj_GLPqz5FeOCnQ\"\n        },\n\t\t{\n            \"descr\": \"Encryption Key: Elliptic Curve Diffie-Hellman Ephemeral Static key agreement using Concat KDF\",\n            \"kty\": \"EC\",\n            \"use\": \"enc\",\n            \"crv\": \"P-256\",\n            \"kid\": \"0870a2b9-1200-42a2-9b12-e2fa89ce3bd0_enc_ecdh-es\",\n            \"x5c\": [\n                \"tE24Ofz3eFhtBAIhAINgdWN86TOOEAUXUr2ijmaAPBgn7mGoeg4c7FfyZTxn\"\n            ],\n            \"name\": \"id_token ECDH-ES Encryption Key\",\n            \"x\": \"NBJAtpZ-jWGjaXDFYgt38\",\n            \"y\": \"7n6oS9y5vN2XrTKMKilo\",\n            \"exp\": 1666775666429,\n            \"alg\": \"ECDH-ES\"\n        }\n    ]\n}\n"
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.write'
  /api/v1/config/jwks/key:
    post:
      tags:
        - Configuration – JWK - JSON Web Key (JWK)
      summary: Configuration – JWK - JSON Web Key (JWK)
      description: Configuration – JWK - JSON Web Key (JWK)
      operationId: post-config-jwks-key
      requestBody:
        description: JSONWebKey object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONWebKey'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                        "kty": "RSA",
                        "e": "AQAB",
                        "use": "sig",
                        "crv": "",
                        "kid": "1230bfb-276a-44aa-a97d-667b57587108_sig_rs256",
                        "x5c": [
                          "A0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMMFm94QXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjAwOTA4MTUzMjE3WhcNMjAwOTEwMTUzMjI2WjAhMR8wHQYDVQQDDBZveEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzj1NEHyGk/ywG25py2s/zVVrRggzRO0jE6VOUvqUzsEJwt1aszQ4onFu6vgtjNwq2ZmEFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN/d+tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW/e+/Wags/ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm/GpCASAk9ZD8Ebnmy9RM71zDCgmvq/hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr/DLR3SVyCYbKBbRQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBADaqrfVH1FX0FLp99TG9fHOiOMD12vsIPANb9QbIADineFrSvUI3zIX56PpvMT+EApaLPcIYSwG1YziWT1oGDGkfyinofSRGl4JcC63slChUBfjlBZlXTIlc7CJA7CfzO6BW3SvO0GPF0NStCUD9Ou4oOVaIc3XrPzhIAp71cF9iLFnQUK1hiD9NhQUm5v2Nq+sQdjAxSlqigXnc+rB9+V8snCkr9x9q1cysq1ZyCRT55psa53Irqtc50T2PHA6kyzEVW51+yFaZa8z+WMoofr6ndx2DFI7n5+8jFGs9WoP+/zV8E/XK61iy+EdXVjXQYVcArjEzeIahn8QOd/hUcfo="
                        ],
                        "exp": 1599751946863,
                        "alg": "RS256",
                        "n": "EFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN_d-tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW_e-_Wags_ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm_GpCASAk9ZD8Ebnmy9RM71zDCgmvq_hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr_DLR3SVyCYbKBbRQ"
                      }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONWebKey'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "kid": "1230bfb-276a-44aa-a97d-667b57587108_sig_rs256",
                        "kty": "RSA",
                        "use": "sig",
                        "alg": "RS256",
                        "exp": 1599751946863,
                        "x5c": [
                            "A0GCSqGSIb3DQEBCwUAMCExHzAdBgNVBAMMFm94QXV0aCBDQSBDZXJ0aWZpY2F0ZXMwHhcNMjAwOTA4MTUzMjE3WhcNMjAwOTEwMTUzMjI2WjAhMR8wHQYDVQQDDBZveEF1dGggQ0EgQ2VydGlmaWNhdGVzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzj1NEHyGk/ywG25py2s/zVVrRggzRO0jE6VOUvqUzsEJwt1aszQ4onFu6vgtjNwq2ZmEFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN/d+tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW/e+/Wags/ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm/GpCASAk9ZD8Ebnmy9RM71zDCgmvq/hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr/DLR3SVyCYbKBbRQIDAQABoycwJTAjBgNVHSUEHDAaBggrBgEFBQcDAQYIKwYBBQUHAwIGBFUdJQAwDQYJKoZIhvcNAQELBQADggEBADaqrfVH1FX0FLp99TG9fHOiOMD12vsIPANb9QbIADineFrSvUI3zIX56PpvMT+EApaLPcIYSwG1YziWT1oGDGkfyinofSRGl4JcC63slChUBfjlBZlXTIlc7CJA7CfzO6BW3SvO0GPF0NStCUD9Ou4oOVaIc3XrPzhIAp71cF9iLFnQUK1hiD9NhQUm5v2Nq+sQdjAxSlqigXnc+rB9+V8snCkr9x9q1cysq1ZyCRT55psa53Irqtc50T2PHA6kyzEVW51+yFaZa8z+WMoofr6ndx2DFI7n5+8jFGs9WoP+/zV8E/XK61iy+EdXVjXQYVcArjEzeIahn8QOd/hUcfo="
                        ],
                        "n": "EFZbw1Jw7dlz4Xrdj12pQlLVuEhyVaTziQp3LvspqxyACHQb8XSKFdKZaa1eBF8PGN5zDN_d-tIrAZYnQS2gH8BoPIuB3Z9AoCLTzifnPvmOwW_e-_Wags_ApZiEfF2Po0InV5NeJAyoIpaGhlwjqqOWXm_GpCASAk9ZD8Ebnmy9RM71zDCgmvq_hPueKnbNTZdQ3TQdzEuSwxbWEHu16v5MbF7QtNzvFSFlllhgwqI2ccEljDbs18j3DUS2B1VTTAr_DLR3SVyCYbKBbRQ",
                        "e": "AQAB"
                    }
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jwks.write'
  /api/v1/config/database/ldap:
    get:
      tags:
        - Database - LDAP configuration
      summary: Gets list of existing LDAP configurations.
      description: Gets list of existing LDAP configurations.
      operationId: get-config-database-ldap
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GluuLdapConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [
                        {
                            "configId": "auth_ldap_server",
                            "bindDN": "cn=directory manager",
                            "bindPassword": "password==",
                            "servers": [
                                "jans.server:1636"
                            ],
                            "maxConnections": 1000,
                            "useSSL": true,
                            "baseDNs": [
                                "ou=people,o=jans"
                            ],
                            "primaryKey": "uid",
                            "localPrimaryKey": "uid",
                            "useAnonymousBind": false,
                            "enabled": false,
                            "version": 0,
                            "level": 0
                        }
                    ]
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.readonly'
    put:
      tags:
        - Database - LDAP configuration
      summary: Updates LDAP configuration
      description: Updates LDAP configuration
      operationId: put-config-database-ldap
      requestBody:
        description: GluuLdapConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GluuLdapConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "configId": "auth_ldap_server",
                      "bindDN": "cn=directory manager",
                      "bindPassword": "axby+nlegh9DhpQ==",
                      "servers": [
                          "jans.server2:1636"
                      ],
                      "maxConnections": 1000,
                      "useSSL": true,
                      "baseDNs": [
                          "ou=people,o=jans"
                      ],
                      "primaryKey": "uid",
                      "localPrimaryKey": "uid",
                      "useAnonymousBind": false,
                      "enabled": false,
                      "version": 0,
                      "level": 0
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuLdapConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "configId": "auth_ldap_server",
                        "bindDN": "cn=directory manager",
                        "bindPassword": "axby+nlegh9DhpQ==",
                        "servers": [
                            "jans.server2:1636"
                        ],
                        "maxConnections": 1000,
                        "useSSL": true,
                        "baseDNs": [
                            "ou=people,o=jans"
                        ],
                        "primaryKey": "uid",
                        "localPrimaryKey": "uid",
                        "useAnonymousBind": false,
                        "enabled": false,
                        "version": 0,
                        "level": 0
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.write'
    post:
      tags:
        - Database - LDAP configuration
      summary: Adds a new LDAP configuration
      description: Adds a new LDAP configuration
      operationId: post-config-database-ldap
      requestBody:
        description: GluuLdapConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GluuLdapConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "configId": "auth_ldap_server",
                      "bindDN": "cn=directory manager",
                      "bindPassword": "axby+nlegh9DhpQ==",
                      "servers": [
                          "jans.server2:1636"
                      ],
                      "maxConnections": 1000,
                      "useSSL": true,
                      "baseDNs": [
                          "ou=people,o=jans"
                      ],
                      "primaryKey": "uid",
                      "localPrimaryKey": "uid",
                      "useAnonymousBind": false,
                      "enabled": false,
                      "version": 0,
                      "level": 0
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuLdapConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "configId": "auth_ldap_server",
                        "bindDN": "cn=directory manager",
                        "bindPassword": "axby+nlegh9DhpQ==",
                        "servers": [
                            "jans.server2:1636"
                        ],
                        "maxConnections": 1000,
                        "useSSL": true,
                        "baseDNs": [
                            "ou=people,o=jans"
                        ],
                        "primaryKey": "uid",
                        "localPrimaryKey": "uid",
                        "useAnonymousBind": false,
                        "enabled": false,
                        "version": 0,
                        "level": 0
                    }
        '401':
          description: Unauthorized
        '406':
          description: Not Acceptable
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.write'
  '/api/v1/config/database/ldap/{name}':
    get:
      tags:
        - Database - LDAP configuration
      summary: Gets an LDAP configuration by name.
      description: Gets an LDAP configuration by name.
      operationId: get-config-database-ldap-by-name
      parameters:
        - name: name
          in: path
          description: Name of LDAP configuration
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuLdapConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "configId": "auth_ldap_server",
                        "bindDN": "cn=directory manager",
                        "bindPassword": "axby+nlegh9DhpQ==",
                        "servers": [
                            "jans.server2:1636"
                        ],
                        "maxConnections": 1000,
                        "useSSL": true,
                        "baseDNs": [
                            "ou=people,o=jans"
                        ],
                        "primaryKey": "uid",
                        "localPrimaryKey": "uid",
                        "useAnonymousBind": false,
                        "enabled": false,
                        "version": 0,
                        "level": 0
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.readonly'
    delete:
      tags:
        - Database - LDAP configuration
      summary: Deletes an LDAP configuration
      description: Deletes an LDAP configuration
      operationId: delete-config-database-ldap-by-name
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuLdapConfiguration'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.delete'
    patch:
      tags:
        - Database - LDAP configuration
      summary: Patches a LDAP configuration by name
      description: Patches a LDAP configuration by name
      operationId: patch-config-database-ldap-by-name
      parameters:
        - name: name
          in: path
          description: Name of LDAP configuration
          required: true
          schema:
            type: string
      requestBody:
        description: JsonPatch object
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: example/auth/database/ldap/ldap-patch
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuLdapConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "configId": "auth_ldap_server",
                        "bindDN": "cn=directory manager",
                        "bindPassword": "axby+nlegh9DhpQ==",
                        "servers": [
                            "jans.server2:1636"
                        ],
                        "maxConnections": 1000,
                        "useSSL": true,
                        "baseDNs": [
                            "ou=people,o=jans"
                        ],
                        "primaryKey": "uid",
                        "localPrimaryKey": "uid",
                        "useAnonymousBind": false,
                        "enabled": false,
                        "version": 0,
                        "level": 0
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.write'
  /api/v1/config/database/ldap/test:
    post:
      tags:
        - Database - LDAP configuration
      summary: Tests an LDAP configuration
      description: Tests an LDAP configuration
      operationId: post-config-database-ldap-test
      requestBody:
        description: GluuLdapConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GluuLdapConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [{ "op": "replace", "path": "/maxConnections", "value":800}] 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
                description: boolean value true if successful
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/database/ldap.readonly'
  /api/v1/logging:
    get:
      tags:
        - Configuration – Logging
      summary: Returns Jans Authorization Server logging settings
      description: Returns Jans Authorization Server logging settings
      operationId: get-config-logging
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "loggingLevel": "TRACE",
                        "loggingLayout": "text",
                        "httpLoggingEnabled": false,
                        "disableJdkLogger": true,
                        "enabledOAuthAuditLogging": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/logging.readonly'
    put:
      tags:
        - Configuration – Logging
      summary: Updates Jans Authorization Server logging settings
      description: Updates Jans Authorization Server logging settings
      operationId: put-config-logging
      requestBody:
        description: Logging object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logging'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "loggingLevel": "TRACE",
                      "loggingLayout": "text",
                      "httpLoggingEnabled": false,
                      "disableJdkLogger": true,
                      "enabledOAuthAuditLogging": false
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "loggingLevel": "TRACE",
                        "loggingLayout": "text",
                        "httpLoggingEnabled": false,
                        "disableJdkLogger": true,
                        "enabledOAuthAuditLogging": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/logging.write'
  /api/v1/config/message:
    get:
      tags:
        - Message Configuration
      summary: Returns message configuration.
      description: Returns message configuration.
      operationId: get-config-message
      responses:
        '200':
          description: Message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.readonly'
    patch:
      tags:
        - Message Configuration
      summary: Patch message configuration.
      description: Patch message configuration
      operationId: patch-config-message
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.write'
  /api/v1/config/message/postgres:
    get:
      tags:
        - Message Configuration – Postgres
      summary: Returns Postgres message configuration.
      description: Returns Postgres message configuration.
      operationId: get-config-message-postgres
      responses:
        '200':
          description: Native persistence configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.readonly'
    put:
      tags:
        - Message Configuration – Postgres
      summary: Updates Postgres message configuration.
      description: Updates Postgres message configuration
      operationId: put-config-message-postgres
      requestBody:
        description: PostgresMessageConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresMessageConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Native persistence message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.write'
    patch:
      tags:
        - Message Configuration – Postgres
      summary: Patch Postgres message configuration.
      description: Patch Postgres message configuration
      operationId: patch-config-message-postgres
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Native persistence message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.write'
  /api/v1/config/message/redis:
    get:
      tags:
        - Message Configuration – Redis
      summary: Returns Redis message configuration.
      description: Returns Redis message configuration
      operationId: get-config-message-redis
      responses:
        '200':
          description: Redis message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.readonly'
    put:
      tags:
        - Message Configuration – Redis
      summary: Updates Redis message configuration.
      description: Updates Redis message configuration
      operationId: put-config-message-redis
      requestBody:
        description: RedisMessageConfiguration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedisMessageConfiguration'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Redis message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.write'
    patch:
      tags:
        - Message Configuration – Redis
      summary: Patch Redis message configuration.
      description: Patch Redis message configuration
      operationId: patch-config-message-redis
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Redis message configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedisMessageConfiguration'
              examples:
                Response json example:
                  description: Response json example
                  value: ''
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/message.write'
  /api/v1/org:
    get:
      tags:
        - Organization Configuration
      summary: Retrieves organization configuration
      description: Retrieves organization configuration
      operationId: get-organization-config
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuOrganization'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "o=jans",
                        "displayName": "Jans Server",
                        "description": "Welcome to oxTrust!",
                        "organization": "jans",
                        "managerGroup": "inum=60B7,ou=groups,o=jans",
                        "themeColor": "166309",
                        "shortName": "Jans Server",
                        "organizationTitle": "Gluu",
                        "baseDn": "o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/organization.readonly'
    patch:
      tags:
        - Organization Configuration
      summary: Patch organization configuration
      description: Patch organization configuration
      operationId: patch-organization-config
      requestBody:
        description: String representing JsonPatch request.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [
                      { "op": "add", "path": "/customMessages", "value": ["customMessages1","customMessages2"] },
                      { "op": "add", "path": "/jsFaviconPath", "value": "/opt/jans/jetty/jans-auth/custom/static" }
                  ] 
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GluuOrganization'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "o=jans",
                        "displayName": "Jans Server",
                        "description": "Welcome to oxTrust!",
                        "organization": "jans",
                        "managerGroup": "inum=60B7,ou=groups,o=jans",
                        "themeColor": "166309",
                        "shortName": "Jans Server",
                        "customMessages": [
                            "customMessages1",
                            "customMessages2"
                        ],
                        "jsFaviconPath": "/opt/jans/jetty/jans-auth/custom/static",
                        "organizationTitle": "Gluu",
                        "baseDn": "o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/organization.write'
  /api/v1/plugin:
    get:
      tags:
        - Plugins
      summary: Gets list of Plugins
      description: Gets list of Plugins
      operationId: get-plugins
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConf'
              examples:
                Response example:
                  description: Response example
                  value: |
                    [
                        {
                            "name": "fido2",
                            "description": "fido2 plugin"
                        },
                        {
                            "name": "scim",
                            "description": "scim plugin"
                        },
                        {
                            "name": "user-management",
                            "description": "user-management plugin"
                        }
                    ]
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/plugin.readonly'
  '/api/v1/plugin/{pluginName}':
    get:
      tags:
        - Plugins
      summary: Get plugin by name
      description: Get plugin by name
      operationId: get-plugin-by-name
      parameters:
        - name: pluginName
          in: path
          description: Plugin name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: boolean
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/plugin.readonly'
  /api/v1/scopes:
    get:
      tags:
        - OAuth - Scopes
      summary: Gets list of Scopes
      description: Gets list of Scopes
      operationId: get-oauth-scopes
      parameters:
        - name: type
          in: query
          description: Scope type
          schema:
            type: string
            default: ''
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: withAssociatedClients
          in: query
          description: >-
            Boolean fag to indicate if clients associated with the scope are to
            be returned
          schema:
            type: boolean
            default: false
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'scopeType=spontaneous,defaultScope=true'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 79,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "inum=F0C4,ou=scopes,o=jans",
                                "inum": "F0C4",
                                "displayName": "authenticate_openid_connect",
                                "id": "openid",
                                "description": "Authenticate using OpenID Connect.",
                                "scopeType": "openid",
                                "defaultScope": true,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2022-10-27T20:51:17",
                                "umaType": false,
                                "baseDn": "inum=F0C4,ou=scopes,o=jans"
                            },
                            {
                                "dn": "inum=43F1,ou=scopes,o=jans",
                                "inum": "43F1",
                                "displayName": "view_profile",
                                "id": "profile",
                                "description": "View your basic profile info.",
                                "scopeType": "openid",
                                "claims": [
                                    "inum=2B29,ou=attributes,o=jans",
                                    "inum=0C85,ou=attributes,o=jans",
                                    "inum=B4B0,ou=attributes,o=jans",
                                    "inum=A0E8,ou=attributes,o=jans",
                                    "inum=5EC6,ou=attributes,o=jans",
                                    "inum=B52A,ou=attributes,o=jans",
                                    "inum=64A0,ou=attributes,o=jans",
                                    "inum=EC3A,ou=attributes,o=jans",
                                    "inum=3B47,ou=attributes,o=jans",
                                    "inum=3692,ou=attributes,o=jans",
                                    "inum=98FC,ou=attributes,o=jans",
                                    "inum=A901,ou=attributes,o=jans",
                                    "inum=36D9,ou=attributes,o=jans",
                                    "inum=BE64,ou=attributes,o=jans",
                                    "inum=6493,ou=attributes,o=jans",
                                    "inum=4CF1,ou=attributes,o=jans",
                                    "inum=29DA,ou=attributes,o=jans"
                                ],
                                "defaultScope": true,
                                "attributes": {
                                    "showInConfigurationEndpoint": true
                                },
                                "creationDate": "2022-10-27T20:51:17",
                                "umaType": false,
                                "baseDn": "inum=43F1,ou=scopes,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.readonly'
    put:
      tags:
        - OAuth - Scopes
      summary: Update Scope
      description: Update Scope
      operationId: put-oauth-scopes
      requestBody:
        description: Scope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "dn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans",
                      "inum": "9c4c6027-86b8-4afc-a68f-6b50579e6d21",
                      "displayName": "Test Display Scope 5",
                      "id": "Scope5",
                      "iconUrl": "http://google.com",
                      "description": "TEST Description for Scope 5",
                      "scopeType": "spontaneous",
                      "defaultScope": false,
                      "umaAuthorizationPolicies": [
                          "inum=2DAF-F9A5,ou=scripts,o=jans",
                          "inum=2DAF-F995,ou=scripts,o=jans"
                      ],
                      "attributes": {
                          "showInConfigurationEndpoint": true
                      },
                      "creatorId": "2000.99b53b02-dfa1-42cd-aaef-b940d58bb03f",
                      "creatorType": "user",
                      "creationDate": "2022-10-27T21:09:45",
                      "umaType": false,
                      "baseDn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans",
                        "inum": "9c4c6027-86b8-4afc-a68f-6b50579e6d21",
                        "displayName": "Test Display Scope 5",
                        "id": "Scope5",
                        "iconUrl": "http://google.com",
                        "description": "TEST Description for Scope 5",
                        "scopeType": "spontaneous",
                        "defaultScope": false,
                        "umaAuthorizationPolicies": [
                            "inum=2DAF-F9A5,ou=scripts,o=jans",
                            "inum=2DAF-F995,ou=scripts,o=jans"
                        ],
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creatorId": "2000.99b53b02-dfa1-42cd-aaef-b940d58bb03f",
                        "creatorType": "user",
                        "creationDate": "2022-10-27T21:09:45",
                        "umaType": false,
                        "baseDn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.write'
    post:
      tags:
        - OAuth - Scopes
      summary: Create Scope
      description: Create Scope
      operationId: post-oauth-scopes
      requestBody:
        description: Scope object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scope'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "claims": [],
                      "dynamicScopeScripts": [],
                      "defaultScope": false,
                      "attributes": {
                          "spontaneousClientScopes": [],
                          "showInConfigurationEndpoint": true
                      },
                      "id": "Scope5",
                      "displayName": "Test Display Scope 5",
                      "description": "TEST Description for Scope 5",
                      "scopeType": "spontaneous",
                      "iconUrl": "http://google.com",
                      "umaAuthorizationPolicies": [
                          "inum=2DAF-F9A5,ou=scripts,o=jans",
                          "inum=2DAF-F995,ou=scripts,o=jans"
                      ],
                      "creatorType": "user",
                      "creatorId": "2000.99b53b02-dfa1-42cd-aaef-b940d58bb03f"
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans",
                        "inum": "9c4c6027-86b8-4afc-a68f-6b50579e6d21",
                        "displayName": "Test Display Scope 5",
                        "id": "Scope5",
                        "iconUrl": "http://google.com",
                        "description": "TEST Description for Scope 5",
                        "scopeType": "spontaneous",
                        "defaultScope": false,
                        "umaAuthorizationPolicies": [
                            "inum=2DAF-F9A5,ou=scripts,o=jans",
                            "inum=2DAF-F995,ou=scripts,o=jans"
                        ],
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creatorId": "2000.99b53b02-dfa1-42cd-aaef-b940d58bb03f",
                        "creatorType": "user",
                        "creationDate": "2022-10-27T21:09:45",
                        "umaType": false,
                        "baseDn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.write'
  '/api/v1/scopes/{inum}':
    get:
      tags:
        - OAuth - Scopes
      summary: Get Scope by Inum
      description: Get Scope by Inum
      operationId: get-oauth-scopes-by-inum
      parameters:
        - name: inum
          in: path
          description: Scope identifier
          required: true
          schema:
            type: string
        - name: withAssociatedClients
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomScope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=764C,ou=scopes,o=jans",
                        "inum": "764C",
                        "displayName": "view_email_address",
                        "id": "email",
                        "description": "View your email address.",
                        "scopeType": "openid",
                        "claims": [
                            "inum=8F88,ou=attributes,o=jans",
                            "inum=CAE3,ou=attributes,o=jans"
                        ],
                        "defaultScope": true,
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creationDate": "2022-10-27T20:58:29",
                        "clients": [
                            {
                                "dn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "ec0mQbx1udmSEs6flUXquA==",
                                "frontChannelLogoutUri": "http://localhost:4100/logout",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/admin",
                                    "http://localhost:4100"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials",
                                    "urn:ietf:params:oauth:grant-type:device_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Role Based Client"
                                    },
                                    "value": "Jans Role Based Client",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "userInfoSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "postLogoutRedirectUris": [
                                    "http://localhost:4100",
                                    "https://jans.server2/admin"
                                ],
                                "scopes": [
                                    "inum=C4F7,ou=scopes,o=jans",
                                    "inum=C4F6,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=F0C4,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "accessTokenLifetime": 2592000,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Role Based Client"
                                        ],
                                        "value": "Jans Role Based Client",
                                        "displayValue": "Jans Role Based Client"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": true,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": true,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "introspectionScripts": [
                                        "inum=A44E-4F3D,ou=scripts,o=jans"
                                    ],
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Role Based Client",
                                "baseDn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "inum": "2000.7810d591-69d3-458c-9309-4268085fe71c"
                            },
                            {
                                "dn": "inum=FF81-2D39,ou=clients,o=jans",
                                "clientSecret": "n7/ZG1jOL6RMR/USOmTAsg==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/jans-auth-rp/home.htm",
                                    "https://client.example.com/cb",
                                    "https://client.example.com/cb1",
                                    "https://client.example.com/cb2"
                                ],
                                "claimRedirectUris": [
                                    "https://jans.server2/jans-auth/restv1/uma/gather_claims"
                                ],
                                "responseTypes": [
                                    "token",
                                    "code",
                                    "id_token"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "implicit",
                                    "refresh_token",
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Test Client (don't remove)"
                                    },
                                    "value": "Jans Test Client (don't remove)",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=F0C4,ou=scopes,o=jans",
                                    "inum=10B2,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=341A,ou=scopes,o=jans",
                                    "inum=6D99,ou=scopes,o=jans"
                                ],
                                "trustedClient": true,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Test Client (don't remove)"
                                        ],
                                        "value": "Jans Test Client (don't remove)",
                                        "displayValue": "Jans Test Client (don't remove)"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Test Client (don't remove)",
                                "baseDn": "inum=FF81-2D39,ou=clients,o=jans",
                                "inum": "FF81-2D39"
                            },
                            {
                                "dn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "5LIyGKo7kTLfWxBi0wSVAbxpB98Q70/Fr2NWMHnpEOiWHLFAQXwqNQ==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test1234"
                                    },
                                    "value": "test1234",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test1234"
                                        ],
                                        "value": "test1234",
                                        "displayValue": "test1234"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test1234",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test1234",
                                "baseDn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "inum": "b3c1d295-42e5-425e-b021-7b2fd3206437"
                            },
                            {
                                "dn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "Xi1+z0Ey8UDbtxsRYL3HAeneTCIEndWVeWEzS4dB2Is0iyupSjXr1w==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test12345"
                                    },
                                    "value": "test12345",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test12345"
                                        ],
                                        "value": "test12345",
                                        "displayValue": "test12345"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test12345",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test12345",
                                "baseDn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "inum": "1bb91a73-6899-440f-ac27-c04429671522"
                            }
                        ],
                        "umaType": false,
                        "baseDn": "inum=764C,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.readonly'
    delete:
      tags:
        - OAuth - Scopes
      summary: Delete Scope
      description: Delete Scope
      operationId: delete-oauth-scopes-by-inum
      parameters:
        - name: inum
          in: path
          description: Scope identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.delete'
    patch:
      tags:
        - OAuth - Scopes
      summary: Patch Scope
      description: Patch Scope
      operationId: patch-oauth-scopes-by-id
      parameters:
        - name: inum
          in: path
          description: Scope identifier
          required: true
          schema:
            type: string
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: >

                  [{ "op": "replace", "path": "/umaAuthorizationPolicies",
                  "value": ["inum=2DAF-F995,ou=scripts,o=jans"] }]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans",
                        "inum": "9c4c6027-86b8-4afc-a68f-6b50579e6d21",
                        "displayName": "Test Display Scope 5",
                        "id": "Scope5",
                        "iconUrl": "http://google.com",
                        "description": "TEST Description for Scope 5",
                        "scopeType": "spontaneous",
                        "defaultScope": false,
                        "umaAuthorizationPolicies": [
                            "inum=2DAF-F9A5,ou=scripts,o=jans",
                            "inum=2DAF-F995,ou=scripts,o=jans"
                        ],
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creatorId": "2000.99b53b02-dfa1-42cd-aaef-b940d58bb03f",
                        "creatorType": "user",
                        "creationDate": "2022-10-27T21:09:45",
                        "umaType": false,
                        "baseDn": "inum=9c4c6027-86b8-4afc-a68f-6b50579e6d21,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.write'
  '/api/v1/scopes/creator/{creatorId}':
    get:
      tags:
        - OAuth - Scopes
      summary: Get Scope by creatorId
      description: Get Scope by creatorId
      operationId: get-scope-by-creator
      parameters:
        - name: creatorId
          in: path
          description: >-
            Id of the scope creator. If creator is client then client_id if user
            then user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=764C,ou=scopes,o=jans",
                        "inum": "764C",
                        "displayName": "view_email_address",
                        "id": "email",
                        "description": "View your email address.",
                        "scopeType": "openid",
                        "claims": [
                            "inum=8F88,ou=attributes,o=jans",
                            "inum=CAE3,ou=attributes,o=jans"
                        ],
                        "defaultScope": true,
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creationDate": "2022-10-27T20:58:29",
                        "clients": [
                            {
                                "dn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "ec0mQbx1udmSEs6flUXquA==",
                                "frontChannelLogoutUri": "http://localhost:4100/logout",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/admin",
                                    "http://localhost:4100"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials",
                                    "urn:ietf:params:oauth:grant-type:device_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Role Based Client"
                                    },
                                    "value": "Jans Role Based Client",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "userInfoSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "postLogoutRedirectUris": [
                                    "http://localhost:4100",
                                    "https://jans.server2/admin"
                                ],
                                "scopes": [
                                    "inum=C4F7,ou=scopes,o=jans",
                                    "inum=C4F6,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=F0C4,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "accessTokenLifetime": 2592000,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Role Based Client"
                                        ],
                                        "value": "Jans Role Based Client",
                                        "displayValue": "Jans Role Based Client"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": true,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": true,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "introspectionScripts": [
                                        "inum=A44E-4F3D,ou=scripts,o=jans"
                                    ],
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Role Based Client",
                                "baseDn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "inum": "2000.7810d591-69d3-458c-9309-4268085fe71c"
                            },
                            {
                                "dn": "inum=FF81-2D39,ou=clients,o=jans",
                                "clientSecret": "n7/ZG1jOL6RMR/USOmTAsg==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/jans-auth-rp/home.htm",
                                    "https://client.example.com/cb",
                                    "https://client.example.com/cb1",
                                    "https://client.example.com/cb2"
                                ],
                                "claimRedirectUris": [
                                    "https://jans.server2/jans-auth/restv1/uma/gather_claims"
                                ],
                                "responseTypes": [
                                    "token",
                                    "code",
                                    "id_token"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "implicit",
                                    "refresh_token",
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Test Client (don't remove)"
                                    },
                                    "value": "Jans Test Client (don't remove)",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=F0C4,ou=scopes,o=jans",
                                    "inum=10B2,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=341A,ou=scopes,o=jans",
                                    "inum=6D99,ou=scopes,o=jans"
                                ],
                                "trustedClient": true,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Test Client (don't remove)"
                                        ],
                                        "value": "Jans Test Client (don't remove)",
                                        "displayValue": "Jans Test Client (don't remove)"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Test Client (don't remove)",
                                "baseDn": "inum=FF81-2D39,ou=clients,o=jans",
                                "inum": "FF81-2D39"
                            },
                            {
                                "dn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "5LIyGKo7kTLfWxBi0wSVAbxpB98Q70/Fr2NWMHnpEOiWHLFAQXwqNQ==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test1234"
                                    },
                                    "value": "test1234",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test1234"
                                        ],
                                        "value": "test1234",
                                        "displayValue": "test1234"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test1234",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test1234",
                                "baseDn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "inum": "b3c1d295-42e5-425e-b021-7b2fd3206437"
                            },
                            {
                                "dn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "Xi1+z0Ey8UDbtxsRYL3HAeneTCIEndWVeWEzS4dB2Is0iyupSjXr1w==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test12345"
                                    },
                                    "value": "test12345",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test12345"
                                        ],
                                        "value": "test12345",
                                        "displayValue": "test12345"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test12345",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test12345",
                                "baseDn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "inum": "1bb91a73-6899-440f-ac27-c04429671522"
                            }
                        ],
                        "umaType": false,
                        "baseDn": "inum=764C,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.readonly'
  '/api/v1/scopes/type/{type}':
    get:
      tags:
        - OAuth - Scopes
      summary: Get Scope by type
      description: Get Scope by type
      operationId: get-scope-by-type
      parameters:
        - name: type
          in: path
          description: Type of the scope
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomScope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=764C,ou=scopes,o=jans",
                        "inum": "764C",
                        "displayName": "view_email_address",
                        "id": "email",
                        "description": "View your email address.",
                        "scopeType": "openid",
                        "claims": [
                            "inum=8F88,ou=attributes,o=jans",
                            "inum=CAE3,ou=attributes,o=jans"
                        ],
                        "defaultScope": true,
                        "attributes": {
                            "showInConfigurationEndpoint": true
                        },
                        "creationDate": "2022-10-27T20:58:29",
                        "clients": [
                            {
                                "dn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "ec0mQbx1udmSEs6flUXquA==",
                                "frontChannelLogoutUri": "http://localhost:4100/logout",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/admin",
                                    "http://localhost:4100"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "refresh_token",
                                    "client_credentials",
                                    "urn:ietf:params:oauth:grant-type:device_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Role Based Client"
                                    },
                                    "value": "Jans Role Based Client",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "pairwise",
                                "idTokenSignedResponseAlg": "RS256",
                                "userInfoSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "postLogoutRedirectUris": [
                                    "http://localhost:4100",
                                    "https://jans.server2/admin"
                                ],
                                "scopes": [
                                    "inum=C4F7,ou=scopes,o=jans",
                                    "inum=C4F6,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=F0C4,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": true,
                                "includeClaimsInIdToken": false,
                                "accessTokenLifetime": 2592000,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Role Based Client"
                                        ],
                                        "value": "Jans Role Based Client",
                                        "displayValue": "Jans Role Based Client"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": true,
                                "accessTokenSigningAlg": "RS256",
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": true,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "introspectionScripts": [
                                        "inum=A44E-4F3D,ou=scripts,o=jans"
                                    ],
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Role Based Client",
                                "baseDn": "inum=2000.7810d591-69d3-458c-9309-4268085fe71c,ou=clients,o=jans",
                                "inum": "2000.7810d591-69d3-458c-9309-4268085fe71c"
                            },
                            {
                                "dn": "inum=FF81-2D39,ou=clients,o=jans",
                                "clientSecret": "n7/ZG1jOL6RMR/USOmTAsg==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://jans.server2/jans-auth-rp/home.htm",
                                    "https://client.example.com/cb",
                                    "https://client.example.com/cb1",
                                    "https://client.example.com/cb2"
                                ],
                                "claimRedirectUris": [
                                    "https://jans.server2/jans-auth/restv1/uma/gather_claims"
                                ],
                                "responseTypes": [
                                    "token",
                                    "code",
                                    "id_token"
                                ],
                                "grantTypes": [
                                    "authorization_code",
                                    "implicit",
                                    "refresh_token",
                                    "client_credentials"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "Jans Test Client (don't remove)"
                                    },
                                    "value": "Jans Test Client (don't remove)",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "idTokenSignedResponseAlg": "RS256",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=F0C4,ou=scopes,o=jans",
                                    "inum=10B2,ou=scopes,o=jans",
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=341A,ou=scopes,o=jans",
                                    "inum=6D99,ou=scopes,o=jans"
                                ],
                                "trustedClient": true,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "Jans Test Client (don't remove)"
                                        ],
                                        "value": "Jans Test Client (don't remove)",
                                        "displayValue": "Jans Test Client (don't remove)"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "Jans Test Client (don't remove)",
                                "baseDn": "inum=FF81-2D39,ou=clients,o=jans",
                                "inum": "FF81-2D39"
                            },
                            {
                                "dn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "5LIyGKo7kTLfWxBi0wSVAbxpB98Q70/Fr2NWMHnpEOiWHLFAQXwqNQ==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test1234"
                                    },
                                    "value": "test1234",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test1234"
                                        ],
                                        "value": "test1234",
                                        "displayValue": "test1234"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test1234",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test1234",
                                "baseDn": "inum=b3c1d295-42e5-425e-b021-7b2fd3206437,ou=clients,o=jans",
                                "inum": "b3c1d295-42e5-425e-b021-7b2fd3206437"
                            },
                            {
                                "dn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "deletable": false,
                                "clientSecret": "Xi1+z0Ey8UDbtxsRYL3HAeneTCIEndWVeWEzS4dB2Is0iyupSjXr1w==",
                                "frontChannelLogoutSessionRequired": false,
                                "redirectUris": [
                                    "https://abc,com"
                                ],
                                "responseTypes": [
                                    "code"
                                ],
                                "grantTypes": [
                                    "refresh_token",
                                    "authorization_code"
                                ],
                                "applicationType": "web",
                                "clientName": {
                                    "values": {
                                        "": "test12345"
                                    },
                                    "value": "test12345",
                                    "languageTags": [
                                        ""
                                    ]
                                },
                                "logoUri": {},
                                "clientUri": {},
                                "policyUri": {},
                                "tosUri": {},
                                "subjectType": "public",
                                "tokenEndpointAuthMethod": "client_secret_basic",
                                "scopes": [
                                    "inum=764C,ou=scopes,o=jans",
                                    "inum=43F1,ou=scopes,o=jans",
                                    "inum=C17A,ou=scopes,o=jans"
                                ],
                                "trustedClient": false,
                                "persistClientAuthorizations": false,
                                "includeClaimsInIdToken": false,
                                "customAttributes": [
                                    {
                                        "name": "displayName",
                                        "multiValued": false,
                                        "values": [
                                            "test12345"
                                        ],
                                        "value": "test12345",
                                        "displayValue": "test12345"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansClntCustomAttributes"
                                ],
                                "rptAsJwt": false,
                                "accessTokenAsJwt": false,
                                "disabled": false,
                                "attributes": {
                                    "runIntrospectionScriptBeforeJwtCreation": false,
                                    "keepClientAuthorizationAfterExpiration": false,
                                    "allowSpontaneousScopes": false,
                                    "backchannelLogoutSessionRequired": false,
                                    "parLifetime": 600,
                                    "requirePar": false,
                                    "jansDefaultPromptLogin": false
                                },
                                "backchannelUserCodeParameter": false,
                                "description": "test12345",
                                "tokenBindingSupported": false,
                                "authenticationMethod": "client_secret_basic",
                                "displayName": "test12345",
                                "baseDn": "inum=1bb91a73-6899-440f-ac27-c04429671522,ou=clients,o=jans",
                                "inum": "1bb91a73-6899-440f-ac27-c04429671522"
                            }
                        ],
                        "umaType": false,
                        "baseDn": "inum=764C,ou=scopes,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/scopes.readonly'
  '/api/v1/jans-auth-server/session/sid/{sid}':
    get:
      tags:
        - Auth - Session Management
      summary: Get session by id.
      description: Get session by id.
      operationId: get-session-by-id
      parameters:
        - name: sid
          in: path
          description: Session identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionId'
              examples:
                Response example:
                  description: Response example
                  value: ''
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/session.readonly'
            - revoke_session
    delete:
      tags:
        - Auth - Session Management
      summary: Delete a session.
      description: Delete a session.
      operationId: delete-session
      parameters:
        - name: sid
          in: path
          description: Session identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/session.delete'
            - revoke_session
  '/api/v1/jans-auth-server/session/user/{userDn}':
    delete:
      tags:
        - Auth - Session Management
      summary: Revoke all sessions by userDn
      description: Revoke all sessions by userDn
      operationId: revoke-user-session
      parameters:
        - name: userDn
          in: path
          description: User domain name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/session.delete'
            - revoke_session
  /api/v1/jans-auth-server/session:
    get:
      tags:
        - Auth - Session Management
      summary: Return all session
      description: Return all session
      operationId: get-sessions
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [
                        {
                            "dn": "jansId=c0baae4d-3282-4d20-99d9-90c30a1b6e53,ou=sessions,o=jans",
                            "id": "c0baae4d-3282-4d20-99d9-90c30a1b6e53",
                            "outsideSid": "652dc5e2-d95b-416e-b1ca-34b7dfb441d9",
                            "lastUsedAt": "2024-09-24T14:53:13",
                            "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                            "authenticationTime": "2024-09-24T14:53:13",
                            "state": "authenticated",
                            "sessionState": "34d35953e0008389587369ab1be6d6c93aa6d9e103dc2da93c157fc1b8d12385.696be3a5-d30c-4401-831f-4cd9017e8772",
                            "permissionGrantedMap": {
                                "permissionGranted": {
                                    "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9": true
                                }
                            },
                            "sessionAttributes": {
                                "acr": "simple_password_auth",
                                "remote_ip": "123.201.169.114",
                                "opbs": "355386a7-8e51-488b-ab1d-b65fa9f5a6d5",
                                "acr_values": "simple_password_auth",
                                "scope": "openid profile email user_name",
                                "response_type": "code",
                                "redirect_uri": "https://pujavs-hopeful-colt.gluu.info/admin",
                                "state": "abc",
                                "nonce": "puja",
                                "client_id": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "auth_user": "admin",
                                "old_session_id": "db06a1ad-fe41-4af1-b6a8-96eac8747b39",
                                "session_id": "c0baae4d-3282-4d20-99d9-90c30a1b6e53",
                                "sid": "652dc5e2-d95b-416e-b1ca-34b7dfb441d9",
                                "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9_authz_scopes": "openid user_name profile email",
                                "successful_rp_redirect_count": "1"
                            },
                            "expirationDate": "2024-11-25T14:53:06",
                            "deletable": true,
                            "creationDate": "2024-09-24T14:53:06",
                            "persisted": false,
                            "ttl": 0,
                            "opbrowserState": "355386a7-8e51-488b-ab1d-b65fa9f5a6d5"
                        },
                        {
                            "dn": "jansId=7cbad817-0b96-40ca-8667-1073bfa726c3,ou=sessions,o=jans",
                            "id": "7cbad817-0b96-40ca-8667-1073bfa726c3",
                            "outsideSid": "5c306424-462c-4b2d-8827-61c93dee54ce",
                            "lastUsedAt": "2024-09-24T14:52:15",
                            "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                            "authenticationTime": "2024-09-24T14:52:15",
                            "state": "authenticated",
                            "sessionState": "30288a431305c3fe91f716969837e809ae2c86982c8f0481c78c58f2db7dfd93.d3646d5e-62bf-421c-b1cf-51d6c4d6f64e",
                            "permissionGrantedMap": {
                                "permissionGranted": {
                                    "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9": true
                                }
                            },
                            "sessionAttributes": {
                                "acr": "simple_password_auth",
                                "remote_ip": "123.201.169.114",
                                "opbs": "661fbf90-1ffc-4560-9f95-cb113791af38",
                                "acr_values": "simple_password_auth",
                                "scope": "openid profile email user_name jansAdminUIRole",
                                "response_type": "code",
                                "redirect_uri": "https://pujavs-hopeful-colt.gluu.info/admin",
                                "state": "abc",
                                "nonce": "xyz",
                                "client_id": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "auth_user": "admin",
                                "old_session_id": "84d59a22-e98b-41ab-a195-fe52efbc6cba",
                                "session_id": "7cbad817-0b96-40ca-8667-1073bfa726c3",
                                "sid": "5c306424-462c-4b2d-8827-61c93dee54ce",
                                "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9_authz_scopes": "openid user_name profile email jansAdminUIRole",
                                "successful_rp_redirect_count": "1"
                            },
                            "expirationDate": "2024-10-25T14:52:06",
                            "deletable": true,
                            "creationDate": "2024-09-24T14:52:06",
                            "persisted": false,
                            "ttl": 0,
                            "opbrowserState": "661fbf90-1ffc-4560-9f95-cb113791af38"
                        }
                    ]
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/session.readonly'
            - revoke_session
  /api/v1/jans-auth-server/session/search:
    get:
      tags:
        - Auth - Session Management
      summary: Search session
      description: Search session
      operationId: search-session
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: jansId
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: >-
                userDn=d5552516-4436-4908-ab36-3e9725246304,expirationDate>2025-09-25,expirationDate<2026-10-15
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 2,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "jansId=7cbad817-0b96-40ca-8667-1073bfa726c3,ou=sessions,o=jans",
                                "id": "7cbad817-0b96-40ca-8667-1073bfa726c3",
                                "outsideSid": "5c306424-462c-4b2d-8827-61c93dee54ce",
                                "lastUsedAt": "2024-09-24T14:52:15",
                                "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                                "authenticationTime": "2024-09-24T14:52:15",
                                "state": "authenticated",
                                "sessionState": "30288a431305c3fe91f716969837e809ae2c86982c8f0481c78c58f2db7dfd93.d3646d5e-62bf-421c-b1cf-51d6c4d6f64e",
                                "permissionGrantedMap": {
                                    "permissionGranted": {
                                        "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9": true
                                    }
                                },
                                "sessionAttributes": {
                                    "acr": "simple_password_auth",
                                    "remote_ip": "123.201.169.114",
                                    "opbs": "661fbf90-1ffc-4560-9f95-cb113791af38",
                                    "acr_values": "simple_password_auth",
                                    "scope": "openid profile email user_name jansAdminUIRole",
                                    "response_type": "code",
                                    "redirect_uri": "https://pujavs-hopeful-colt.gluu.info/admin",
                                    "state": "abc",
                                    "nonce": "xyz",
                                    "client_id": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                    "auth_user": "admin",
                                    "old_session_id": "84d59a22-e98b-41ab-a195-fe52efbc6cba",
                                    "session_id": "7cbad817-0b96-40ca-8667-1073bfa726c3",
                                    "sid": "5c306424-462c-4b2d-8827-61c93dee54ce",
                                    "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9_authz_scopes": "openid user_name profile email jansAdminUIRole",
                                    "successful_rp_redirect_count": "1"
                                },
                                "expirationDate": "2024-10-25T14:52:06",
                                "deletable": true,
                                "creationDate": "2024-09-24T14:52:06",
                                "persisted": false,
                                "ttl": 0,
                                "opbrowserState": "661fbf90-1ffc-4560-9f95-cb113791af38"
                            },
                            {
                                "dn": "jansId=c0baae4d-3282-4d20-99d9-90c30a1b6e53,ou=sessions,o=jans",
                                "id": "c0baae4d-3282-4d20-99d9-90c30a1b6e53",
                                "outsideSid": "652dc5e2-d95b-416e-b1ca-34b7dfb441d9",
                                "lastUsedAt": "2024-09-24T14:53:13",
                                "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                                "authenticationTime": "2024-09-24T14:53:13",
                                "state": "authenticated",
                                "sessionState": "34d35953e0008389587369ab1be6d6c93aa6d9e103dc2da93c157fc1b8d12385.696be3a5-d30c-4401-831f-4cd9017e8772",
                                "permissionGrantedMap": {
                                    "permissionGranted": {
                                        "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9": true
                                    }
                                },
                                "sessionAttributes": {
                                    "acr": "simple_password_auth",
                                    "remote_ip": "123.201.169.114",
                                    "opbs": "355386a7-8e51-488b-ab1d-b65fa9f5a6d5",
                                    "acr_values": "simple_password_auth",
                                    "scope": "openid profile email user_name",
                                    "response_type": "code",
                                    "redirect_uri": "https://pujavs-hopeful-colt.gluu.info/admin",
                                    "state": "abc",
                                    "nonce": "puja",
                                    "client_id": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                    "auth_user": "admin",
                                    "old_session_id": "db06a1ad-fe41-4af1-b6a8-96eac8747b39",
                                    "session_id": "c0baae4d-3282-4d20-99d9-90c30a1b6e53",
                                    "sid": "652dc5e2-d95b-416e-b1ca-34b7dfb441d9",
                                    "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9_authz_scopes": "openid user_name profile email",
                                    "successful_rp_redirect_count": "1"
                                },
                                "expirationDate": "2024-11-25T14:53:06",
                                "deletable": true,
                                "creationDate": "2024-09-24T14:53:06",
                                "persisted": false,
                                "ttl": 0,
                                "opbrowserState": "355386a7-8e51-488b-ab1d-b65fa9f5a6d5"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/jans-auth-server/session.readonly'
            - revoke_session
  /api/v1/stat:
    get:
      tags:
        - Statistics - User
      summary: Provides server with basic statistic
      description: Provides server with basic statistic
      operationId: get-stat
      parameters:
        - name: Authorization
          in: header
          description: Authorization code
          schema:
            type: string
        - name: month
          in: query
          description: >-
            Month for which the stat report is to be fetched. The parameter is
            mandatory if start_month and end_month parameters are not present.
          schema:
            type: string
          example: 202012
        - name: start_month
          in: query
          description: Start-Month for which the stat report is to be fetched
          schema:
            type: string
        - name: end_month
          in: query
          description: End-Month for which the stat report is to be fetched
          schema:
            type: string
        - name: format
          in: query
          description: Report format
          schema:
            type: string
      responses:
        '200':
          description: Stats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonNode'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/stats.readonly'
            - jans_stat
  '/api/v1/token/client/{clientId}':
    get:
      tags:
        - Token
      summary: Get token details by client.
      description: Get token details by client.
      operationId: get-token-by-client
      parameters:
        - name: clientId
          in: path
          description: Client identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntityPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 8,
                        "entriesCount": 8,
                        "entries": [
                            {
                                "dn": "tknCde=280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286,ou=tokens,o=jans",
                                "grantId": "5e3d27ba-00a2-400e-be6d-b1424d1c1f33",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T15:03:50",
                                "expirationDate": "2024-10-23T15:03:50",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "4zdnUjyjRoWqqLCMtguvDA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 301
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=3d4e9ea9ff6fe85f25dc4fa98cf672c885d30b58fd2f64f8e7c630113d7e568f,ou=tokens,o=jans",
                                "grantId": "f8bfb7d5-0dbc-4976-a0ec-ef82e90e4ab8",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:23:50",
                                "expirationDate": "2024-10-23T08:23:50",
                                "deletable": true,
                                "scope": "https://jans.io/oauth/config/jwks.delete https://jans.io/oauth/jans-auth-server/session.readonly https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly https://jans.io/oauth/config/scopes.readonly https://jans.io/oauth/config/saml.write https://jans.io/oauth/lock/health.readonly https://jans.io/oauth/jans-auth-server/config/adminui/webhook.delete https://jans.io/auth/ssa.developer https://jans.io/oauth/config/saml-config.readonly https://jans.io/oauth/config/smtp.delete https://jans.io/oauth/config/cache.readonly https://jans.io/oauth/config/saml-scope.write readonly https://jans.io/oauth/config/user.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly https://jans.io/oauth/lock/audit.readonly https://jans.io/oauth/config/acrs.write https://jans.io/scim/fido2.read https://jans.io/oauth/config/token.readonly https://jans.io/oauth/config/message.readonly https://jans.io/oauth/lock-config.write https://jans.io/oauth/config/uma/resources.readonly https://jans.io/oauth/jans-auth-server/config/properties.write https://jans.io/oauth/config/fido2.write https://jans.io/idp/config.readonly https://jans.io/scim/groups.read https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete https://jans.io/oauth/lock/log.readonly https://jans.io/oauth/config/jwks.write jans_stat https://jans.io/idp/saml.readonly https://jans.io/oauth/jans-auth-server/config/properties.readonly https://jans.io/oauth/config/jans_asset-delete https://jans.io/scim/groups.write https://jans.io/oauth/config/database/couchbase.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/properties.write https://jans.io/oauth/config/fido2.delete https://jans.io/idp/saml.write https://jans.io/oauth/config/saml-scope.readonly https://jans.io/scim/fido2.write https://jans.io/oauth/config/scripts.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/config/session.write https://jans.io/oauth/config/acrs.delete https://jans.io/oauth/client/authorizations.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly https://jans.io/oauth/config/jans_asset-read https://jans.io/oauth/config/logging.readonly https://jans.io/oauth/config/jans_asset-write https://jans.io/oauth/lock/telemetry.write https://jans.io/oauth/config/plugin.readonly https://jans.io/oauth/lock/telemetry.readonly https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/config/user.write https://jans.io/oauth/config/agama.readonly https://jans.io/oauth/config/openid/clients.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write https://jans.io/oauth/jans-auth-server/config/adminui/webhook.write https://jans.io/oauth/config/agama.write https://jans.io/oauth/lock/health.write https://jans.io/oauth/config/logging.write https://jans.io/oauth/config/database/sql.write https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write https://jans.io/oauth/config/scopes.write https://jans.io/oauth/config/openid/clients.write https://jans.io/scim/fido.read https://jans.io/scim/fido.write https://jans.io/oauth/lock-config.readonly https://jans.io/oauth/config/organization.write https://jans.io/oauth/config/database/ldap.delete https://jans.io/oauth/config/jans-link.readonly https://jans.io/oauth/config/database/sql.readonly https://jans.io/oauth/config/session.readonly https://jans.io/oauth/config/openid/clients.delete https://jans.io/idp/saml.delete https://jans.io/idp/realm.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete https://jans.io/auth/ssa.admin https://jans.io/scim/config.readonly https://jans.io/oauth/config/database/couchbase.write https://jans.io/oauth/config/token.write https://jans.io/oauth/config/jans-link.write https://jans.io/oauth/config/session.delete https://jans.io/oauth/config/app-version.readonly https://jans.io/oauth/config/scripts.delete https://jans.io/oauth/config/uma/resources.delete https://jans.io/scim/users.read https://jans.io/oauth/config/message.write https://jans.io/oauth/config/fido2.readonly https://jans.io/auth/ssa.portal https://jans.io/oauth/jans-auth-server/config/adminui/logging.write https://jans.io/oauth/config/user.delete https://jans.io/oauth/kc-link-config.write https://jans.io/oauth/config/token.delete https://jans.io/oauth/lock/audit.write https://jans.io/oauth/config/database/ldap.readonly https://jans.io/oauth/jans-auth-server/config/adminui/properties.write https://jans.io/oauth/config/cache.write https://jans.io/scim/all-resources.search https://jans.io/oauth/config/attributes.readonly https://jans.io/oauth/config/smtp.readonly https://jans.io/scim/users.write https://jans.io/oauth/config/agama.delete https://jans.io/idp/config.write https://jans.io/oauth/config/uma/resources.write https://jans.io/oauth/config/saml.readonly https://jans.io/oauth/config/organization.readonly https://jans.io/oauth/lock/log.write https://jans.io/oauth/config/attributes.delete https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write https://jans.io/oauth/config/properties.readonly https://jans.io/oauth/config/jwks.readonly https://jans.io/oauth/config/scopes.delete https://jans.io/oauth/config/scripts.write https://jans.io/oauth/config/database/ldap.write https://jans.io/scim/config.write https://jans.io/oauth/jans-auth-server/session.delete https://jans.io/oauth/client/authorizations.delete https://jans.io/oauth/config/acrs.readonly https://jans.io/scim/bulk https://jans.io/idp/realm.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete https://jans.io/oauth/config/saml-config.write https://jans.io/oauth/config/smtp.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly https://jans.io/oauth/kc-link-config.readonly https://jans.io/oauth/config/attributes.write",
                                "tokenCode": "3d4e9ea9ff6fe85f25dc4fa98cf672c885d30b58fd2f64f8e7c630113d7e568f",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "JNDJyQfEQTGP6xRllmScXA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 303
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=4960533184fab18d8932045b70de17f827c916010ab5d5c86f7202ca6cf7c176,ou=tokens,o=jans",
                                "grantId": "82736426-1a72-46bb-8e76-52f3bca2c614",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:30",
                                "expirationDate": "2024-10-30T12:55:30",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "4960533184fab18d8932045b70de17f827c916010ab5d5c86f7202ca6cf7c176",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "uIw3N7qeRiKR1pvzE1OmxQ",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1101
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=5495ac7fedd47f57a10f314896fe88d415dbec067c7cea5d57138e2723b73e84,ou=tokens,o=jans",
                                "grantId": "2c4123dd-886f-447e-a65d-207bf60c3307",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:37",
                                "expirationDate": "2024-10-30T12:55:37",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "5495ac7fedd47f57a10f314896fe88d415dbec067c7cea5d57138e2723b73e84",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "bgPvtouST66zHFaH4vrWhA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1102
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=82f8a251b94e7191c0708e2651c06c5242f61972cbd37120ab83403ac32ab77d,ou=tokens,o=jans",
                                "grantId": "6915d12c-b5d3-4f56-a41c-64b3bff0e857",
                                "userId": "admin",
                                "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:23:50",
                                "expirationDate": "2024-10-23T08:23:50",
                                "deletable": true,
                                "scope": "openid profile offline_access email",
                                "tokenCode": "82f8a251b94e7191c0708e2651c06c5242f61972cbd37120ab83403ac32ab77d",
                                "tokenType": "access_token",
                                "grantType": "urn:ietf:params:oauth:grant-type:device_code",
                                "referenceId": "uPnrBRVOTv6MKbHZ29oKMw",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 301
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=bef882e1f07bbc718dfa38f19410f5d3452d7effc040052bd7f7751dd3de1599,ou=tokens,o=jans",
                                "grantId": "c664eb67-9911-40a7-a154-bb4b9b2c90b7",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:22:07",
                                "expirationDate": "2024-10-23T08:22:07",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "bef882e1f07bbc718dfa38f19410f5d3452d7effc040052bd7f7751dd3de1599",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "a9yYFUlxRzSh3MvoYGJJRQ",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 300
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=c3b62d651c9424bed9167a7cd05ea4e6fedc62f20d5fe98b0672fee0a43603ad,ou=tokens,o=jans",
                                "grantId": "b0b4315b-7cf1-4d63-ab6c-128bfacab9e3",
                                "clientId": "1800.3d73038f-2298-446a-a5e8-a43a579da9cc",
                                "creationDate": "2024-09-19T14:32:09",
                                "expirationDate": "2028-09-19T14:37:09",
                                "deletable": true,
                                "scope": "https://jans.io/oauth/config/jwks.delete https://jans.io/oauth/jans-auth-server/session.readonly https://jans.io/oauth/config/scopes.readonly https://jans.io/oauth/config/saml.write https://jans.io/oauth/lock/health.readonly https://jans.io/oauth/config/saml-config.readonly https://jans.io/oauth/config/cache.readonly https://jans.io/oauth/config/smtp.delete https://jans.io/oauth/config/user.readonly https://jans.io/oauth/lock/read-all https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly https://jans.io/oauth/lock/audit.readonly https://jans.io/oauth/config/acrs.write https://jans.io/oauth/lock-config.write https://jans.io/oauth/config/uma/resources.readonly https://jans.io/oauth/jans-auth-server/config/properties.write https://jans.io/oauth/config/fido2.write https://jans.io/idp/config.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete https://jans.io/oauth/lock/log.readonly https://jans.io/oauth/config/jwks.write jans_stat https://jans.io/idp/saml.readonly https://jans.io/oauth/jans-auth-server/config/properties.readonly https://jans.io/oauth/config/jans_asset-delete https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/fido2.delete https://jans.io/idp/saml.write https://jans.io/oauth/config/scripts.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly https://jans.io/oauth/config/openid-read https://jans.io/oauth/config/uma-write https://jans.io/oauth/client/authorizations.readonly https://jans.io/oauth/config/uma-read https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly https://jans.io/oauth/config/logging.readonly https://jans.io/oauth/config/jans_asset-write https://jans.io/oauth/lock/telemetry.write https://jans.io/oauth/config/plugin.readonly https://jans.io/oauth/lock/telemetry.readonly https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/config/uma-delete https://jans.io/oauth/config/user.write https://jans.io/oauth/config/agama.readonly https://jans.io/oauth/config/openid/clients.readonly https://jans.io/oauth/config/openid-write https://jans.io/oauth/config/agama.write https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write https://jans.io/oauth/lock/health.write https://jans.io/oauth/config/logging.write https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write https://jans.io/oauth/config/scopes.write https://jans.io/oauth/config/read-all https://jans.io/oauth/lock/write-all https://jans.io/oauth/config/write-all https://jans.io/oauth/config/openid/clients.write https://jans.io/oauth/jans-auth-server/config/adminui/write-all https://jans.io/oauth/lock-config.readonly https://jans.io/oauth/config/organization.write https://jans.io/oauth/config/database/ldap.delete https://jans.io/oauth/config/delete-all https://jans.io/oauth/config/openid/clients.delete https://jans.io/oauth/jans-auth-server/config/adminui/delete-all https://jans.io/idp/realm.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete https://jans.io/scim/config.readonly https://jans.io/oauth/config/app-version.readonly https://jans.io/oauth/config/scripts.delete https://jans.io/oauth/config/uma/resources.delete https://jans.io/scim/users.read https://jans.io/oauth/config/fido2.readonly https://jans.io/oauth/config/user.delete https://jans.io/oauth/kc-link-config.write https://jans.io/oauth/lock/audit.write https://jans.io/oauth/config/database/ldap.readonly https://jans.io/oauth/config/cache.write https://jans.io/oauth/config/attributes.readonly https://jans.io/oauth/config/smtp.readonly https://jans.io/scim/users.write https://jans.io/oauth/config/agama.delete https://jans.io/oauth/jans-auth-server/config/adminui/read-all https://jans.io/idp/config.write https://jans.io/oauth/config/uma/resources.write https://jans.io/oauth/config/saml.readonly https://jans.io/oauth/config/organization.readonly https://jans.io/oauth/lock/log.write https://jans.io/oauth/config/openid-delete https://jans.io/oauth/config/attributes.delete https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write https://jans.io/oauth/config/jwks.readonly https://jans.io/oauth/config/scopes.delete https://jans.io/oauth/config/scripts.write https://jans.io/oauth/config/database/ldap.write https://jans.io/scim/config.write https://jans.io/oauth/jans-auth-server/session.delete https://jans.io/oauth/client/authorizations.delete https://jans.io/oauth/config/acrs.readonly https://jans.io/idp/realm.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete https://jans.io/oauth/config/saml-config.write https://jans.io/oauth/config/smtp.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly https://jans.io/oauth/kc-link-config.readonly https://jans.io/oauth/config/attributes.write",
                                "tokenCode": "c3b62d651c9424bed9167a7cd05ea4e6fedc62f20d5fe98b0672fee0a43603ad",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "NXBmV1WjSU28EH8KNTghJw",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 201
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=f0977b8c359446ff7a5aa157a930c89506485b266d988507478e367f53fd5445,ou=tokens,o=jans",
                                "grantId": "d0c427ec-0c6e-4fdf-83eb-43a19e633eec",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:37",
                                "expirationDate": "2024-10-20T12:55:37",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "f0977b8c359446ff7a5aa157a930c89506485b266d988507478e367f53fd5445",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "1DnmKY6pS1S6XeKSHAj2Ag",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1103
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/token.readonly'
  '/api/v1/token/tknCde/{tknCde}':
    get:
      tags:
        - Token
      summary: Get token details by Id.
      description: Get token details by Id.
      operationId: get-token-by-id
      parameters:
        - name: tknCde
          in: path
          description: Token identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntity'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "dn": "tknCde=280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286,ou=tokens,o=jans",
                        "grantId": "5e3d27ba-00a2-400e-be6d-b1424d1c1f33",
                        "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                        "creationDate": "2024-09-23T15:03:50",
                        "expirationDate": "2024-10-23T15:03:50",
                        "deletable": true,
                        "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                        "tokenCode": "280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286",
                        "tokenType": "access_token",
                        "grantType": "client_credentials",
                        "referenceId": "4zdnUjyjRoWqqLCMtguvDA",
                        "attributes": {
                            "online_access": false,
                            "statusListIndex": 301
                        },
                        "tokenTypeEnum": "ACCESS_TOKEN"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/token.readonly'
  '/api/v1/token/revoke/{tknCde}':
    delete:
      tags:
        - Token
      summary: Revoke client token.
      description: Revoke client token.
      operationId: revoke-token
      parameters:
        - name: tknCde
          in: path
          description: Token Code
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/token.delete'
  /api/v1/token/search:
    get:
      tags:
        - Token
      summary: Search tokens
      description: Search tokens
      operationId: search-token
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: tknCde
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'grtTyp=client_credentials,tknTyp=access_token'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenEntityPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 8,
                        "entriesCount": 8,
                        "entries": [
                            {
                                "dn": "tknCde=280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286,ou=tokens,o=jans",
                                "grantId": "5e3d27ba-00a2-400e-be6d-b1424d1c1f33",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T15:03:50",
                                "expirationDate": "2024-10-23T15:03:50",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "280c8e7055fb51cee1fdd6442fe7fdba98dfd319f0e931ac0756a19936722286",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "4zdnUjyjRoWqqLCMtguvDA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 301
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=3d4e9ea9ff6fe85f25dc4fa98cf672c885d30b58fd2f64f8e7c630113d7e568f,ou=tokens,o=jans",
                                "grantId": "f8bfb7d5-0dbc-4976-a0ec-ef82e90e4ab8",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:23:50",
                                "expirationDate": "2024-10-23T08:23:50",
                                "deletable": true,
                                "scope": "https://jans.io/oauth/config/jwks.delete https://jans.io/oauth/jans-auth-server/session.readonly https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly https://jans.io/oauth/config/scopes.readonly https://jans.io/oauth/config/saml.write https://jans.io/oauth/lock/health.readonly https://jans.io/oauth/jans-auth-server/config/adminui/webhook.delete https://jans.io/auth/ssa.developer https://jans.io/oauth/config/saml-config.readonly https://jans.io/oauth/config/smtp.delete https://jans.io/oauth/config/cache.readonly https://jans.io/oauth/config/saml-scope.write readonly https://jans.io/oauth/config/user.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly https://jans.io/oauth/lock/audit.readonly https://jans.io/oauth/config/acrs.write https://jans.io/scim/fido2.read https://jans.io/oauth/config/token.readonly https://jans.io/oauth/config/message.readonly https://jans.io/oauth/lock-config.write https://jans.io/oauth/config/uma/resources.readonly https://jans.io/oauth/jans-auth-server/config/properties.write https://jans.io/oauth/config/fido2.write https://jans.io/idp/config.readonly https://jans.io/scim/groups.read https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete https://jans.io/oauth/lock/log.readonly https://jans.io/oauth/config/jwks.write jans_stat https://jans.io/idp/saml.readonly https://jans.io/oauth/jans-auth-server/config/properties.readonly https://jans.io/oauth/config/jans_asset-delete https://jans.io/scim/groups.write https://jans.io/oauth/config/database/couchbase.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/properties.write https://jans.io/oauth/config/fido2.delete https://jans.io/idp/saml.write https://jans.io/oauth/config/saml-scope.readonly https://jans.io/scim/fido2.write https://jans.io/oauth/config/scripts.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/config/session.write https://jans.io/oauth/config/acrs.delete https://jans.io/oauth/client/authorizations.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly https://jans.io/oauth/config/jans_asset-read https://jans.io/oauth/config/logging.readonly https://jans.io/oauth/config/jans_asset-write https://jans.io/oauth/lock/telemetry.write https://jans.io/oauth/config/plugin.readonly https://jans.io/oauth/lock/telemetry.readonly https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/config/user.write https://jans.io/oauth/config/agama.readonly https://jans.io/oauth/config/openid/clients.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write https://jans.io/oauth/jans-auth-server/config/adminui/webhook.write https://jans.io/oauth/config/agama.write https://jans.io/oauth/lock/health.write https://jans.io/oauth/config/logging.write https://jans.io/oauth/config/database/sql.write https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write https://jans.io/oauth/config/scopes.write https://jans.io/oauth/config/openid/clients.write https://jans.io/scim/fido.read https://jans.io/scim/fido.write https://jans.io/oauth/lock-config.readonly https://jans.io/oauth/config/organization.write https://jans.io/oauth/config/database/ldap.delete https://jans.io/oauth/config/jans-link.readonly https://jans.io/oauth/config/database/sql.readonly https://jans.io/oauth/config/session.readonly https://jans.io/oauth/config/openid/clients.delete https://jans.io/idp/saml.delete https://jans.io/idp/realm.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete https://jans.io/auth/ssa.admin https://jans.io/scim/config.readonly https://jans.io/oauth/config/database/couchbase.write https://jans.io/oauth/config/token.write https://jans.io/oauth/config/jans-link.write https://jans.io/oauth/config/session.delete https://jans.io/oauth/config/app-version.readonly https://jans.io/oauth/config/scripts.delete https://jans.io/oauth/config/uma/resources.delete https://jans.io/scim/users.read https://jans.io/oauth/config/message.write https://jans.io/oauth/config/fido2.readonly https://jans.io/auth/ssa.portal https://jans.io/oauth/jans-auth-server/config/adminui/logging.write https://jans.io/oauth/config/user.delete https://jans.io/oauth/kc-link-config.write https://jans.io/oauth/config/token.delete https://jans.io/oauth/lock/audit.write https://jans.io/oauth/config/database/ldap.readonly https://jans.io/oauth/jans-auth-server/config/adminui/properties.write https://jans.io/oauth/config/cache.write https://jans.io/scim/all-resources.search https://jans.io/oauth/config/attributes.readonly https://jans.io/oauth/config/smtp.readonly https://jans.io/scim/users.write https://jans.io/oauth/config/agama.delete https://jans.io/idp/config.write https://jans.io/oauth/config/uma/resources.write https://jans.io/oauth/config/saml.readonly https://jans.io/oauth/config/organization.readonly https://jans.io/oauth/lock/log.write https://jans.io/oauth/config/attributes.delete https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write https://jans.io/oauth/config/properties.readonly https://jans.io/oauth/config/jwks.readonly https://jans.io/oauth/config/scopes.delete https://jans.io/oauth/config/scripts.write https://jans.io/oauth/config/database/ldap.write https://jans.io/scim/config.write https://jans.io/oauth/jans-auth-server/session.delete https://jans.io/oauth/client/authorizations.delete https://jans.io/oauth/config/acrs.readonly https://jans.io/scim/bulk https://jans.io/idp/realm.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete https://jans.io/oauth/config/saml-config.write https://jans.io/oauth/config/smtp.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly https://jans.io/oauth/kc-link-config.readonly https://jans.io/oauth/config/attributes.write",
                                "tokenCode": "3d4e9ea9ff6fe85f25dc4fa98cf672c885d30b58fd2f64f8e7c630113d7e568f",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "JNDJyQfEQTGP6xRllmScXA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 303
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=4960533184fab18d8932045b70de17f827c916010ab5d5c86f7202ca6cf7c176,ou=tokens,o=jans",
                                "grantId": "82736426-1a72-46bb-8e76-52f3bca2c614",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:30",
                                "expirationDate": "2024-10-30T12:55:30",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "4960533184fab18d8932045b70de17f827c916010ab5d5c86f7202ca6cf7c176",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "uIw3N7qeRiKR1pvzE1OmxQ",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1101
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=5495ac7fedd47f57a10f314896fe88d415dbec067c7cea5d57138e2723b73e84,ou=tokens,o=jans",
                                "grantId": "2c4123dd-886f-447e-a65d-207bf60c3307",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:37",
                                "expirationDate": "2024-10-30T12:55:37",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "5495ac7fedd47f57a10f314896fe88d415dbec067c7cea5d57138e2723b73e84",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "bgPvtouST66zHFaH4vrWhA",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1102
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=82f8a251b94e7191c0708e2651c06c5242f61972cbd37120ab83403ac32ab77d,ou=tokens,o=jans",
                                "grantId": "6915d12c-b5d3-4f56-a41c-64b3bff0e857",
                                "userId": "admin",
                                "userDn": "inum=122ff2df-911d-424b-bbfe-891a43a70e95,ou=people,o=jans",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:23:50",
                                "expirationDate": "2024-10-23T08:23:50",
                                "deletable": true,
                                "scope": "openid profile offline_access email",
                                "tokenCode": "82f8a251b94e7191c0708e2651c06c5242f61972cbd37120ab83403ac32ab77d",
                                "tokenType": "access_token",
                                "grantType": "urn:ietf:params:oauth:grant-type:device_code",
                                "referenceId": "uPnrBRVOTv6MKbHZ29oKMw",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 301
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=bef882e1f07bbc718dfa38f19410f5d3452d7effc040052bd7f7751dd3de1599,ou=tokens,o=jans",
                                "grantId": "c664eb67-9911-40a7-a154-bb4b9b2c90b7",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-23T08:22:07",
                                "expirationDate": "2024-10-23T08:22:07",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "bef882e1f07bbc718dfa38f19410f5d3452d7effc040052bd7f7751dd3de1599",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "a9yYFUlxRzSh3MvoYGJJRQ",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 300
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=c3b62d651c9424bed9167a7cd05ea4e6fedc62f20d5fe98b0672fee0a43603ad,ou=tokens,o=jans",
                                "grantId": "b0b4315b-7cf1-4d63-ab6c-128bfacab9e3",
                                "clientId": "1800.3d73038f-2298-446a-a5e8-a43a579da9cc",
                                "creationDate": "2024-09-19T14:32:09",
                                "expirationDate": "2028-09-19T14:37:09",
                                "deletable": true,
                                "scope": "https://jans.io/oauth/config/jwks.delete https://jans.io/oauth/jans-auth-server/session.readonly https://jans.io/oauth/config/scopes.readonly https://jans.io/oauth/config/saml.write https://jans.io/oauth/lock/health.readonly https://jans.io/oauth/config/saml-config.readonly https://jans.io/oauth/config/cache.readonly https://jans.io/oauth/config/smtp.delete https://jans.io/oauth/config/user.readonly https://jans.io/oauth/lock/read-all https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly https://jans.io/oauth/lock/audit.readonly https://jans.io/oauth/config/acrs.write https://jans.io/oauth/lock-config.write https://jans.io/oauth/config/uma/resources.readonly https://jans.io/oauth/jans-auth-server/config/properties.write https://jans.io/oauth/config/fido2.write https://jans.io/idp/config.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete https://jans.io/oauth/lock/log.readonly https://jans.io/oauth/config/jwks.write jans_stat https://jans.io/idp/saml.readonly https://jans.io/oauth/jans-auth-server/config/properties.readonly https://jans.io/oauth/config/jans_asset-delete https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/fido2.delete https://jans.io/idp/saml.write https://jans.io/oauth/config/scripts.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly https://jans.io/oauth/config/openid-read https://jans.io/oauth/config/uma-write https://jans.io/oauth/client/authorizations.readonly https://jans.io/oauth/config/uma-read https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly https://jans.io/oauth/config/logging.readonly https://jans.io/oauth/config/jans_asset-write https://jans.io/oauth/lock/telemetry.write https://jans.io/oauth/config/plugin.readonly https://jans.io/oauth/lock/telemetry.readonly https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/config/uma-delete https://jans.io/oauth/config/user.write https://jans.io/oauth/config/agama.readonly https://jans.io/oauth/config/openid/clients.readonly https://jans.io/oauth/config/openid-write https://jans.io/oauth/config/agama.write https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write https://jans.io/oauth/lock/health.write https://jans.io/oauth/config/logging.write https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write https://jans.io/oauth/config/scopes.write https://jans.io/oauth/config/read-all https://jans.io/oauth/lock/write-all https://jans.io/oauth/config/write-all https://jans.io/oauth/config/openid/clients.write https://jans.io/oauth/jans-auth-server/config/adminui/write-all https://jans.io/oauth/lock-config.readonly https://jans.io/oauth/config/organization.write https://jans.io/oauth/config/database/ldap.delete https://jans.io/oauth/config/delete-all https://jans.io/oauth/config/openid/clients.delete https://jans.io/oauth/jans-auth-server/config/adminui/delete-all https://jans.io/idp/realm.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete https://jans.io/scim/config.readonly https://jans.io/oauth/config/app-version.readonly https://jans.io/oauth/config/scripts.delete https://jans.io/oauth/config/uma/resources.delete https://jans.io/scim/users.read https://jans.io/oauth/config/fido2.readonly https://jans.io/oauth/config/user.delete https://jans.io/oauth/kc-link-config.write https://jans.io/oauth/lock/audit.write https://jans.io/oauth/config/database/ldap.readonly https://jans.io/oauth/config/cache.write https://jans.io/oauth/config/attributes.readonly https://jans.io/oauth/config/smtp.readonly https://jans.io/scim/users.write https://jans.io/oauth/config/agama.delete https://jans.io/oauth/jans-auth-server/config/adminui/read-all https://jans.io/idp/config.write https://jans.io/oauth/config/uma/resources.write https://jans.io/oauth/config/saml.readonly https://jans.io/oauth/config/organization.readonly https://jans.io/oauth/lock/log.write https://jans.io/oauth/config/openid-delete https://jans.io/oauth/config/attributes.delete https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write https://jans.io/oauth/config/jwks.readonly https://jans.io/oauth/config/scopes.delete https://jans.io/oauth/config/scripts.write https://jans.io/oauth/config/database/ldap.write https://jans.io/scim/config.write https://jans.io/oauth/jans-auth-server/session.delete https://jans.io/oauth/client/authorizations.delete https://jans.io/oauth/config/acrs.readonly https://jans.io/idp/realm.readonly https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete https://jans.io/oauth/config/saml-config.write https://jans.io/oauth/config/smtp.write https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly https://jans.io/oauth/kc-link-config.readonly https://jans.io/oauth/config/attributes.write",
                                "tokenCode": "c3b62d651c9424bed9167a7cd05ea4e6fedc62f20d5fe98b0672fee0a43603ad",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "NXBmV1WjSU28EH8KNTghJw",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 201
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            },
                            {
                                "dn": "tknCde=f0977b8c359446ff7a5aa157a930c89506485b266d988507478e367f53fd5445,ou=tokens,o=jans",
                                "grantId": "d0c427ec-0c6e-4fdf-83eb-43a19e633eec",
                                "clientId": "2000.cc8b29ae-cb4a-49ea-b176-8695e53919d9",
                                "creationDate": "2024-09-20T12:55:37",
                                "expirationDate": "2024-10-20T12:55:37",
                                "deletable": true,
                                "scope": "jans_stat openid https://jans.io/oauth/jans-auth-server/config/adminui/properties.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.write https://jans.io/oauth/config/stats.readonly https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly",
                                "tokenCode": "f0977b8c359446ff7a5aa157a930c89506485b266d988507478e367f53fd5445",
                                "tokenType": "access_token",
                                "grantType": "client_credentials",
                                "referenceId": "1DnmKY6pS1S6XeKSHAj2Ag",
                                "attributes": {
                                    "online_access": false,
                                    "statusListIndex": 1103
                                },
                                "tokenTypeEnum": "ACCESS_TOKEN"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/token.readonly'
  /api/v1/uma/resources:
    get:
      tags:
        - OAuth - UMA Resources
      summary: Gets list of UMA resources
      description: Gets list of UMA resources
      operationId: get-oauth-uma-resources
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: deletable=true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 3,
                        "entriesCount": 3,
                        "entries": [
                            {
                                "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                                "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                                "name": "config-api-resource",
                                "iconUri": "https://config-api.com",
                                "scopes": [
                                    "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                                ],
                                "clients": [
                                    "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                                ],
                                "description": "Uma resource config api",
                                "deletable": false
                            },
                            {
                                "dn": "jansId=4754f784-e80f-4a36-a014-173bd3e6fb6f,ou=resources,ou=uma,o=jans",
                                "id": "4754f784-e80f-4a36-a014-173bd3e6fb6f",
                                "name": "uma-resource-1",
                                "iconUri": "https://config-api.com",
                                "scopes": [
                                    "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                                ],
                                "clients": [
                                    "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                                    "inum=1201.1d010784-b5bf-4813-8f49-cfea00f50498,ou=clients,o=jans"
                                ],
                                "description": "Uma resource one",
                                "deletable": false
                            },
                            {
                                "dn": "jansId=b0e7e1d7-ab67-45ec-be16-4466da70e63b,ou=resources,ou=uma,o=jans",
                                "id": "b0e7e1d7-ab67-45ec-be16-4466da70e63b",
                                "name": "uma-resource-2",
                                "iconUri": "https://config-api.com",
                                "scopes": [
                                    "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                                ],
                                "clients": [
                                    "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                                    "inum=1201.1d010784-b5bf-4813-8f49-cfea00f50498,ou=clients,o=jans"
                                ],
                                "description": "Uma resource two",
                                "deletable": false
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.readonly'
    put:
      tags:
        - OAuth - UMA Resources
      summary: Updates an UMA resource
      description: Updates an UMA resource
      operationId: put-oauth-uma-resources
      requestBody:
        description: UmaResource object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UmaResource'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                      "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                      "name": "config-api-resource",
                      "iconUri": "https://config-api.com",
                      "scopes": [
                          "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                      ],
                      "clients": [
                          "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                      ],
                      "description": "Uma resource config api",
                      "deletable": false
                  }
      responses:
        '200':
          description: UmaResource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmaResource'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                        "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                        "name": "config-api-resource",
                        "iconUri": "https://config-api.com",
                        "scopes": [
                            "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                        ],
                        "clients": [
                            "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                        ],
                        "description": "Uma resource config api",
                        "deletable": false
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.write'
    post:
      tags:
        - OAuth - UMA Resources
      summary: Creates an UMA resource
      description: Creates an UMA resource
      operationId: post-oauth-uma-resources
      requestBody:
        description: UmaResource object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UmaResource'
            examples:
              Request json example:
                description: Request json example
                value: |2
                   {
                          "name": "config-api-resource",
                          "iconUri": "https://config-api.com",
                          "clients": [
                              "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                          ],
                          "scopes":[
                              "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                          ],
                          "description": "Uma resource config api",
                          "deletable": false
                      }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmaResource'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                        "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                        "name": "config-api-resource",
                        "iconUri": "https://config-api.com",
                        "scopes": [
                            "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                        ],
                        "clients": [
                            "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                        ],
                        "description": "Uma resource config api",
                        "deletable": false
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.write'
  '/api/v1/uma/resources/{id}':
    get:
      tags:
        - OAuth - UMA Resources
      summary: Gets an UMA resource by ID
      description: Gets an UMA resource by ID
      operationId: get-oauth-uma-resources-by-id
      parameters:
        - name: id
          in: path
          description: Resource description ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmaResource'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                        "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                        "name": "config-api-resource",
                        "iconUri": "https://config-api.com",
                        "scopes": [
                            "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                        ],
                        "clients": [
                            "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                        ],
                        "description": "Uma resource config api",
                        "deletable": false
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.readonly'
    delete:
      tags:
        - OAuth - UMA Resources
      summary: Deletes an UMA resource
      description: Deletes an UMA resource
      operationId: delete-oauth-uma-resources-by-id
      parameters:
        - name: id
          in: path
          description: Resource description ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.delete'
    patch:
      tags:
        - OAuth - UMA Resources
      summary: Patch UMA resource
      description: Patch UMA resource
      operationId: patch-oauth-uma-resources-by-id
      parameters:
        - name: id
          in: path
          description: Resource description ID
          required: true
          schema:
            type: string
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: example/uma/resources/uma-resources-patch
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmaResource'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "jansId=55d70ecd-8572-43dd-895f-ecfaf09bf513,ou=resources,ou=uma,o=jans",
                        "id": "55d70ecd-8572-43dd-895f-ecfaf09bf513",
                        "name": "config-api-resource",
                        "iconUri": "https://config-api.com",
                        "scopes": [
                            "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                        ],
                        "clients": [
                            "inum=1800.e9131b86-f39f-421c-9dde-b7f90c21a2fe,ou=clients,o=jans"
                        ],
                        "description": "Uma resource config api",
                        "deletable": false
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.write'
  '/api/v1/uma/resources/clientId/{clientId}':
    get:
      tags:
        - OAuth - UMA Resources
      summary: Fetch uma resources by client id
      description: Fetch uma resources by client id
      operationId: get-oauth-uma-resources-by-clientid
      parameters:
        - name: clientId
          in: path
          description: Client ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UmaResource'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [
                        {
                            "dn": "jansId=b0e7e1d7-ab67-45ec-be16-4466da70e63b,ou=resources,ou=uma,o=jans",
                            "id": "b0e7e1d7-ab67-45ec-be16-4466da70e63b",
                            "name": "uma-resource-2",
                            "iconUri": "https://config-api.com",
                            "scopes": [
                                "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                            ],
                            "clients": [
                                "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                                "inum=1201.1d010784-b5bf-4813-8f49-cfea00f50498,ou=clients,o=jans"
                            ],
                            "description": "Uma resource two",
                            "deletable": false
                        },
                        {
                            "dn": "jansId=4754f784-e80f-4a36-a014-173bd3e6fb6f,ou=resources,ou=uma,o=jans",
                            "id": "4754f784-e80f-4a36-a014-173bd3e6fb6f",
                            "name": "uma-resource-1",
                            "iconUri": "https://config-api.com",
                            "scopes": [
                                "inum=ab47c599-d188-44b6-a32a-91e6b173856a,ou=scopes,o=jans"
                            ],
                            "clients": [
                                "inum=1800.768b3d38-a6e8-4be4-93d1-72df33d34fd6,ou=clients,o=jans",
                                "inum=1201.1d010784-b5bf-4813-8f49-cfea00f50498,ou=clients,o=jans"
                            ],
                            "description": "Uma resource one",
                            "deletable": false
                        }
                    ]
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/uma/resources.readonly'
  /fido2/fido2-config:
    get:
      tags:
        - Fido2 - Configuration
      summary: Gets Jans Authorization Server Fido2 configuration properties
      description: Gets Jans Authorization Server Fido2 configuration properties
      operationId: get-properties-fido2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration1'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.readonly'
    put:
      tags:
        - Fido2 - Configuration
      summary: Updates Fido2 configuration properties
      description: Updates Fido2 configuration properties
      operationId: put-properties-fido2
      requestBody:
        description: Fido2Config
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfiguration1'
      responses:
        '200':
          description: Fido2Config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration1'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.write'
  '/fido2/registration/id/{jansId}':
    get:
      tags:
        - Fido2 - Registration
      summary: Fetch Fido2RegistrationEntry by Id.
      description: Fetch Fido2RegistrationEntry by Id.
      operationId: get-fido2-by-id
      parameters:
        - name: jansId
          in: path
          description: Fido2Registration identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fido2RegistrationEntry'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "dn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,o=jans",
                        "id": "1c88c1cb-8e32-4b79-b244-c9f677ca5654",
                        "challange": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                        "challengeHash": 72585,
                        "creationDate": "2024-09-25T16:48:28",
                        "userInum": "1e73f801-22c2-4c19-a757-f96a87a5c713",
                        "rpId": "https://admin-ui-test.gluu.org",
                        "deletable": false,
                        "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                        "publicKeyIdHash": 306117,
                        "registrationData": {
                            "createdDate": "2024-09-25T16:48:28",
                            "updatedDate": "2024-09-25T16:49:14",
                            "createdBy": "admin",
                            "updatedBy": "admin",
                            "username": "admin",
                            "domain": "admin-ui-test.gluu.org",
                            "userId": "dIGgDiZj-uD0qYE52rbKAqdI7wlBOeIWqc8Qrgmp-GA",
                            "challenge": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                            "attenstationRequest": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"super_gluu_app_id\":\"https://admin-ui-test.gluu.org\",\"username\":\"admin\",\"displayName\":\"admin\",\"session_id\":\"aa7659a7-ea95-4ccf-802b-e2ce1f77592d\",\"attestation\":\"direct\"}",
                            "attenstationResponse": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"type\":\"public-key\",\"response\":{\"deviceData\":\"eyJwdXNoX3Rva2VuIjoiNWI1OWU5YzY2YjZkYWFjNDg4ODQ0MGY2YTQ0ZDY5MDU1NGE3NTlmOTA4MjM5N2QwMzdhYTg3ZjViZGVmZTA4OSIsInBsYXRmb3JtIjoiaW9zIiwib3NfdmVyc2lvbiI6IjE4LjAiLCJ1dWlkIjoiMzNENkZEMkQtODVEQy00NjQ1LUI1MjctNEEzOUJBMzBCOUY3Iiwib3NfbmFtZSI6ImlPUyIsInR5cGUiOiJpUGhvbmUiLCJuYW1lIjoiaVBob25lIn0=\",\"clientDataJSON\":\"eyJjaGFsbGVuZ2UiOiIydkNTYVBNSXQ0dFpwa084X3JERy12M1FvWEJZTUIxYXFDQVhGZ0E0cTBZIiwib3JpZ2luIjoiaHR0cHM6Ly9hZG1pbi11aS10ZXN0LmdsdXUub3JnIiwidHlwZSI6Im5hdmlnYXRvci5pZC5maW5pc2hFbnJvbGxtZW50In0\",\"attestationObject\":\"v2NmbXRzZmlkby11MmYtc3VwZXItZ2x1dWdhdHRTdG10v2N4NWOBeQP_TUlJQyt6Q0NBcUdnQXdJQkFnSUNFQU13Q2dZSUtvWkl6ajBFQXdJd2dhQXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJREFKVVdERVJNQThHQTFVRUNnd0lSMngxZFNCSmJtTXhLakFvQmdOVkJBc01JVWRzZFhVZ1NXNWpJRk5ISUVObGNuUnBabWxqWVhSbElFRjFkR2h2Y21sMGVURWtNQ0lHQTFVRUF3d2JSMngxZFNCSmJtTWdVMGNnU1c1MFpYSnRaV1JwWVhSbElFTkJNUjh3SFFZSktvWklodmNOQVFrQkZoQnpkWEJ3YjNKMFFHZHNkWFV1YjNKbk1CNFhEVEl6TURNd056RTBNekl6TkZvWERUSTJNRFF3TlRFME16SXpORm93Z2EweEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpVV0RFUE1BMEdBMVVFQnd3R1FYVnpkR2x1TVJFd0R3WURWUVFLREFoSGJIVjFJRWx1WXpFcU1DZ0dBMVVFQ3d3aFIyeDFkU0JKYm1NZ1UwY2dRMlZ5ZEdsbWFXTmhkR1VnUVhWMGFHOXlhWFI1TVNBd0hnWURWUVFEREJkVFJ5QkhiSFYxSUVsdVl5QlRSeUJKVDFNZ1VISnZaREVmTUIwR0NTcUdTSWIzRFFFSkFSWVFjM1Z3Y0c5eWRFQm5iSFYxTG05eVp6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJJdUxkY1dRVGRXY2pIZ2pUM05FRnR0S2grUTByRXl3MVdzeUZJZUFsNUpCZUZPanZWTUNoMThyK1ZwbGNoWHVFc1BDQUJ2dXhId3dieDhBT1dvZVBjaWpnYnN3Z2Jnd0NRWURWUjBUQkFJd0FEQVJCZ2xnaGtnQmh2aENBUUVFQkFNQ0I0QXdNd1lKWUlaSUFZYjRRZ0VOQkNZV0pFOXdaVzVUVTB3Z1IyVnVaWEpoZEdWa0lFTnNhV1Z1ZENCRFpYSjBhV1pwWTJGMFpUQWRCZ05WSFE0RUZnUVVFM3pUVTRDU3NTL0JhTVZPZ2U0dHpwTGh2WVF3SHdZRFZSMGpCQmd3Rm9BVXQySEJpdFBxTVFKWXZiZ3hlaFlWYW9pdGJ6QXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJQVBrNlRDaTc5dUtVa2JJLzVmMzFYT29SU1JYV1RDV1VlditwZ3F2ZUxhUUFpRUFwRVZsMEpSZkpsZUticXB3SkxBNVBzRWg3bDl4SkU2SHlOMWtac2ZrbkJRY3NpZ1hHMEUCIBzkX5fZ8u_p5WSXYf9snYVJr0ToaWKudDan31Sq_oDUAiEAmJfQD0TIVklEHqhaa9nvpdF0ZNQxTkVeABILEkZPsa__aGF1dGhEYXRhWM2SPi_U7b70sMUreG0v60G8suJ_QwlpkBIn-AYLG5BcVkEAAAAAAAAAAAAAAAAAAAAAAAAAAABAKdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7L9hMQJhMyZiLTEBYi0yWCDnjQGBQ5FbprdTRgVOa154aIp7JSc7I2LQijIavd9Wa2ItM1ggX0CyMtueg9vtuehvTU9rXDmOA19vqychmvATEkXUG5r__w\"},\"super_gluu_request_cancel\":false,\"id\":\"KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A\"}",
                            "uncompressedECPoint": "v2ExAmEzJmItMQFiLTJYIOeNAYFDkVumt1NGBU5rXnhoinslJzsjYtCKMhq931ZrYi0zWCBfQLIy256D2-256G9NT2tcOY4DX2-rJyGa8BMSRdQbmv8",
                            "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                            "type": "public-key",
                            "status": "registered",
                            "counter": 1,
                            "attestationType": "fido-u2f-super-gluu",
                            "signatureAlgorithm": -7,
                            "applicationId": "https://admin-ui-test.gluu.org"
                        },
                        "counter": 1,
                        "registrationStatus": "registered",
                        "deviceData": {
                            "uuid": "33D6FD2D-85DC-4645-B527-4A39BA30B9F7",
                            "type": "iPhone",
                            "platform": "ios",
                            "name": "iPhone",
                            "os_name": "iOS",
                            "os_version": "18.0",
                            "push_token": "5b59e9c66b6daac4888440f6a44d690554a759f9082397d037aa87f5bdefe089"
                        },
                        "baseDn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.readonly'
    delete:
      tags:
        - Fido2 - Registration
      summary: Delete Fido2 Device Data based on device UID
      description: Delete Fido2 Device Data based on device UID
      operationId: delete-fido2-data
      parameters:
        - name: jansId
          in: path
          description: Fido2Registration Unique identifier.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.delete'
  '/fido2/registration/entries/{username}':
    get:
      tags:
        - Fido2 - Registration
      summary: Get details of connected FIDO2 devices registered to user
      description: Get details of connected FIDO2 devices registered to user
      operationId: get-registration-entries-fido2
      parameters:
        - name: username
          in: path
          description: User name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fido2RegistrationEntryPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 3,
                        "entriesCount": 3,
                        "entries": [
                            {
                                "dn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans",
                                "id": "1c88c1cb-8e32-4b79-b244-c9f677ca5654",
                                "challange": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                                "challengeHash": 72585,
                                "creationDate": "2024-09-25T16:48:28",
                                "userInum": "1e73f801-22c2-4c19-a757-f96a87a5c713",
                                "rpId": "https://admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                                "publicKeyIdHash": 306117,
                                "registrationData": {
                                    "createdDate": "2024-09-25T16:48:28",
                                    "updatedDate": "2024-09-25T16:49:14",
                                    "createdBy": "admin",
                                    "updatedBy": "admin",
                                    "username": "admin",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "dIGgDiZj-uD0qYE52rbKAqdI7wlBOeIWqc8Qrgmp-GA",
                                    "challenge": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                                    "attenstationRequest": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"super_gluu_app_id\":\"https://admin-ui-test.gluu.org\",\"username\":\"admin\",\"displayName\":\"admin\",\"session_id\":\"aa7659a7-ea95-4ccf-802b-e2ce1f77592d\",\"attestation\":\"direct\"}",
                                    "attenstationResponse": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"type\":\"public-key\",\"response\":{\"deviceData\":\"eyJwdXNoX3Rva2VuIjoiNWI1OWU5YzY2YjZkYWFjNDg4ODQ0MGY2YTQ0ZDY5MDU1NGE3NTlmOTA4MjM5N2QwMzdhYTg3ZjViZGVmZTA4OSIsInBsYXRmb3JtIjoiaW9zIiwib3NfdmVyc2lvbiI6IjE4LjAiLCJ1dWlkIjoiMzNENkZEMkQtODVEQy00NjQ1LUI1MjctNEEzOUJBMzBCOUY3Iiwib3NfbmFtZSI6ImlPUyIsInR5cGUiOiJpUGhvbmUiLCJuYW1lIjoiaVBob25lIn0=\",\"clientDataJSON\":\"eyJjaGFsbGVuZ2UiOiIydkNTYVBNSXQ0dFpwa084X3JERy12M1FvWEJZTUIxYXFDQVhGZ0E0cTBZIiwib3JpZ2luIjoiaHR0cHM6Ly9hZG1pbi11aS10ZXN0LmdsdXUub3JnIiwidHlwZSI6Im5hdmlnYXRvci5pZC5maW5pc2hFbnJvbGxtZW50In0\",\"attestationObject\":\"v2NmbXRzZmlkby11MmYtc3VwZXItZ2x1dWdhdHRTdG10v2N4NWOBeQP_TUlJQyt6Q0NBcUdnQXdJQkFnSUNFQU13Q2dZSUtvWkl6ajBFQXdJd2dhQXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJREFKVVdERVJNQThHQTFVRUNnd0lSMngxZFNCSmJtTXhLakFvQmdOVkJBc01JVWRzZFhVZ1NXNWpJRk5ISUVObGNuUnBabWxqWVhSbElFRjFkR2h2Y21sMGVURWtNQ0lHQTFVRUF3d2JSMngxZFNCSmJtTWdVMGNnU1c1MFpYSnRaV1JwWVhSbElFTkJNUjh3SFFZSktvWklodmNOQVFrQkZoQnpkWEJ3YjNKMFFHZHNkWFV1YjNKbk1CNFhEVEl6TURNd056RTBNekl6TkZvWERUSTJNRFF3TlRFME16SXpORm93Z2EweEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpVV0RFUE1BMEdBMVVFQnd3R1FYVnpkR2x1TVJFd0R3WURWUVFLREFoSGJIVjFJRWx1WXpFcU1DZ0dBMVVFQ3d3aFIyeDFkU0JKYm1NZ1UwY2dRMlZ5ZEdsbWFXTmhkR1VnUVhWMGFHOXlhWFI1TVNBd0hnWURWUVFEREJkVFJ5QkhiSFYxSUVsdVl5QlRSeUJKVDFNZ1VISnZaREVmTUIwR0NTcUdTSWIzRFFFSkFSWVFjM1Z3Y0c5eWRFQm5iSFYxTG05eVp6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJJdUxkY1dRVGRXY2pIZ2pUM05FRnR0S2grUTByRXl3MVdzeUZJZUFsNUpCZUZPanZWTUNoMThyK1ZwbGNoWHVFc1BDQUJ2dXhId3dieDhBT1dvZVBjaWpnYnN3Z2Jnd0NRWURWUjBUQkFJd0FEQVJCZ2xnaGtnQmh2aENBUUVFQkFNQ0I0QXdNd1lKWUlaSUFZYjRRZ0VOQkNZV0pFOXdaVzVUVTB3Z1IyVnVaWEpoZEdWa0lFTnNhV1Z1ZENCRFpYSjBhV1pwWTJGMFpUQWRCZ05WSFE0RUZnUVVFM3pUVTRDU3NTL0JhTVZPZ2U0dHpwTGh2WVF3SHdZRFZSMGpCQmd3Rm9BVXQySEJpdFBxTVFKWXZiZ3hlaFlWYW9pdGJ6QXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJQVBrNlRDaTc5dUtVa2JJLzVmMzFYT29SU1JYV1RDV1VlditwZ3F2ZUxhUUFpRUFwRVZsMEpSZkpsZUticXB3SkxBNVBzRWg3bDl4SkU2SHlOMWtac2ZrbkJRY3NpZ1hHMEUCIBzkX5fZ8u_p5WSXYf9snYVJr0ToaWKudDan31Sq_oDUAiEAmJfQD0TIVklEHqhaa9nvpdF0ZNQxTkVeABILEkZPsa__aGF1dGhEYXRhWM2SPi_U7b70sMUreG0v60G8suJ_QwlpkBIn-AYLG5BcVkEAAAAAAAAAAAAAAAAAAAAAAAAAAABAKdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7L9hMQJhMyZiLTEBYi0yWCDnjQGBQ5FbprdTRgVOa154aIp7JSc7I2LQijIavd9Wa2ItM1ggX0CyMtueg9vtuehvTU9rXDmOA19vqychmvATEkXUG5r__w\"},\"super_gluu_request_cancel\":false,\"id\":\"KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A\"}",
                                    "uncompressedECPoint": "v2ExAmEzJmItMQFiLTJYIOeNAYFDkVumt1NGBU5rXnhoinslJzsjYtCKMhq931ZrYi0zWCBfQLIy256D2-256G9NT2tcOY4DX2-rJyGa8BMSRdQbmv8",
                                    "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 1,
                                    "attestationType": "fido-u2f-super-gluu",
                                    "signatureAlgorithm": -7,
                                    "applicationId": "https://admin-ui-test.gluu.org"
                                },
                                "counter": 1,
                                "registrationStatus": "registered",
                                "deviceData": {
                                    "uuid": "33D6FD2D-85DC-4645-B527-4A39BA30B9F7",
                                    "type": "iPhone",
                                    "platform": "ios",
                                    "name": "iPhone",
                                    "os_name": "iOS",
                                    "os_version": "18.0",
                                    "push_token": "5b59e9c66b6daac4888440f6a44d690554a759f9082397d037aa87f5bdefe089"
                                },
                                "baseDn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans"
                            },
                            {
                                "dn": "jansId=50b1c565-cb63-4d1c-9e60-b25c7ed15807,ou=fido2_register,inum=4e138215-42c6-43b2-a138-e98d282421a3,ou=people,o=jans",
                                "id": "50b1c565-cb63-4d1c-9e60-b25c7ed15807",
                                "challange": "uKQWXt4bowi2DM8EWtuFWOhMZLh9Fqw7r-4LWFcFY2I",
                                "challengeHash": 73147,
                                "creationDate": "2024-09-25T17:32:00",
                                "userInum": "4e138215-42c6-43b2-a138-e98d282421a3",
                                "rpId": "admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "TTtrcadQOUwPKVRBccLNJw3PnNw",
                                "publicKeyIdHash": 31071,
                                "registrationData": {
                                    "createdDate": "2024-09-25T17:32:00",
                                    "updatedDate": "2024-09-25T17:34:53",
                                    "createdBy": "arnab",
                                    "updatedBy": "arnab",
                                    "username": "arnab",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "EZ-odnHs9EDWdY52OikD--lqjvFAHqJdZctqnxu0Kao",
                                    "challenge": "uKQWXt4bowi2DM8EWtuFWOhMZLh9Fqw7r-4LWFcFY2I",
                                    "attenstationRequest": "{\"attestation\":\"direct\",\"displayName\":\"arnab\",\"authenticatorSelection\":{\"authenticatorAttachment\":\"platform\",\"userVerification\":\"discouraged\",\"requireResidentKey\":\"false\"},\"username\":\"arnab\"}",
                                    "attenstationResponse": "{\"type\":\"public-key\",\"id\":\"TTtrcadQOUwPKVRBccLNJw3PnNw\",\"response\":{\"attestationObject\":\"o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YViYjZHVp5tBCFVmGadN9klm_j50zRn-V4OMG9wljvmxv3ddAAAAAPv8MAcVTk7MjAtuAgVX170AFE07a3GnUDlMDylUQXHCzScNz5zcpQECAyYgASFYIEAey21gffFOf4PAHS2YtXE2mShi8LDXhHg5zouLceaXIlggvCyrOjHhY_KvPDCKmssmF1g8YbEn_fXRAfHf-cfVros\",\"clientDataJSON\":\"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoidUtRV1h0NGJvd2kyRE04RVd0dUZXT2hNWkxoOUZxdzdyLTRMV0ZjRlkySSIsIm9yaWdpbiI6Imh0dHBzOi8vYWRtaW4tdWktdGVzdC5nbHV1Lm9yZyIsImNyb3NzT3JpZ2luIjpmYWxzZX0\"},\"clientExtensionResults\":{}}",
                                    "uncompressedECPoint": "pQECAyYgASFYIEAey21gffFOf4PAHS2YtXE2mShi8LDXhHg5zouLceaXIlggvCyrOjHhY_KvPDCKmssmF1g8YbEn_fXRAfHf-cfVros",
                                    "publicKeyId": "TTtrcadQOUwPKVRBccLNJw3PnNw",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 0,
                                    "attestationType": "none",
                                    "signatureAlgorithm": 0,
                                    "applicationId": "admin-ui-test.gluu.org"
                                },
                                "counter": 0,
                                "registrationStatus": "registered",
                                "baseDn": "jansId=50b1c565-cb63-4d1c-9e60-b25c7ed15807,ou=fido2_register,inum=4e138215-42c6-43b2-a138-e98d282421a3,ou=people,o=jans"
                            },
                            {
                                "dn": "jansId=6e196a5d-122b-4f06-8ff8-6f41b32bc2a6,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans",
                                "id": "6e196a5d-122b-4f06-8ff8-6f41b32bc2a6",
                                "challange": "CCkCZgre81B-6SYCzzfLqSReF4b7enbibnp487AEPkU",
                                "challengeHash": 76195,
                                "creationDate": "2024-09-25T17:13:51",
                                "userInum": "1e73f801-22c2-4c19-a757-f96a87a5c713",
                                "rpId": "admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8",
                                "publicKeyIdHash": 75217,
                                "registrationData": {
                                    "createdDate": "2024-09-25T17:13:51",
                                    "updatedDate": "2024-09-25T17:15:43",
                                    "createdBy": "admin",
                                    "updatedBy": "admin",
                                    "username": "admin",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "fEJVrzv_s5p5_SCUjiVofbS01eKJwybVIFoRcE-Vl6Y",
                                    "challenge": "CCkCZgre81B-6SYCzzfLqSReF4b7enbibnp487AEPkU",
                                    "attenstationRequest": "{\"attestation\":\"direct\",\"displayName\":\"admin\",\"authenticatorSelection\":{\"authenticatorAttachment\":\"platform\",\"userVerification\":\"discouraged\",\"requireResidentKey\":\"false\"},\"username\":\"admin\"}",
                                    "attenstationResponse": "{\"type\":\"public-key\",\"id\":\"RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8\",\"response\":{\"attestationObject\":\"o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEcwRQIhANoBaaelHNJkCSnrmxSeixWKyCsA-IYW19LAv7IQoRcnAiAaQw6Rjc1By7RdA00k6qzDtOwLCoPvBTFACAL9nr6tPWhhdXRoRGF0YVikjZHVp5tBCFVmGadN9klm_j50zRn-V4OMG9wljvmxv3dFAAAAAK3OAAI1vMYKZIsLJfHwVQMAIEWgNQRYDMIClxUlWCeKj2m9A8_2OM57Vh9FqttVM-nPpQECAyYgASFYIMyALzgwTY7Oe3rzssnlBfrwk5TuZ1a-cKkEuRIYE0-tIlgghEQR51yw4l1fQLjvYi4ydFdOvC5rHkVrk-xxcuwcotE\",\"clientDataJSON\":\"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiQ0NrQ1pncmU4MUItNlNZQ3p6ZkxxU1JlRjRiN2VuYmlibnA0ODdBRVBrVSIsIm9yaWdpbiI6Imh0dHBzOi8vYWRtaW4tdWktdGVzdC5nbHV1Lm9yZyIsImNyb3NzT3JpZ2luIjpmYWxzZX0\"},\"clientExtensionResults\":{}}",
                                    "uncompressedECPoint": "pQECAyYgASFYIMyALzgwTY7Oe3rzssnlBfrwk5TuZ1a-cKkEuRIYE0-tIlgghEQR51yw4l1fQLjvYi4ydFdOvC5rHkVrk-xxcuwcotE",
                                    "publicKeyId": "RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 0,
                                    "attestationType": "packed",
                                    "signatureAlgorithm": 0,
                                    "applicationId": "admin-ui-test.gluu.org"
                                },
                                "counter": 0,
                                "registrationStatus": "registered",
                                "baseDn": "jansId=6e196a5d-122b-4f06-8ff8-6f41b32bc2a6,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.readonly'
  /fido2/registration:
    get:
      tags:
        - Fido2 - Registration
      summary: Get a list of Fido2RegistrationEntry.
      description: Get a list of Fido2RegistrationEntry.
      operationId: search-fido2-registration-data
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Data whose value will be used to order the returned response
          schema:
            type: string
            default: jansId
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'mail=abc@mail.com,jansStatus=true'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fido2RegistrationEntryPagedResult'
              examples:
                Response example:
                  description: Response example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 3,
                        "entriesCount": 3,
                        "entries": [
                            {
                                "dn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans",
                                "id": "1c88c1cb-8e32-4b79-b244-c9f677ca5654",
                                "challange": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                                "challengeHash": 72585,
                                "creationDate": "2024-09-25T16:48:28",
                                "userInum": "1e73f801-22c2-4c19-a757-f96a87a5c713",
                                "rpId": "https://admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                                "publicKeyIdHash": 306117,
                                "registrationData": {
                                    "createdDate": "2024-09-25T16:48:28",
                                    "updatedDate": "2024-09-25T16:49:14",
                                    "createdBy": "admin",
                                    "updatedBy": "admin",
                                    "username": "admin",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "dIGgDiZj-uD0qYE52rbKAqdI7wlBOeIWqc8Qrgmp-GA",
                                    "challenge": "2vCSaPMIt4tZpkO8_rDG-v3QoXBYMB1aqCAXFgA4q0Y",
                                    "attenstationRequest": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"super_gluu_app_id\":\"https://admin-ui-test.gluu.org\",\"username\":\"admin\",\"displayName\":\"admin\",\"session_id\":\"aa7659a7-ea95-4ccf-802b-e2ce1f77592d\",\"attestation\":\"direct\"}",
                                    "attenstationResponse": "{\"super_gluu_request\":true,\"super_gluu_request_mode\":\"two_step\",\"type\":\"public-key\",\"response\":{\"deviceData\":\"eyJwdXNoX3Rva2VuIjoiNWI1OWU5YzY2YjZkYWFjNDg4ODQ0MGY2YTQ0ZDY5MDU1NGE3NTlmOTA4MjM5N2QwMzdhYTg3ZjViZGVmZTA4OSIsInBsYXRmb3JtIjoiaW9zIiwib3NfdmVyc2lvbiI6IjE4LjAiLCJ1dWlkIjoiMzNENkZEMkQtODVEQy00NjQ1LUI1MjctNEEzOUJBMzBCOUY3Iiwib3NfbmFtZSI6ImlPUyIsInR5cGUiOiJpUGhvbmUiLCJuYW1lIjoiaVBob25lIn0=\",\"clientDataJSON\":\"eyJjaGFsbGVuZ2UiOiIydkNTYVBNSXQ0dFpwa084X3JERy12M1FvWEJZTUIxYXFDQVhGZ0E0cTBZIiwib3JpZ2luIjoiaHR0cHM6Ly9hZG1pbi11aS10ZXN0LmdsdXUub3JnIiwidHlwZSI6Im5hdmlnYXRvci5pZC5maW5pc2hFbnJvbGxtZW50In0\",\"attestationObject\":\"v2NmbXRzZmlkby11MmYtc3VwZXItZ2x1dWdhdHRTdG10v2N4NWOBeQP_TUlJQyt6Q0NBcUdnQXdJQkFnSUNFQU13Q2dZSUtvWkl6ajBFQXdJd2dhQXhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJREFKVVdERVJNQThHQTFVRUNnd0lSMngxZFNCSmJtTXhLakFvQmdOVkJBc01JVWRzZFhVZ1NXNWpJRk5ISUVObGNuUnBabWxqWVhSbElFRjFkR2h2Y21sMGVURWtNQ0lHQTFVRUF3d2JSMngxZFNCSmJtTWdVMGNnU1c1MFpYSnRaV1JwWVhSbElFTkJNUjh3SFFZSktvWklodmNOQVFrQkZoQnpkWEJ3YjNKMFFHZHNkWFV1YjNKbk1CNFhEVEl6TURNd056RTBNekl6TkZvWERUSTJNRFF3TlRFME16SXpORm93Z2EweEN6QUpCZ05WQkFZVEFsVlRNUXN3Q1FZRFZRUUlEQUpVV0RFUE1BMEdBMVVFQnd3R1FYVnpkR2x1TVJFd0R3WURWUVFLREFoSGJIVjFJRWx1WXpFcU1DZ0dBMVVFQ3d3aFIyeDFkU0JKYm1NZ1UwY2dRMlZ5ZEdsbWFXTmhkR1VnUVhWMGFHOXlhWFI1TVNBd0hnWURWUVFEREJkVFJ5QkhiSFYxSUVsdVl5QlRSeUJKVDFNZ1VISnZaREVmTUIwR0NTcUdTSWIzRFFFSkFSWVFjM1Z3Y0c5eWRFQm5iSFYxTG05eVp6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJJdUxkY1dRVGRXY2pIZ2pUM05FRnR0S2grUTByRXl3MVdzeUZJZUFsNUpCZUZPanZWTUNoMThyK1ZwbGNoWHVFc1BDQUJ2dXhId3dieDhBT1dvZVBjaWpnYnN3Z2Jnd0NRWURWUjBUQkFJd0FEQVJCZ2xnaGtnQmh2aENBUUVFQkFNQ0I0QXdNd1lKWUlaSUFZYjRRZ0VOQkNZV0pFOXdaVzVUVTB3Z1IyVnVaWEpoZEdWa0lFTnNhV1Z1ZENCRFpYSjBhV1pwWTJGMFpUQWRCZ05WSFE0RUZnUVVFM3pUVTRDU3NTL0JhTVZPZ2U0dHpwTGh2WVF3SHdZRFZSMGpCQmd3Rm9BVXQySEJpdFBxTVFKWXZiZ3hlaFlWYW9pdGJ6QXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJQVBrNlRDaTc5dUtVa2JJLzVmMzFYT29SU1JYV1RDV1VlditwZ3F2ZUxhUUFpRUFwRVZsMEpSZkpsZUticXB3SkxBNVBzRWg3bDl4SkU2SHlOMWtac2ZrbkJRY3NpZ1hHMEUCIBzkX5fZ8u_p5WSXYf9snYVJr0ToaWKudDan31Sq_oDUAiEAmJfQD0TIVklEHqhaa9nvpdF0ZNQxTkVeABILEkZPsa__aGF1dGhEYXRhWM2SPi_U7b70sMUreG0v60G8suJ_QwlpkBIn-AYLG5BcVkEAAAAAAAAAAAAAAAAAAAAAAAAAAABAKdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7L9hMQJhMyZiLTEBYi0yWCDnjQGBQ5FbprdTRgVOa154aIp7JSc7I2LQijIavd9Wa2ItM1ggX0CyMtueg9vtuehvTU9rXDmOA19vqychmvATEkXUG5r__w\"},\"super_gluu_request_cancel\":false,\"id\":\"KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A\"}",
                                    "uncompressedECPoint": "v2ExAmEzJmItMQFiLTJYIOeNAYFDkVumt1NGBU5rXnhoinslJzsjYtCKMhq931ZrYi0zWCBfQLIy256D2-256G9NT2tcOY4DX2-rJyGa8BMSRdQbmv8",
                                    "publicKeyId": "KdwKkzDJDf0o2fLUWk0NDLpSX0QXFXG3H3a46RBTfGzyx69wQ6YJMMzSiIJXXEAKtjtAvNyQ1bOCkeWXZJ3u7A",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 1,
                                    "attestationType": "fido-u2f-super-gluu",
                                    "signatureAlgorithm": -7,
                                    "applicationId": "https://admin-ui-test.gluu.org"
                                },
                                "counter": 1,
                                "registrationStatus": "registered",
                                "deviceData": {
                                    "uuid": "33D6FD2D-85DC-4645-B527-4A39BA30B9F7",
                                    "type": "iPhone",
                                    "platform": "ios",
                                    "name": "iPhone",
                                    "os_name": "iOS",
                                    "os_version": "18.0",
                                    "push_token": "5b59e9c66b6daac4888440f6a44d690554a759f9082397d037aa87f5bdefe089"
                                },
                                "baseDn": "jansId=1c88c1cb-8e32-4b79-b244-c9f677ca5654,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans"
                            },
                            {
                                "dn": "jansId=50b1c565-cb63-4d1c-9e60-b25c7ed15807,ou=fido2_register,inum=4e138215-42c6-43b2-a138-e98d282421a3,ou=people,o=jans",
                                "id": "50b1c565-cb63-4d1c-9e60-b25c7ed15807",
                                "challange": "uKQWXt4bowi2DM8EWtuFWOhMZLh9Fqw7r-4LWFcFY2I",
                                "challengeHash": 73147,
                                "creationDate": "2024-09-25T17:32:00",
                                "userInum": "4e138215-42c6-43b2-a138-e98d282421a3",
                                "rpId": "admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "TTtrcadQOUwPKVRBccLNJw3PnNw",
                                "publicKeyIdHash": 31071,
                                "registrationData": {
                                    "createdDate": "2024-09-25T17:32:00",
                                    "updatedDate": "2024-09-25T17:34:53",
                                    "createdBy": "arnab",
                                    "updatedBy": "arnab",
                                    "username": "arnab",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "EZ-odnHs9EDWdY52OikD--lqjvFAHqJdZctqnxu0Kao",
                                    "challenge": "uKQWXt4bowi2DM8EWtuFWOhMZLh9Fqw7r-4LWFcFY2I",
                                    "attenstationRequest": "{\"attestation\":\"direct\",\"displayName\":\"arnab\",\"authenticatorSelection\":{\"authenticatorAttachment\":\"platform\",\"userVerification\":\"discouraged\",\"requireResidentKey\":\"false\"},\"username\":\"arnab\"}",
                                    "attenstationResponse": "{\"type\":\"public-key\",\"id\":\"TTtrcadQOUwPKVRBccLNJw3PnNw\",\"response\":{\"attestationObject\":\"o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YViYjZHVp5tBCFVmGadN9klm_j50zRn-V4OMG9wljvmxv3ddAAAAAPv8MAcVTk7MjAtuAgVX170AFE07a3GnUDlMDylUQXHCzScNz5zcpQECAyYgASFYIEAey21gffFOf4PAHS2YtXE2mShi8LDXhHg5zouLceaXIlggvCyrOjHhY_KvPDCKmssmF1g8YbEn_fXRAfHf-cfVros\",\"clientDataJSON\":\"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoidUtRV1h0NGJvd2kyRE04RVd0dUZXT2hNWkxoOUZxdzdyLTRMV0ZjRlkySSIsIm9yaWdpbiI6Imh0dHBzOi8vYWRtaW4tdWktdGVzdC5nbHV1Lm9yZyIsImNyb3NzT3JpZ2luIjpmYWxzZX0\"},\"clientExtensionResults\":{}}",
                                    "uncompressedECPoint": "pQECAyYgASFYIEAey21gffFOf4PAHS2YtXE2mShi8LDXhHg5zouLceaXIlggvCyrOjHhY_KvPDCKmssmF1g8YbEn_fXRAfHf-cfVros",
                                    "publicKeyId": "TTtrcadQOUwPKVRBccLNJw3PnNw",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 0,
                                    "attestationType": "none",
                                    "signatureAlgorithm": 0,
                                    "applicationId": "admin-ui-test.gluu.org"
                                },
                                "counter": 0,
                                "registrationStatus": "registered",
                                "baseDn": "jansId=50b1c565-cb63-4d1c-9e60-b25c7ed15807,ou=fido2_register,inum=4e138215-42c6-43b2-a138-e98d282421a3,ou=people,o=jans"
                            },
                            {
                                "dn": "jansId=6e196a5d-122b-4f06-8ff8-6f41b32bc2a6,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans",
                                "id": "6e196a5d-122b-4f06-8ff8-6f41b32bc2a6",
                                "challange": "CCkCZgre81B-6SYCzzfLqSReF4b7enbibnp487AEPkU",
                                "challengeHash": 76195,
                                "creationDate": "2024-09-25T17:13:51",
                                "userInum": "1e73f801-22c2-4c19-a757-f96a87a5c713",
                                "rpId": "admin-ui-test.gluu.org",
                                "deletable": false,
                                "publicKeyId": "RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8",
                                "publicKeyIdHash": 75217,
                                "registrationData": {
                                    "createdDate": "2024-09-25T17:13:51",
                                    "updatedDate": "2024-09-25T17:15:43",
                                    "createdBy": "admin",
                                    "updatedBy": "admin",
                                    "username": "admin",
                                    "domain": "admin-ui-test.gluu.org",
                                    "userId": "fEJVrzv_s5p5_SCUjiVofbS01eKJwybVIFoRcE-Vl6Y",
                                    "challenge": "CCkCZgre81B-6SYCzzfLqSReF4b7enbibnp487AEPkU",
                                    "attenstationRequest": "{\"attestation\":\"direct\",\"displayName\":\"admin\",\"authenticatorSelection\":{\"authenticatorAttachment\":\"platform\",\"userVerification\":\"discouraged\",\"requireResidentKey\":\"false\"},\"username\":\"admin\"}",
                                    "attenstationResponse": "{\"type\":\"public-key\",\"id\":\"RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8\",\"response\":{\"attestationObject\":\"o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEcwRQIhANoBaaelHNJkCSnrmxSeixWKyCsA-IYW19LAv7IQoRcnAiAaQw6Rjc1By7RdA00k6qzDtOwLCoPvBTFACAL9nr6tPWhhdXRoRGF0YVikjZHVp5tBCFVmGadN9klm_j50zRn-V4OMG9wljvmxv3dFAAAAAK3OAAI1vMYKZIsLJfHwVQMAIEWgNQRYDMIClxUlWCeKj2m9A8_2OM57Vh9FqttVM-nPpQECAyYgASFYIMyALzgwTY7Oe3rzssnlBfrwk5TuZ1a-cKkEuRIYE0-tIlgghEQR51yw4l1fQLjvYi4ydFdOvC5rHkVrk-xxcuwcotE\",\"clientDataJSON\":\"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiQ0NrQ1pncmU4MUItNlNZQ3p6ZkxxU1JlRjRiN2VuYmlibnA0ODdBRVBrVSIsIm9yaWdpbiI6Imh0dHBzOi8vYWRtaW4tdWktdGVzdC5nbHV1Lm9yZyIsImNyb3NzT3JpZ2luIjpmYWxzZX0\"},\"clientExtensionResults\":{}}",
                                    "uncompressedECPoint": "pQECAyYgASFYIMyALzgwTY7Oe3rzssnlBfrwk5TuZ1a-cKkEuRIYE0-tIlgghEQR51yw4l1fQLjvYi4ydFdOvC5rHkVrk-xxcuwcotE",
                                    "publicKeyId": "RaA1BFgMwgKXFSVYJ4qPab0Dz_Y4zntWH0Wq21Uz6c8",
                                    "type": "public-key",
                                    "status": "registered",
                                    "counter": 0,
                                    "attestationType": "packed",
                                    "signatureAlgorithm": 0,
                                    "applicationId": "admin-ui-test.gluu.org"
                                },
                                "counter": 0,
                                "registrationStatus": "registered",
                                "baseDn": "jansId=6e196a5d-122b-4f06-8ff8-6f41b32bc2a6,ou=fido2_register,inum=1e73f801-22c2-4c19-a757-f96a87a5c713,ou=people,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/fido2.readonly'
  /mgt/configuser:
    get:
      tags:
        - Configuration – User Management
      summary: Gets list of users
      description: Gets list of users
      operationId: get-user
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'mail=abc@mail.com,jansStatus=true'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 23,
                        "entriesCount": 2,
                        "entries": [
                            {
                                "dn": "inum=XXXX.DDDD-4444,ou=people,o=jans",
                                "userId": "dddd4444",
                                "customAttributes": [
                                    {
                                        "name": "sn",
                                        "multiValued": false,
                                        "values": [
                                            "FilterTest"
                                        ],
                                        "value": "FilterTest",
                                        "displayValue": "FilterTest"
                                    }
                                ],
                                "customObjectClasses": [
                                    "top",
                                    "jansCustomPerson"
                                ],
                                "inum": "XXXX.DDDD-4444",
                                "displayName": "Test Dddd 4444",
                                "jansStatus": "active",
                                "givenName": "(special chars\\)/*",
                                "baseDn": "inum=XXXX.DDDD-4444,ou=people,o=jans"
                            },
                            {
                                "dn": "inum=XXXX.EEEE-1111,ou=people,o=jans",
                                "userId": "eeee1111",
                                "customObjectClasses": [
                                    "top",
                                    "jansCustomPerson"
                                ],
                                "inum": "XXXX.EEEE-1111",
                                "jansStatus": "active",
                                "baseDn": "inum=XXXX.EEEE-1111,ou=people,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.readonly'
    put:
      tags:
        - Configuration – User Management
      summary: Update User
      description: Update User
      operationId: put-user
      parameters:
        - name: removeNonLDAPAttributes
          in: query
          description: >-
            Boolean flag to indicate if attributes to be removed for non-LDAP
            DB. Default value is true, indicating non-LDAP attributes will be
            removed from request.
          schema:
            type: boolean
            default: true
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "dn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans",
                      "userId": "testUser1",
                      "createdAt": "2022-10-27T22:45:48",
                      "customAttributes": [
                          {
                              "name": "birthdate",
                              "multiValued": false,
                              "values": [
                                  "20001231041508.553Z"
                              ],
                              "value": "20001231041508.553Z",
                              "displayValue": "20001231041508.553Z"
                          },
                          {
                              "name": "emailVerified",
                              "multiValued": false,
                              "values": [
                                  "TRUE"
                              ],
                              "value": "TRUE",
                              "displayValue": "TRUE"
                          },
                          {
                              "name": "jansAdminUIRole",
                              "multiValued": false,
                              "values": [
                                  "api-admin"
                              ],
                              "value": "api-admin",
                              "displayValue": "api-admin"
                          },
                          {
                              "name": "memberOf",
                              "multiValued": false,
                              "values": [
                                  "inum=60B7,ou=groups,o=jans"
                              ],
                              "value": "inum=60B7,ou=groups,o=jans",
                              "displayValue": "inum=60B7,ou=groups,o=jans"
                          },
                          {
                              "name": "middleName",
                              "multiValued": false,
                              "values": [
                                  "Test USer 3"
                              ],
                              "value": "Test USer 3",
                              "displayValue": "Test USer 3"
                          },
                          {
                              "name": "nickname",
                              "multiValued": false,
                              "values": [
                                  "Test USer 3"
                              ],
                              "value": "Test USer 3",
                              "displayValue": "Test USer 3"
                          },
                          {
                              "name": "sn",
                              "multiValued": false,
                              "values": [
                                  "User3"
                              ],
                              "value": "User3",
                              "displayValue": "User3"
                          }
                      ],
                      "customObjectClasses": [
                          "top",
                          "jansCustomPerson"
                      ],
                      "inum": "559a7e26-7a33-4e11-9d42-13266d33261e",
                      "mail": "test3@jans.server",
                      "displayName": "Default Test User 32",
                      "jansStatus": "active",
                      "givenName": "Test3",
                      "baseDn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans",
                        "userId": "testUser1",
                        "createdAt": "2022-10-27T22:45:48",
                        "customAttributes": [
                            {
                                "name": "birthdate",
                                "multiValued": false,
                                "values": [
                                    "20001231041508.553Z"
                                ],
                                "value": "20001231041508.553Z",
                                "displayValue": "20001231041508.553Z"
                            },
                            {
                                "name": "emailVerified",
                                "multiValued": false,
                                "values": [
                                    "TRUE"
                                ],
                                "value": "TRUE",
                                "displayValue": "TRUE"
                            },
                            {
                                "name": "jansAdminUIRole",
                                "multiValued": false,
                                "values": [
                                    "api-admin"
                                ],
                                "value": "api-admin",
                                "displayValue": "api-admin"
                            },
                            {
                                "name": "memberOf",
                                "multiValued": false,
                                "values": [
                                    "inum=60B7,ou=groups,o=jans"
                                ],
                                "value": "inum=60B7,ou=groups,o=jans",
                                "displayValue": "inum=60B7,ou=groups,o=jans"
                            },
                            {
                                "name": "middleName",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "nickname",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "sn",
                                "multiValued": false,
                                "values": [
                                    "User3"
                                ],
                                "value": "User3",
                                "displayValue": "User3"
                            }
                        ],
                        "customObjectClasses": [
                            "top",
                            "jansCustomPerson"
                        ],
                        "inum": "559a7e26-7a33-4e11-9d42-13266d33261e",
                        "mail": "test3@jans.server",
                        "displayName": "Default Test User 32",
                        "jansStatus": "active",
                        "givenName": "Test3",
                        "baseDn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans"
                    }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.write'
    post:
      tags:
        - Configuration – User Management
      summary: Create new User
      description: Create new User
      operationId: post-user
      parameters:
        - name: removeNonLDAPAttributes
          in: query
          description: >-
            Boolean flag to indicate if attributes to be removed for non-LDAP
            DB. Default value is true, indicating non-LDAP attributes will be
            removed from request.
          schema:
            type: boolean
            default: true
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                      "userId": "testUser1",
                      "createdAt": "2022-05-30T20:06:57",
                      "customAttributes": [
                          {
                              "name": "emailVerified",
                              "multiValued": false,
                              "values": [
                                  "TRUE"
                              ],
                              "value": "TRUE",
                              "displayValue": "TRUE"
                          },
                          {
                              "name": "jansAdminUIRole",
                              "multiValued": false,
                              "values": [
                                  "api-admin"
                              ],
                              "value": "api-admin",
                              "displayValue": "api-admin"
                          },
                          {
                              "name": "memberOf",
                              "multiValued": false,
                              "values": [
                                  "inum=60B7,ou=groups,o=jans"
                              ],
                              "value": "inum=60B7,ou=groups,o=jans",
                              "displayValue": "inum=60B7,ou=groups,o=jans"
                          },
                          {
                              "name": "middleName",
                              "multiValued": false,
                              "values": [
                                  "Test USer 3"
                              ],
                              "value": "Test USer 3",
                              "displayValue": "Test USer 3"
                          },
                          {
                              "name": "nickname",
                              "multiValued": false,
                              "values": [
                                  "Test USer 3"
                              ],
                              "value": "Test USer 3",
                              "displayValue": "Test USer 3"
                          },
                          {
                              "name": "sn",
                              "multiValued": false,
                              "values": [
                                  "User3"
                              ],
                              "value": "User3",
                              "displayValue": "User3"
                          },{
                                  "name": "birthdate",
                                  "multiValued": false,
                                  "values": [
                                      "20001231041508.553Z"
                                  ],
                                  "value": "20001231041508.553Z",
                                  "displayValue": "20001231041508.553Z"
                              }
                      ],
                      "customObjectClasses": [
                          "top",
                          "jansCustomPerson"
                      ],
                      "mail": "test3@jans.server",
                      "displayName": "Default Test User 32",
                      "jansStatus": "active",
                      "givenName": "Test3",
                      "userPassword": "test123"
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans",
                        "userId": "testUser1",
                        "createdAt": "2022-10-27T22:45:48",
                        "customAttributes": [
                            {
                                "name": "birthdate",
                                "multiValued": false,
                                "values": [
                                    "20001231041508.553Z"
                                ],
                                "value": "20001231041508.553Z",
                                "displayValue": "20001231041508.553Z"
                            },
                            {
                                "name": "emailVerified",
                                "multiValued": false,
                                "values": [
                                    "TRUE"
                                ],
                                "value": "TRUE",
                                "displayValue": "TRUE"
                            },
                            {
                                "name": "jansAdminUIRole",
                                "multiValued": false,
                                "values": [
                                    "api-admin"
                                ],
                                "value": "api-admin",
                                "displayValue": "api-admin"
                            },
                            {
                                "name": "memberOf",
                                "multiValued": false,
                                "values": [
                                    "inum=60B7,ou=groups,o=jans"
                                ],
                                "value": "inum=60B7,ou=groups,o=jans",
                                "displayValue": "inum=60B7,ou=groups,o=jans"
                            },
                            {
                                "name": "middleName",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "nickname",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "sn",
                                "multiValued": false,
                                "values": [
                                    "User3"
                                ],
                                "value": "User3",
                                "displayValue": "User3"
                            }
                        ],
                        "customObjectClasses": [
                            "top",
                            "jansCustomPerson"
                        ],
                        "inum": "559a7e26-7a33-4e11-9d42-13266d33261e",
                        "mail": "test3@jans.server",
                        "displayName": "Default Test User 32",
                        "jansStatus": "active",
                        "givenName": "Test3",
                        "baseDn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans"
                    }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.write'
  '/mgt/configuser/{inum}':
    get:
      tags:
        - Configuration – User Management
      summary: Get User by Inum
      description: Get User by Inum
      operationId: get-user-by-inum
      parameters:
        - name: inum
          in: path
          description: User identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans",
                        "userId": "testUser1",
                        "createdAt": "2022-10-27T22:45:48",
                        "customAttributes": [
                            {
                                "name": "birthdate",
                                "multiValued": false,
                                "values": [
                                    "20001231041508.553Z"
                                ],
                                "value": "20001231041508.553Z",
                                "displayValue": "20001231041508.553Z"
                            },
                            {
                                "name": "emailVerified",
                                "multiValued": false,
                                "values": [
                                    "TRUE"
                                ],
                                "value": "TRUE",
                                "displayValue": "TRUE"
                            },
                            {
                                "name": "jansAdminUIRole",
                                "multiValued": false,
                                "values": [
                                    "api-admin"
                                ],
                                "value": "api-admin",
                                "displayValue": "api-admin"
                            },
                            {
                                "name": "memberOf",
                                "multiValued": false,
                                "values": [
                                    "inum=60B7,ou=groups,o=jans"
                                ],
                                "value": "inum=60B7,ou=groups,o=jans",
                                "displayValue": "inum=60B7,ou=groups,o=jans"
                            },
                            {
                                "name": "middleName",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "nickname",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "sn",
                                "multiValued": false,
                                "values": [
                                    "User3"
                                ],
                                "value": "User3",
                                "displayValue": "User3"
                            }
                        ],
                        "customObjectClasses": [
                            "top",
                            "jansCustomPerson"
                        ],
                        "inum": "559a7e26-7a33-4e11-9d42-13266d33261e",
                        "mail": "test3@jans.server",
                        "displayName": "Default Test User 32",
                        "jansStatus": "active",
                        "givenName": "Test3",
                        "baseDn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans"
                    }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.readonly'
    delete:
      tags:
        - Configuration – User Management
      summary: Delete User
      description: Delete User
      operationId: delete-user
      parameters:
        - name: inum
          in: path
          description: User identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.delete'
    patch:
      tags:
        - Configuration – User Management
      summary: Patch user properties by Inum
      description: Patch user properties by Inum
      operationId: patch-user-by-inum
      parameters:
        - name: inum
          in: path
          description: User identifier
          required: true
          schema:
            type: string
        - name: removeNonLDAPAttributes
          in: query
          description: >-
            Boolean flag to indicate if attributes to be removed for non-LDAP
            DB. Default value is true, indicating non-LDAP attributes will be
            removed from request.
          schema:
            type: boolean
            default: true
      requestBody:
        description: UserPatchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchRequest'
            examples:
              Request json example:
                description: Request json example
                value: "{\n   \"jsonPatchString\": \"[ {\\\"op\\\":\\\"add\\\", \\\"path\\\": \\\"/userId\\\", \\\"value\\\":\\\"config_test_user_100_final_patch\\\" } ]\",\n   \"customAttributes\": [{\n            \"name\": \"emailVerified\",\n            \"multiValued\": false,\n            \"values\": [\n                \"TRUE\"\n            ],\n            \"value\": \"TRUE\",\n            \"displayValue\": \"TRUE\"\n        },\n\t\t{\n            \"name\": \"secretAnswer\",\n            \"multiValued\": false,\n            \"values\": [\n                \"james-bond@123\"\n            ],\n            \"value\": \"james-bond@123\",\n            \"displayValue\": \"james-bond@123\"\n        },\n        {\n            \"name\": \"jansImsValue\",\n            \"multiValued\": true,\n            \"values\": [{\n\t\t\t  \"value\": \"123456\",\n\t\t\t  \"display\": \"Home phone\",\n\t\t\t  \"type\": \"home\",\n\t\t\t  \"primary\": true\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t  \"value\": \"9821789\",\n\t\t\t  \"display\": \"Work phone\",\n\t\t\t  \"type\": \"work\",\n\t\t\t  \"primary\": false\t\t\t\n\t\t\t}\n                \n            ]\n        }\n        ]\n}\n"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans",
                        "userId": "testUser1",
                        "createdAt": "2022-10-27T22:45:48",
                        "customAttributes": [
                            {
                                "name": "birthdate",
                                "multiValued": false,
                                "values": [
                                    "20001231041508.553Z"
                                ],
                                "value": "20001231041508.553Z",
                                "displayValue": "20001231041508.553Z"
                            },
                            {
                                "name": "emailVerified",
                                "multiValued": false,
                                "values": [
                                    "TRUE"
                                ],
                                "value": "TRUE",
                                "displayValue": "TRUE"
                            },
                            {
                                "name": "jansAdminUIRole",
                                "multiValued": false,
                                "values": [
                                    "api-admin"
                                ],
                                "value": "api-admin",
                                "displayValue": "api-admin"
                            },
                            {
                                "name": "memberOf",
                                "multiValued": false,
                                "values": [
                                    "inum=60B7,ou=groups,o=jans"
                                ],
                                "value": "inum=60B7,ou=groups,o=jans",
                                "displayValue": "inum=60B7,ou=groups,o=jans"
                            },
                            {
                                "name": "middleName",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "nickname",
                                "multiValued": false,
                                "values": [
                                    "Test USer 3"
                                ],
                                "value": "Test USer 3",
                                "displayValue": "Test USer 3"
                            },
                            {
                                "name": "sn",
                                "multiValued": false,
                                "values": [
                                    "User3"
                                ],
                                "value": "User3",
                                "displayValue": "User3"
                            }
                        ],
                        "customObjectClasses": [
                            "top",
                            "jansCustomPerson"
                        ],
                        "inum": "559a7e26-7a33-4e11-9d42-13266d33261e",
                        "mail": "test3@jans.server",
                        "displayName": "Default Test User 32",
                        "jansStatus": "active",
                        "givenName": "Test3",
                        "baseDn": "inum=559a7e26-7a33-4e11-9d42-13266d33261e,ou=people,o=jans"
                    }
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/user.write'
  /admin-ui/adminUIPermissions:
    get:
      tags:
        - Admin UI - Permission
      summary: Get all admin ui permissions
      description: Get all admin ui permissions
      operationId: get-all-adminui-permissions
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly
    put:
      tags:
        - Admin UI - Permission
      summary: Edit admin ui permissions
      description: Edit admin ui permissions
      operationId: edit-adminui-permission
      requestBody:
        description: AdminPermission object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermission'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write
    post:
      tags:
        - Admin UI - Permission
      summary: Add admin ui permissions
      description: Add admin ui permissions
      operationId: add-adminui-permission
      requestBody:
        description: AdminPermission object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPermission'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write
  /admin-ui/adminUIRolePermissionsMapping:
    get:
      tags:
        - Admin UI - Role-Permissions Mapping
      summary: Get all admin ui role-permissions mapping
      description: Get all admin ui role-permissions mapping
      operationId: get-all-adminui-role-permissions
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly
    put:
      tags:
        - Admin UI - Role-Permissions Mapping
      summary: Map permissions to role
      description: Map permissions to role
      operationId: map-permissions-to-role
      requestBody:
        description: RolePermissionMapping object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionMapping'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write
    post:
      tags:
        - Admin UI - Role-Permissions Mapping
      summary: Add role-permissions mapping
      description: Add role-permissions mapping
      operationId: add-role-permissions-mapping
      requestBody:
        description: RolePermissionMapping object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePermissionMapping'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write
  /admin-ui/adminUIRoles:
    get:
      tags:
        - Admin UI - Role
      summary: Get all admin ui roles
      description: Get all admin ui roles
      operationId: get-all-adminui-roles
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly
    put:
      tags:
        - Admin UI - Role
      summary: Edit admin ui role
      description: Edit admin ui role
      operationId: edit-adminui-role
      requestBody:
        description: AdminRole object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write
    post:
      tags:
        - Admin UI - Role
      summary: Add admin ui role
      description: Add admin ui role
      operationId: add-adminui-role
      requestBody:
        description: AdminRole object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRole'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write
  '/admin-ui/adminUIPermissions/{adminUIPermission}':
    get:
      tags:
        - Admin UI - Permission
      summary: Get admin ui permission by permission-name
      description: Get admin ui permission by permission-name
      operationId: get-adminui-permission
      parameters:
        - name: adminUIPermission
          in: path
          description: Admin UI Permission
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly
    delete:
      tags:
        - Admin UI - Permission
      summary: Delete admin ui permission by permission-name
      description: Delete admin ui permission by permission-name
      operationId: delete-adminui-permission
      parameters:
        - name: adminUIPermission
          in: path
          description: Admin UI Permission
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminPermission'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete
  '/admin-ui/adminUIRoles/{adminUIRole}':
    get:
      tags:
        - Admin UI - Role
      summary: Get admin ui role details by role-name
      description: Get admin ui role details by role-name
      operationId: get-adminui-role
      parameters:
        - name: adminUIRole
          in: path
          description: Admin UI role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly
    delete:
      tags:
        - Admin UI - Role
      summary: Delete admin ui role by role-name
      description: Delete admin ui role by role-name
      operationId: delete-adminui-role
      parameters:
        - name: adminUIRole
          in: path
          description: Admin UI role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminRole'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete
  /admin-ui/config:
    get:
      tags:
        - Admin UI - Configuration
      summary: Get Admin UI editable configuration
      description: Get Admin UI editable configuration
      operationId: get-adminui-conf
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppConfigResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly
    put:
      tags:
        - Admin UI - Configuration
      summary: Edit Admin UI editable configuration
      description: Edit Admin UI editable configuration
      operationId: edit-adminui-conf
      requestBody:
        description: Admin Config object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigResponse'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppConfigResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/properties.write
  '/admin-ui/adminUIRolePermissionsMapping/{adminUIRole}':
    get:
      tags:
        - Admin UI - Role-Permissions Mapping
      summary: Get admin ui role-permissions mapping by role-name
      description: Get admin ui role-permissions mapping by role-name
      operationId: get-adminui-role-permissions
      parameters:
        - name: adminUIRole
          in: path
          description: Admin UI Role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly
    delete:
      tags:
        - Admin UI - Role-Permissions Mapping
      summary: Remove role-permissions mapping by role-name
      description: Remove role-permissions mapping by role-name
      operationId: remove-role-permissions-permission
      parameters:
        - name: adminUIRole
          in: path
          description: role
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolePermissionMapping'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete
  /admin-ui/license/activate:
    post:
      tags:
        - Admin UI - License
      summary: Activate license using license-key
      description: Activate license using license-key
      operationId: activate-adminui-license
      requestBody:
        description: LicenseRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.write
  /admin-ui/license/details:
    get:
      tags:
        - Admin UI - License
      summary: Get admin ui license details
      description: Get admin ui license details
      operationId: get-adminui-license
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly
  /admin-ui/license/isActive:
    get:
      tags:
        - Admin UI - License
      summary: Check if admin-ui license is active
      description: Check if admin-ui license is active
      operationId: is-license-active
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly
  /admin-ui/license/isConfigValid:
    get:
      tags:
        - Admin UI - License
      summary: Is license configuration valid
      description: Is license configuration valid
      operationId: check-adminui-license-config
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly
  /admin-ui/license/retrieve:
    get:
      tags:
        - Admin UI - License
      summary: Retrieve license from SCAN
      description: Retrieve license from SCAN
      operationId: retrieve-license
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly
  /admin-ui/license/ssa:
    post:
      tags:
        - Admin UI - License
      summary: Save SSA in configuration
      description: Save SSA in configuration
      operationId: adminui-post-ssa
      requestBody:
        description: SSARequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSARequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.write
  /admin-ui/license/trial:
    get:
      tags:
        - Admin UI - License
      summary: Generate trial license
      description: Generate trial license
      operationId: get-trial-license
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly
  /admin-ui/webhook:
    get:
      tags:
        - Admin UI - Webhooks
      summary: Gets list of webhooks
      description: Gets list of webhooks
      operationId: get-all-webhooks
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'scopeType=spontaneous,defaultScope=true'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                      "start": 0,
                      "totalEntriesCount": 2,
                      "entriesCount": 2,
                      "entries": [{
                        "dn": "inum=aad9e1dd-87f3-357f-a2fa-93ae8eb94998,ou=auiWebhooks,ou=admin-ui,o=jans",
                        "inum": "aad9e1dd-87f3-357f-a2fa-93ae8eb94998",
                        "displayName": "test-5",
                        "description": "test1",
                        "url": "https://jsonplaceholder.typicode.com/posts",
                        "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsutem sunt rem eveniet architecto\"}",
                        "httpMethod": "POST",
                        "jansEnabled": true,
                        "httpHeaders": [{
                          "key": "Content-Type",
                          "value": "application/json"
                        }],
                        "baseDn": "inum=aad9e1dd-87f3-357f-a2fa-93ae8eb94998,ou=auiWebhooks,ou=admin-ui,o=jans"
                      }, {
                        "dn": "inum=d23d60e8-0187-3878-94d9-30d594c4c986,ou=auiWebhooks,ou=admin-ui,o=jans",
                        "inum": "d23d60e8-0187-3878-94d9-30d594c4c986",
                        "displayName": "test-6",
                        "description": "test1",
                        "url": "https://jsonplaceholder.typicode.com/posts",
                        "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsutem sunt rem eveniet architecto\"}",
                        "httpMethod": "POST",
                        "jansEnabled": true,
                        "httpHeaders": [{
                          "key": "Content-Type",
                          "value": "application/json"
                        }],
                        "baseDn": "inum=d23d60e8-0187-3878-94d9-30d594c4c986,ou=auiWebhooks,ou=admin-ui,o=jans"
                      }]
                    }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly
    put:
      tags:
        - Admin UI - Webhooks
      summary: Update Webhook
      description: Update Webhook
      operationId: put-webhook
      requestBody:
        description: Webhook object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEntry'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                    "dn": "inum=2d3fe60f-db3f-3ab8-a285-e71e935ff282,ou=auiWebhooks,ou=admin-ui,o=jans",
                    "inum": "2d3fe60f-db3f-3ab8-a285-e71e935ff282",
                    "displayName": "posts-webhook-1",
                    "description": "posts-webhook description",
                    "url": "https://jsonplaceholder.typicode.com/posts",
                    "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsuscipit recusandae consequuntur expedita et cumreprehenderit molestiae ut ut quas otamnostrum rerum est autem sunt rem eveniet architecto\"}",
                    "httpMethod": "POST",
                    "jansEnabled": true,
                    "httpHeaders": [{
                      "key": "Content-Type",
                      "value": "application/json"
                    }],
                    "auiFeatureIds": ["jans_link_write"],
                    "baseDn": "inum=2d3fe60f-db3f-3ab8-a285-e71e935ff282,ou=auiWebhooks,ou=admin-ui,o=jans"
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEntry'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                      "dn": "inum=2d3fe60f-db3f-3ab8-a285-e71e935ff282,ou=auiWebhooks,ou=admin-ui,o=jans",
                      "inum": "2d3fe60f-db3f-3ab8-a285-e71e935ff282",
                      "displayName": "posts-webhook-1",
                      "description": "posts-webhook description",
                      "url": "https://jsonplaceholder.typicode.com/posts",
                      "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsuscipit recusandae consequuntur expedita et cumreprehenderit molestiae ut ut quas otamnostrum rerum est autem sunt rem eveniet architecto\"}",
                      "httpMethod": "POST",
                      "jansEnabled": true,
                      "httpHeaders": [{
                        "key": "Content-Type",
                        "value": "application/json"
                      }],
                      "auiFeatureIds": ["jans_link_write"],
                      "baseDn": "inum=2d3fe60f-db3f-3ab8-a285-e71e935ff282,ou=auiWebhooks,ou=admin-ui,o=jans"
                    }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.write
    post:
      tags:
        - Admin UI - Webhooks
      summary: Create Webhook
      description: Create Webhook
      operationId: post-webhook
      requestBody:
        description: Webhook object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEntry'
            examples:
              Request json example:
                description: Request json example
                value: |
                  {
                    "displayName": "posts-webhook-1",
                    "description": "posts-webhook description",
                    "url": "https://reqres.in/api/users",
                    "httpRequestBody": {
                      "name": "morpheus",
                      "job": "leader"
                    },
                    "httpMethod": "POST",
                    "jansEnabled": true,
                    "httpHeaders":[{"key":"Content-Type", "value":"application/json"}],
                    "auiFeatureIds":["jans_link_write"]
                  }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                      "dn": "inum=f704922d-e97f-3097-a06a-4a90ddedb87a,ou=auiWebhooks,ou=admin-ui,o=jans",
                      "inum": "f704922d-e97f-3097-a06a-4a90ddedb87a",
                      "displayName": "posts-webhook-1",
                      "description": "posts-webhook description",
                      "url": "https://reqres.in/api/users",
                      "httpRequestBody": {
                        "name": "morpheus",
                        "job": "leader"
                      },
                      "httpMethod": "POST",
                      "jansEnabled": true,
                      "httpHeaders": [{
                        "key": "Content-Type",
                        "value": "application/json"
                      }],
                      "auiFeatureIds": ["jans_link_write"],
                      "baseDn": "inum=f704922d-e97f-3097-a06a-4a90ddedb87a,ou=auiWebhooks,ou=admin-ui,o=jans"
                    }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.write
  '/admin-ui/webhook/{webhookId}':
    delete:
      tags:
        - Admin UI - Webhooks
      summary: Delete Webhook
      description: Delete Webhook
      operationId: delete-Webhook-by-inum
      parameters:
        - name: webhookId
          in: path
          description: Webhook identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.delete
  /admin-ui/webhook/features:
    get:
      tags:
        - Admin UI - Webhooks
      summary: Gets list of Admin UI features
      description: Gets list of Admin UI features
      operationId: get-all-features
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuiFeature'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [{
                      "dn": "auiFeatureId=attributes_delete,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "attributes_delete",
                      "displayName": "Schema:Person - Delete",
                      "jansScope": "https://jans.io/oauth/config/attributes.delete"
                    }, {
                      "dn": "auiFeatureId=attributes_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "attributes_write",
                      "displayName": "Schema:Person - Add/Edit",
                      "jansScope": "https://jans.io/oauth/config/attributes.write"
                    }, {
                      "dn": "auiFeatureId=custom_script_delete,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "custom_script_delete",
                      "displayName": "Custom Script - Delete",
                      "jansScope": "https://jans.io/oauth/config/scripts.delete"
                    }, {
                      "dn": "auiFeatureId=custom_script_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "custom_script_write",
                      "displayName": "Custom Script - Add/Edit",
                      "jansScope": "https://jans.io/oauth/config/scripts.write"
                    }, {
                      "dn": "auiFeatureId=fido_configuration_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "fido_configuration_write",
                      "displayName": "FIDO Configuration - Edit",
                      "jansScope": "https://jans.io/oauth/jans-auth-server/config/properties.write"
                    }, {
                      "dn": "auiFeatureId=jans_link_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "jans_link_write",
                      "displayName": "Jans Link - Edit",
                      "jansScope": "https://jans.io/oauth/config/jans-link.write",
                      "webhookIdsMapped": ["dd6e0e18-231e-3a47-8cbf-d7dc07018158", "5ea5829b-322f-33ec-acc7-17a89165d4fb", "57ebb7bc-ebb6-3f0c-8633-63a4f453cc11", "7d5295d2-0b88-3fa1-8ea1-f4ec93dea2fb"]
                    }, {
                      "dn": "auiFeatureId=oidc_clients_delete,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "oidc_clients_delete",
                      "displayName": "OIDC Clients - Delete",
                      "jansScope": "https://jans.io/oauth/config/openid/clients.delete"
                    }, {
                      "dn": "auiFeatureId=oidc_clients_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "oidc_clients_write",
                      "displayName": "OIDC Clients - Add/Edit",
                      "jansScope": "https://jans.io/oauth/config/openid/clients.write"
                    }, {
                      "dn": "auiFeatureId=scim_configuration_edit,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "scim_configuration_edit",
                      "displayName": "SCIM Configuration - Edit",
                      "jansScope": "https://jans.io/scim/config.write"
                    }, {
                      "dn": "auiFeatureId=scopes_delete,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "scopes_delete",
                      "displayName": "Scopes - Delete",
                      "jansScope": "https://jans.io/oauth/config/scopes.delete"
                    }, {
                      "dn": "auiFeatureId=scopes_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "scopes_write",
                      "displayName": "Scopes - Add/Edit",
                      "jansScope": "https://jans.io/oauth/config/scopes.write"
                    }, {
                      "dn": "auiFeatureId=smtp_configuration_edit,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "smtp_configuration_edit",
                      "displayName": "SMTP Configuration - Edit",
                      "jansScope": "https://jans.io/oauth/config/smtp.write"
                    }, {
                      "dn": "auiFeatureId=users_delete,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "users_delete",
                      "displayName": "Users - Delete",
                      "jansScope": "https://jans.io/oauth/config/user.delete"
                    }, {
                      "dn": "auiFeatureId=users_edit,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "users_edit",
                      "displayName": "Users - Add/Edit",
                      "jansScope": "https://jans.io/oauth/config/user.write"
                    }]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly
  '/admin-ui/webhook/features/{webhookId}':
    get:
      tags:
        - Admin UI - Webhooks
      summary: Gets list of Admin UI features mapped to webhookId
      description: Gets list of Admin UI features mapped to webhookId
      operationId: get-features-by-webhook-id
      parameters:
        - name: webhookId
          in: path
          description: Webhook identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuiFeature'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [{
                      "dn": "auiFeatureId=jans_link_write,ou=auiFeatures,ou=admin-ui,o=jans",
                      "auiFeatureId": "jans_link_write",
                      "displayName": "Jans Link - Edit",
                      "jansScope": "https://jans.io/oauth/config/jans-link.write",
                      "webhookIdsMapped": ["dd6e0e18-231e-3a47-8cbf-d7dc07018158", "5ea5829b-322f-33ec-acc7-17a89165d4fb", "57ebb7bc-ebb6-3f0c-8633-63a4f453cc11", "7d5295d2-0b88-3fa1-8ea1-f4ec93dea2fb"]
                    }]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly
  '/admin-ui/webhook/{featureId}':
    get:
      tags:
        - Admin UI - Webhooks
      summary: Gets list of Admin UI Webhooks mapped to featureId
      description: Gets list of Admin UI Webhooks mapped to featureId
      operationId: get-webhooks-by-feature-id
      parameters:
        - name: featureId
          in: path
          description: Feature identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEntry'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [{
                      "dn": "inum=aad9e1dd-87f3-357f-a2fa-93ae8eb94998,ou=auiWebhooks,ou=admin-ui,o=jans",
                      "inum": "aad9e1dd-87f3-357f-a2fa-93ae8eb94998",
                      "displayName": "test-5",
                      "description": "test1",
                      "url": "https://jsonplaceholder.typicode.com/posts",
                      "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsutem sunt rem eveniet architecto\"}",
                      "httpMethod": "POST",
                      "jansEnabled": true,
                      "httpHeaders": [{
                        "key": "Content-Type",
                        "value": "application/json"
                      }],
                      "baseDn": "inum=aad9e1dd-87f3-357f-a2fa-93ae8eb94998,ou=auiWebhooks,ou=admin-ui,o=jans"
                    }, {
                      "dn": "inum=d23d60e8-0187-3878-94d9-30d594c4c986,ou=auiWebhooks,ou=admin-ui,o=jans",
                      "inum": "d23d60e8-0187-3878-94d9-30d594c4c986",
                      "displayName": "test-6",
                      "description": "test1",
                      "url": "https://jsonplaceholder.typicode.com/posts",
                      "httpRequestBody": "{\"userId\": 11,\"id\": 11,\"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\"body\": \"quia et suscipitsutem sunt rem eveniet architecto\"}",
                      "httpMethod": "POST",
                      "jansEnabled": true,
                      "httpHeaders": [{
                        "key": "Content-Type",
                        "value": "application/json"
                      }],
                      "baseDn": "inum=d23d60e8-0187-3878-94d9-30d594c4c986,ou=auiWebhooks,ou=admin-ui,o=jans"
                    }]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly
  '/admin-ui/webhook/trigger/{featureId}':
    post:
      tags:
        - Admin UI - Webhooks
      summary: Trigger webhooks mapped to featureId
      description: Trigger webhooks mapped to featureId
      operationId: trigger-webhook
      parameters:
        - name: featureId
          in: path
          description: Admin UI feature identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Webhook object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortCodeRequest'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [{
                    "webhookId": "0a8e784b-2394-3a34-89d3-4a09d245aa32",
                    "shortcodeValueMap": {"price": 100}
                  }]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuiFeature'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    [{
                      "success": true,
                      "responseMessage": "{\"id\":101,\"title\":\"iPhone 9\",\"price\":\"100\",\"description\":\"An apple mobile which is nothing like apple\"}",
                      "responseCode": 200,
                      "responseObject": {
                        "webhookId": "0a8e784b-2394-3a34-89d3-4a09d245aa32",
                        "webhookName": "Webhook1",
                        "webhookMethod": "POST",
                        "webhookRequestBody": "{dummy={a=b}, price=100, description=An apple mobile which is nothing like apple, id=1, title=iPhone 9}"
                      }
                    }, {
                      "success": true,
                      "responseMessage": "{\"users\":[{\"id\":1,\"firstName\":\"Terry\",\"lastName\":\"Medhurst\",\"maidenName\":\"Smitham\",\"age\":50,\"gender\":\"male\",\"email\":\"atuny0@sohu.com\",\"phone\":\"+63 791 675 8914\",\"username\":\"atuny0\",\"password\":\"9uQFF1Lh\",\"birthDate\":\"2000-12-25\",\"image\":\"https://robohash.org/Terry.png?set=set4\",\"bloodGroup\":\"A-\",\"height\":189,\"weight\":75.4,\"eyeColor\":\"Green\",\"hair\":{\"color\":\"Black\",\"type\":\"Strands\"},\"domain\":\"slashdot.org\",\"ip\":\"117.29.86.254\",\"address\":{\"address\":\"1745 T Street Southeast\",\"city\":\"Washington\",\"coordinates\":{\"lat\":38.867033,\"lng\":-76.979235},\"postalCode\":\"20020\",\"state\":\"DC\"},\"macAddress\":\"13:69:BA:56:A3:74\",\"university\":\"Capitol University\",\"bank\":{\"cardExpire\":\"06/22\",\"cardNumber\":\"50380955204220685\",\"cardType\":\"maestro\",\"currency\":\"Peso\",\"iban\":\"NO17 0695 2754 967\"},\"company\":{\"address\":{\"address\":\"629 Debbie Drive\",\"city\":\"Nashville\",\"coordinates\":{\"lat\":36.208114,\"lng\":-86.58621199999999},\"postalCode\":\"37076\",\"state\":\"TN\"},\"department\":\"Marketing\",\"name\":\"Blanda-O'Keefe\",\"title\":\"Help Desk Operator\"},\"ein\":\"20-9487066\",\"ssn\":\"661-64-2976\",\"userAgent\":\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/12.0.702.0 Safari/534.24\",\"crypto\":{\"coin\":\"Bitcoin\",\"wallet\":\"0xb9fc2fe63b2a6c003f1c324c3bfa53259162181a\",\"network\":\"Ethereum (ERC20)\"}},{\"id\":2,\"firstName\":\"Sheldon\",\"lastName\":\"Quigley\",\"maidenName\":\"Cole\",\"age\":28,\"gender\":\"male\",\"email\":\"hbingley1@plala.or.jp\",\"phone\":\"+7 813 117 7139\",\"username\":\"hbingley1\",\"password\":\"CQutx25i8r\",\"birthDate\":\"2003-08-02\",\"image\":\"https://robohash.org/Sheldon.png?set=set4\",\"bloodGroup\":\"O+\",\"height\":187,\"weight\":74,\"eyeColor\":\"Brown\",\"hair\":{\"color\":\"Blond\",\"type\":\"Curly\"},\"domain\":\"51.la\",\"ip\":\"253.240.20.181\",\"address\":{\"address\":\"6007 Applegate Lane\",\"city\":\"Louisville\",\"coordinates\":{\"lat\":38.1343013,\"lng\":-85.6498512},\"postalCode\":\"40219\",\"state\":\"KY\"}",
                      "responseCode": 200,
                      "responseObject": {
                        "webhookId": "bf21de5b-adb9-3581-82f5-76bb335f1cbd",
                        "webhookName": "Dummyuser-test",
                        "webhookMethod": "GET"
                      }
                    }]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
      security:
        - oauth2:
            - >-
              https://jans.io/oauth/jans-auth-server/config/adminui/webhook.readonly
  /jans-link/link-config:
    get:
      tags:
        - Jans Link - Configuration
      summary: Gets Jans Link App configuration.
      description: Gets Jans Link App configuration.
      operationId: get-jans-link-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration2'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans-link.readonly'
    put:
      tags:
        - Jans Link - Configuration
      summary: Updates Jans Link configuration properties.
      description: Updates Jans Link configuration properties.
      operationId: put-jans-link-properties
      requestBody:
        description: JansLinkConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfiguration2'
      responses:
        '200':
          description: JansLinkConfiguration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration2'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/jans-link.write'
  /scim/scim-config:
    get:
      tags:
        - SCIM - Config Management
      summary: Retrieves SCIM App configuration
      description: Retrieves SCIM App configuration
      operationId: get-scim-config
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration3'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/scim/config.readonly'
    patch:
      tags:
        - SCIM - Config Management
      summary: Patch SCIM App configuration
      description: Patch SCIM App configuration
      operationId: patch-scim-config
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            example: '[ {op:replace, path: loggingLevel, value: DEBUG } ]'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration3'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/scim/config.write'
  /kc/saml/idp/upload:
    put:
      tags:
        - SAML - Identity Broker
      summary: Update SAML Identity Provider
      description: Update SAML Identity Provider
      operationId: put-saml-identity-provider
      requestBody:
        description: String representing patch-document.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrokerIdentityProviderForm'
            examples:
              Response json example:
                description: Response json example
                value: |
                  {
                      "dn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans",
                      "inum": "63350037-8ef7-471d-8447-c691063d8c19",
                      "creatorId": "jans-admin-2",
                      "name": "SAML_IDP_104",
                      "displayName": "Updated Test SAML IDP 104",
                      "description": "SAML IDP 104 created using Rest API Updated",
                      "realm": "keycloak-internal-identity",
                      "enabled": true,
                      "providerId": "saml",
                      "trustEmail": true,
                      "storeToken": false,
                      "addReadTokenRoleOnCreate": false,
                      "authenticateByDefault": false,
                      "linkOnly": false,
                      "idpMetaDataFN": "63350037-8ef7-471d-8447-c691063d8c19-idp-metadata.xml",
                      "config": {
                          "validateSignature": "false",
                          "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                          "postBindingLogout": "true",
                          "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                          "postBindingResponse": "true",
                          "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                          "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                          "loginHint": "false",
                          "enabledFromMetadata": "true",
                          "postBindingAuthnRequest": "true",
                          "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                          "wantAuthnRequestsSigned": "false",
                          "addExtensionsElementWithKeyInfo": "false",
                          "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                      },
                      "baseDn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans"
                  }
      responses:
        '200':
          description: Updated Trust IDP
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans",
                        "inum": "63350037-8ef7-471d-8447-c691063d8c19",
                        "creatorId": "jans-admin-2",
                        "name": "SAML_IDP_104",
                        "displayName": "Test SAML IDP 104",
                        "description": "SAML IDP 104 created using Rest API",
                        "realm": "keycloak-internal-identity",
                        "enabled": true,
                        "providerId": "saml",
                        "trustEmail": false,
                        "storeToken": false,
                        "addReadTokenRoleOnCreate": false,
                        "authenticateByDefault": false,
                        "linkOnly": false,
                        "idpMetaDataFN": "63350037-8ef7-471d-8447-c691063d8c19-idp-metadata.xml",
                        "config": {
                            "validateSignature": "false",
                            "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                            "postBindingLogout": "true",
                            "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                            "postBindingResponse": "true",
                            "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                            "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                            "loginHint": "false",
                            "enabledFromMetadata": "true",
                            "postBindingAuthnRequest": "true",
                            "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                            "wantAuthnRequestsSigned": "false",
                            "addExtensionsElementWithKeyInfo": "false",
                            "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                        },
                        "baseDn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans"
                    }
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.write'
    post:
      tags:
        - SAML - Identity Broker
      summary: Create SAML Identity Provider
      description: Create SAML Identity Provider
      operationId: post-saml-identity-provider
      requestBody:
        description: String representing patch-document.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrokerIdentityProviderForm'
            examples:
              Response json example:
                description: Response json example
                value: "{\n\t\"creatorId\": \"jans-admin-2\",\n\t\"name\": \"SAML_IDP_104\",\n\t\"displayName\": \"Test SAML IDP 104\",\t\"description\": \"SAML IDP 104 created using Rest API\",\n\t\"realm\": \"keycloak-internal-identity\",\n\t\"enabled\": true,\n\t\"providerId\": \"SAML_IDP_104\",\n\t\"trustEmail\": false,\n\t\"storeToken\": false,\n\t\"addReadTokenRoleOnCreate\": false,\n\t\"authenticateByDefault\": false,\n\t\"linkOnly\": false,\n\t\"firstBrokerLoginFlowAlias\": null,\n\t\"postBrokerLoginFlowAlias\": null\n\t\n}\n"
      responses:
        '201':
          description: Newly created Trust IDP
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans",
                        "inum": "63350037-8ef7-471d-8447-c691063d8c19",
                        "creatorId": "jans-admin-2",
                        "name": "SAML_IDP_104",
                        "displayName": "Test SAML IDP 104",
                        "description": "SAML IDP 104 created using Rest API",
                        "realm": "keycloak-internal-identity",
                        "enabled": true,
                        "providerId": "saml",
                        "trustEmail": false,
                        "storeToken": false,
                        "addReadTokenRoleOnCreate": false,
                        "authenticateByDefault": false,
                        "linkOnly": false,
                        "idpMetaDataFN": "63350037-8ef7-471d-8447-c691063d8c19-idp-metadata.xml",
                        "config": {
                            "validateSignature": "false",
                            "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                            "postBindingLogout": "true",
                            "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                            "postBindingResponse": "true",
                            "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                            "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                            "loginHint": "false",
                            "enabledFromMetadata": "true",
                            "postBindingAuthnRequest": "true",
                            "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                            "wantAuthnRequestsSigned": "false",
                            "addExtensionsElementWithKeyInfo": "false",
                            "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                        },
                        "baseDn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans"
                    }
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.write'
  '/kc/saml/idp/{inum}':
    get:
      tags:
        - SAML - Identity Broker
      summary: Get SAML Identity Provider by Inum
      description: Get SAML Identity Provider by Inum
      operationId: get-saml-identity-provider-by-inum
      parameters:
        - name: inum
          in: path
          description: Unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "dn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans",
                        "inum": "63350037-8ef7-471d-8447-c691063d8c19",
                        "creatorId": "jans-admin-2",
                        "name": "SAML_IDP_104",
                        "displayName": "Test SAML IDP 104",
                        "description": "SAML IDP 104 created using Rest API",
                        "realm": "keycloak-internal-identity",
                        "enabled": true,
                        "providerId": "saml",
                        "trustEmail": false,
                        "storeToken": false,
                        "addReadTokenRoleOnCreate": false,
                        "authenticateByDefault": false,
                        "linkOnly": false,
                        "idpMetaDataFN": "63350037-8ef7-471d-8447-c691063d8c19-idp-metadata.xml",
                        "config": {
                            "validateSignature": "false",
                            "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                            "postBindingLogout": "true",
                            "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                            "postBindingResponse": "true",
                            "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                            "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                            "loginHint": "false",
                            "enabledFromMetadata": "true",
                            "postBindingAuthnRequest": "true",
                            "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                            "wantAuthnRequestsSigned": "false",
                            "addExtensionsElementWithKeyInfo": "false",
                            "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                        },
                        "baseDn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans"
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.readonly'
    delete:
      tags:
        - SAML - Identity Broker
      summary: Delete SAML Identity Provider
      description: Delete SAML Identity Provider
      operationId: delete-saml-identity-provider
      parameters:
        - name: inum
          in: path
          description: Unique identifier
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.delete'
  /kc/saml/idp:
    get:
      tags:
        - SAML - Identity Broker
      summary: Retrieves SAML Identity Provider
      description: Retrieves SAML Identity Provider
      operationId: get-saml-identity-provider
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: pattern
          in: query
          description: Search pattern
          schema:
            type: string
            default: ''
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: Attribute whose value will be used to order the returned response
          schema:
            type: string
            default: inum
        - name: sortOrder
          in: query
          description: >-
            Order in which the sortBy param is applied. Allowed values are
            "ascending" and "descending"
          schema:
            type: string
            default: ascending
        - name: fieldValuePair
          in: query
          description: Field and value pair for seraching
          schema:
            type: string
            default: ''
          examples:
            Field value example:
              description: Field value example
              value: 'displayName=saml-idp,realm=jans'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderPagedResult'
              examples:
                Response json example:
                  description: Response json example
                  value: |
                    {
                        "start": 0,
                        "totalEntriesCount": 3,
                        "entriesCount": 3,
                        "entries": [
                            {
                                "dn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans",
                                "inum": "63350037-8ef7-471d-8447-c691063d8c19",
                                "creatorId": "jans-admin-2",
                                "name": "SAML_IDP_104",
                                "displayName": "Test SAML IDP 104",
                                "description": "SAML IDP 104 created using Rest API",
                                "realm": "keycloak-internal-identity",
                                "enabled": true,
                                "providerId": "saml",
                                "trustEmail": false,
                                "storeToken": false,
                                "addReadTokenRoleOnCreate": false,
                                "authenticateByDefault": false,
                                "linkOnly": false,
                                "idpMetaDataFN": "63350037-8ef7-471d-8447-c691063d8c19-idp-metadata.xml",
                                "config": {
                                    "validateSignature": "false",
                                    "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                                    "postBindingLogout": "true",
                                    "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                                    "postBindingResponse": "true",
                                    "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                                    "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                                    "loginHint": "false",
                                    "enabledFromMetadata": "true",
                                    "postBindingAuthnRequest": "true",
                                    "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                                    "wantAuthnRequestsSigned": "false",
                                    "addExtensionsElementWithKeyInfo": "false",
                                    "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                                },
                                "baseDn": "inum=63350037-8ef7-471d-8447-c691063d8c19,ou=trusted-idp,o=jans"
                            },
                            {
                                "dn": "inum=8254fc20-5322-41e0-b398-7c8b2f86f5e5,ou=trusted-idp,o=jans",
                                "inum": "8254fc20-5322-41e0-b398-7c8b2f86f5e5",
                                "creatorId": "jans-admin-2",
                                "name": "SAML_IDP_102",
                                "displayName": "Test SAML IDP 101",
                                "description": "SAML IDP 101 created using Rest API",
                                "realm": "keycloak-internal-identity",
                                "enabled": true,
                                "providerId": "saml",
                                "trustEmail": false,
                                "storeToken": false,
                                "addReadTokenRoleOnCreate": false,
                                "authenticateByDefault": false,
                                "linkOnly": false,
                                "config": {
                                    "validateSignature": "false",
                                    "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                                    "postBindingLogout": "true",
                                    "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                                    "postBindingResponse": "true",
                                    "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                                    "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                                    "loginHint": "false",
                                    "enabledFromMetadata": "true",
                                    "postBindingAuthnRequest": "true",
                                    "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                                    "wantAuthnRequestsSigned": "false",
                                    "addExtensionsElementWithKeyInfo": "false",
                                    "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                                },
                                "baseDn": "inum=8254fc20-5322-41e0-b398-7c8b2f86f5e5,ou=trusted-idp,o=jans"
                            },
                            {
                                "dn": "inum=ff28d5af-80a5-4ce2-8157-bd1a37ea4a3c,ou=trusted-idp,o=jans",
                                "inum": "ff28d5af-80a5-4ce2-8157-bd1a37ea4a3c",
                                "creatorId": "jans-admin-2",
                                "name": "SAML_IDP_104",
                                "displayName": "Test SAML IDP 104",
                                "description": "SAML IDP 104 created using Rest API",
                                "realm": "keycloak-internal-identity",
                                "enabled": true,
                                "providerId": "saml",
                                "trustEmail": false,
                                "storeToken": false,
                                "addReadTokenRoleOnCreate": false,
                                "authenticateByDefault": false,
                                "linkOnly": false,
                                "idpMetaDataFN": "ff28d5af-80a5-4ce2-8157-bd1a37ea4a3c-idp-metadata.xml",
                                "config": {
                                    "validateSignature": "false",
                                    "signingCertificate": "MIIDpzCCAo8CFEJ8QVFd7aejj6RdC9XqybNbp2eBMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQzWhcNMjQxMDExMTU0NTQzWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAoXB81Zlr2ZB1jnplGZ+w3ivhXqLLh+CQWv6DwmtL I2UVHiRZUeSUgWt50JCE4lALt3I1cTqi/uDqtB+nn9/HfxOa73KsJ6/7bY8nWsT+ j1na25H3XnPS4l6c9/WNQAw7VtAHnUvriyzSxD6Ph4Cyodu76yAVxVetgtBEwA/5 /mMVUVoJuVbQ/OvhhM+/Q/gfLgKQxto2Hw3S+wBkBOQXVBLa4Rie6+xXk5VnpAu+ HlqKwxtxdrVWVzImq5YUk/hc7itTi1kfowvXNhrZE0XdzDtiI8Fmxvv2Z2CHCA4E clSuLFmSs82z/6URbzEuxxSk6j0YwjDi/GFkCpdNBbQYDwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQAxO1WswGI8jtTTqw2WgDv/bR5/a0ykZB2TQPKtD1vaIaL9m/jI 5i0Fag3wsJYKiS/eKEXyNtEBDod3164BBan6EBh/AWdIzVHVbCaLocZuLGXINejn 2oB9BrSfYp4rG7SQgMxdh7j+a8VAGBYSUfGqqAwrl4h1QgyNs6qI6eooKTIDMpMZ shSFeKuyeC1plnwqer3BPRCPq0PliILmb9nLhhrLbm5VWrhQbYLZ2Mn8BLiZzEnE TODhtM6cR57DW3BLEvjVxlDAUigvYJihmAbfvgyCSNM2NsylJmQUB7PSO4BTknqG FfQeqvuEiE02g70E+s4HrQH2RSij9w+zl1eQ",
                                    "postBindingLogout": "true",
                                    "singleLogoutServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SLO",
                                    "postBindingResponse": "true",
                                    "nameIDPolicyFormat": "urn:mace:shibboleth:1.0:nameIdentifier",
                                    "idpEntityId": "https://pujavs-crack-flounder.gluu.info/idp/shibboleth",
                                    "loginHint": "false",
                                    "enabledFromMetadata": "true",
                                    "postBindingAuthnRequest": "true",
                                    "singleSignOnServiceUrl": "https://pujavs-crack-flounder.gluu.info/idp/profile/SAML2/POST/SSO",
                                    "wantAuthnRequestsSigned": "false",
                                    "addExtensionsElementWithKeyInfo": "false",
                                    "encryptionPublicKey": "MIIDpzCCAo8CFCp0GLTRVjJH2zR9GaTtrRct9bwUMA0GCSqGSIb3DQEBCwUAMIGP MQswCQYDVQQGEwJJTjELMAkGA1UECAwCTUgxDzANBgNVBAcMBm11bWJhaTEaMBgG A1UECgwRR2x1dSBJRFAgU2VydmVyIDIxKDAmBgNVBAMMH3B1amF2cy1jcmFjay1m bG91bmRlci5nbHV1LmluZm8xHDAaBgkqhkiG9w0BCQEWDXB1amFAZ2x1dS5vcmcw HhcNMjMxMDEyMTU0NTQyWhcNMjQxMDExMTU0NTQyWjCBjzELMAkGA1UEBhMCSU4x CzAJBgNVBAgMAk1IMQ8wDQYDVQQHDAZtdW1iYWkxGjAYBgNVBAoMEUdsdXUgSURQ IFNlcnZlciAyMSgwJgYDVQQDDB9wdWphdnMtY3JhY2stZmxvdW5kZXIuZ2x1dS5p bmZvMRwwGgYJKoZIhvcNAQkBFg1wdWphQGdsdXUub3JnMIIBIjANBgkqhkiG9w0B AQEFAAOCAQ8AMIIBCgKCAQEAsCBv4UBQPkXvnwc9IaZHMpn79Dqh6wyGesTPslsQ EbRp3L4aX5xxu/0BKeH4MJhna9rg4ikEP9KPZ7bjXuALXjqqwADnDKYp+EbI/hC5 K2X4wcFb2BGfSlUb4OdzeozSF6MJWC7nfB0o6FTgMlpHRM4A/UymxF8koqy19ESj c1GK+rD7steLhIVQ8tzO80rgkGWlixKf1FoTZw5Rhcpl0h0b15AUVGcFWSx1On1F VLZEeYrLI5vMt2QMHVhO+OfB7cioS2IGYIWeO2IW8ePTwAw/bD/ZzQP6rPYyKYAh newGXcdIjewafrXvwKiX3hUF26SJSupX6xY+W68gahi7YwIDAQABMA0GCSqGSIb3 DQEBCwUAA4IBAQB5PnQeGcMsnGkEOtETvdIKm67C2a2+OWoHyVhZtlYvHSlbFIx6 FAt3/ufX8vJ5N0+D4ReQw5tT3VdDhWhvhrshG50HKR1bF1NIW152v/0B1BxjyhQo p0M6Z2uaCOP7zUd3ZLEIsNH3tqbFV1d+DVLfZDBCUAIOTTySkHWnBjVXlQ2ss63O +SBYBA0U61nxBggzt7UiXBJLyB5+CFafTD4tcGkHjIKLk1CrDPj/4d8d+9EETm0g bVa4bIL1Qb1mUcxQ75xdeuSSp+0u/nk/QBpasFH4uQQWQ0KNviSREl3ShqerybPM EoU3+f42DbxGNwTmEPULvuQAK1k0sxcHuB5I"
                                },
                                "baseDn": "inum=ff28d5af-80a5-4ce2-8157-bd1a37ea4a3c,ou=trusted-idp,o=jans"
                            }
                        ]
                    }
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.readonly'
  '/kc/saml/idp/sp-metadata/{inum}':
    get:
      tags:
        - SAML - Identity Broker
      summary: Get SAML SP Metadata as Json
      description: Get SAML SP Metadata as Json
      operationId: get-saml-sp-metadata-json
      parameters:
        - name: inum
          in: path
          description: Unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonNode'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.readonly'
  '/kc/saml/idp/sp-metadata-file/{inum}':
    get:
      tags:
        - SAML - Identity Broker
      summary: Get SAML SP Metadata Endpoint URL
      description: Get SAML SP Metadata Endpoint URL
      operationId: get-saml-sp-metadata-url
      parameters:
        - name: inum
          in: path
          description: Unique identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/idp/saml.readonly'
  /kc/samlConfig:
    get:
      tags:
        - SAML - Configuration
      summary: Gets SAML configuration properties
      description: Gets SAML configuration properties
      operationId: get-saml-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml-config.readonly'
    put:
      tags:
        - SAML - Configuration
      summary: Update SAML configuration properties
      description: Update SAML configuration properties
      operationId: put-saml-properties
      requestBody:
        description: GluuAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlAppConfiguration'
            examples:
              Request example:
                description: Request example
                value: |
                  {
                    "applicationName":"saml",
                    "samlTrustRelationshipDn":"ou=trustRelationships,o=jans",
                    "samlEnabled": "true",
                    "selectedIdp": "keycloak",
                    "idpRootDir": "/opt/idp/configs/",
                    "idpMetadataFilePattern":"%s-idp-metadata.xml",
                    "spMetadataFilePattern":"%s-sp-metadata.xml",
                    "idpConfigs":[
                      {
                        "configId":"keycloak",
                        "rootDir":"/opt/idp/configs/keycloak",
                        "enabled": "true",
                        "metadataTempDir": "/opt/idp/configs/keycloak/temp_metadata",
                        "metadataDir":"/opt/idp/configs/keycloak/metadata",
                        "metadataFilePattern":"%s-idp-metadata.xml"
                      }
                    ]
                  }
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml-config.write'
    patch:
      tags:
        - SAML - Configuration
      summary: Partially modifies SAML configuration properties.
      description: Partially modifies SAML Configuration properties.
      operationId: patch-saml-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: |
                  [{
                      "op": "replace",
                      "path": "/samlEnabled",
                      "value": false
                  },
                  {
                     "op": "add",
                      "path": "/idpConfigs/1",
                      "value":  {
                              "configId": "shibboleth",
                              "rootDir": "/opt/idp/configs/shibboleth",
                              "enabled": false,
                              "metadataTempDir": "/opt/idp/configs/shibboleth/temp_metadata",
                              "metadataDir": "/opt/idp/configs/shibboleth/metadata",
                              "metadataFilePattern": "%s-idp-metadata.xml"
                          }
                  }
                  ]
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlAppConfiguration'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml-config.write'
  /kc/saml/trust-relationship/upload:
    put:
      tags:
        - SAML - Trust Relationship
      summary: Update TrustRelationship
      description: Update TrustRelationship
      operationId: put-trust-relationship
      requestBody:
        description: Trust Relationship object
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrustRelationshipForm'
            examples:
              Request example:
                description: Request example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.write'
    post:
      tags:
        - SAML - Trust Relationship
      summary: Create Trust Relationship with Metadata File
      description: Create Trust Relationship with Metadata File
      operationId: post-trust-relationship-metadata-file
      requestBody:
        description: Trust Relationship object
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrustRelationshipForm'
            examples:
              Request example:
                description: Request example
                value: ''
      responses:
        '201':
          description: Newly created Trust Relationship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.write'
  '/kc/saml/trust-relationship/{id}':
    delete:
      tags:
        - SAML - Trust Relationship
      summary: Delete TrustRelationship
      description: Delete TrustRelationship
      operationId: delete-trust-relationship
      parameters:
        - name: id
          in: path
          description: Unique Id of Trust Relationship
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.write'
  /kc/saml/trust-relationship:
    get:
      tags:
        - SAML - Trust Relationship
      summary: Get all Trust Relationship
      description: Get all TrustRelationship.
      operationId: get-trust-relationships
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustRelationship'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.readonly'
  '/kc/saml/trust-relationship/id/{id}':
    get:
      tags:
        - SAML - Trust Relationship
      summary: Get TrustRelationship by Id
      description: Get TrustRelationship by Id
      operationId: get-trust-relationship-by-id
      parameters:
        - name: id
          in: path
          description: Unique identifier - Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
        '401':
          description: Unauthorized
        '404':
          description: Trust relationship not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.readonly'
  '/kc/saml/trust-relationship/sp-metadata-file/{id}':
    get:
      tags:
        - SAML - Trust Relationship
      summary: Get TrustRelationship file metadata
      description: Get TrustRelationship file metadata
      operationId: get-trust-relationship-file-metadata
      parameters:
        - name: id
          in: path
          description: TrustRelationship inum
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/xml:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: Internal Server Error
      security:
        - oauth2:
            - 'https://jans.io/oauth/config/saml.readonly'
  /kc-link/kcLinkConfig:
    get:
      tags:
        - KC Link - Configuration
      summary: Gets KC Link configuration properties
      description: Gets KC Link configuration properties
      operationId: get-kc-link-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration4'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/kc-link-config.readonly'
    put:
      tags:
        - KC Link - Configuration
      summary: Update KC Link configuration properties
      description: Update KC Link configuration properties
      operationId: put-kc-link-properties
      requestBody:
        description: GluuAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfiguration4'
            examples:
              Request example:
                description: Request example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration4'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/kc-link-config.write'
    patch:
      tags:
        - KC Link - Configuration
      summary: Partially modifies KC Link configuration properties.
      description: Partially modifies KC Link configuration properties.
      operationId: patch-kc-link-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration4'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/kc-link-config.write'
  /lock/audit/health/search:
    get:
      tags:
        - Lock - Audit
      summary: Rerquest health records for specific event range
      description: Rerquest health records for specific event range
      operationId: request-lock-health-records-event-range
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: eventStartDate
          in: query
          description: Event start date in ISO8601 format
          required: true
          schema:
            type: string
        - name: eventEndDate
          in: query
          description: Event end date in ISO8601 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthEntry'
        '400':
          description: Wrong date range specified
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/health.readonly'
  /lock/audit/log/search:
    get:
      tags:
        - Lock - Log
      summary: Rerquest log records for specific event range
      description: Rerquest log records for specific event range
      operationId: request-lock-log-records-event-range
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: eventStartDate
          in: query
          description: Event start date in ISO8601 format
          required: true
          schema:
            type: string
        - name: eventEndDate
          in: query
          description: Event end date in ISO8601 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogEntry'
        '400':
          description: Wrong date range specified
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/log.readonly'
  /lock/audit/telemetry/search:
    get:
      tags:
        - Lock - Audit
      summary: Request telemetry records for specific event range
      description: Rerquest telemetry records for specific event range
      operationId: request-lock-telemetry-records-event-range
      parameters:
        - name: limit
          in: query
          description: Search size - max size of the results to return
          schema:
            type: integer
            format: int32
            default: 50
        - name: eventStartDate
          in: query
          description: Event start date in ISO8601 format
          required: true
          schema:
            type: string
        - name: eventEndDate
          in: query
          description: Event end date in ISO8601 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TelemetryEntry'
        '400':
          description: Wrong date range specified
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/telemetry.readonly'
  /lock/audit/health/bulk:
    post:
      tags:
        - Lock - Audit
      summary: Bulk save health data
      description: Bulk save health data
      operationId: bulk-save-health-data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HealthEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/health.write'
  /lock/audit/log/bulk:
    post:
      tags:
        - Lock - Audit
      summary: Bulk save log data
      description: Bulk save log data
      operationId: bulk-save-log-data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LogEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/log.write'
  /lock/audit/telemetry/bulk:
    post:
      tags:
        - Lock - Audit
      summary: Bulk save telemetry data
      description: Bulk save telemetry data
      operationId: bulk-save-telemetry-data
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TelemetryEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/telemetry.write'
  /lock/audit/health:
    post:
      tags:
        - Lock - Audit
      summary: Save health data
      description: Save health data
      operationId: save-health-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/health.write'
  /lock/audit/log:
    post:
      tags:
        - Lock - Audit
      summary: Save log data
      description: Save log data
      operationId: save-log-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/log.write'
  /lock/audit/telemetry:
    post:
      tags:
        - Lock - Audit
      summary: Save telemetry data
      description: Save telemetry data
      operationId: save-telemetry-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelemetryEntry'
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock/telemetry.write'
  /lock/lockConfig:
    get:
      tags:
        - Lock - Configuration
      summary: Gets Lock configuration properties
      description: Gets Lock configuration properties
      operationId: get-lock-properties
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration5'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock-config.readonly'
    put:
      tags:
        - Lock - Configuration
      summary: Update Lock configuration properties
      description: Update Lock configuration properties
      operationId: put-lock-properties
      requestBody:
        description: GluuAttribute object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfiguration5'
            examples:
              Request example:
                description: Request example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration5'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock-config.write'
    patch:
      tags:
        - Lock - Configuration
      summary: Partially modifies Lock configuration properties.
      description: Partially modifies Lock configuration properties.
      operationId: patch-lock-properties
      requestBody:
        description: String representing patch-document.
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/JsonPatch'
            examples:
              Request json example:
                description: Request json example
                value: ''
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration5'
        '401':
          description: Unauthorized
        '500':
          description: InternalServerError
      security:
        - oauth2:
            - 'https://jans.io/oauth/lock-config.write'
components:
  schemas:
    JsonNode:
      type: object
    HealthStatus:
      type: object
      properties:
        status:
          type: string
        checks:
          type: array
          items:
            $ref: '#/components/schemas/Status'
    Status:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        error:
          type: string
    FacterData:
      type: object
      properties:
        memoryfree:
          type: string
        swapfree:
          type: string
        hostname:
          type: string
        ipaddress:
          type: string
        uptime:
          type: string
        free_disk_space:
          type: string
        load_average:
          type: string
    StatsData:
      type: object
      properties:
        dbType:
          type: string
        lastUpdate:
          type: string
          format: date-time
        facterData:
          $ref: '#/components/schemas/FacterData'
    AuthenticationMethod:
      type: object
      properties:
        defaultAcr:
          type: string
    ApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
    Deployment:
      type: object
      properties:
        dn:
          type: string
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        taskActive:
          type: boolean
        finishedAt:
          type: string
          format: date-time
        assets:
          type: string
        details:
          $ref: '#/components/schemas/DeploymentDetails'
        baseDn:
          type: string
    DeploymentDetails:
      type: object
      properties:
        folders:
          type: array
          items:
            type: string
        libs:
          type: array
          items:
            type: string
        error:
          type: string
        autoconfigure:
          type: boolean
        flowsError:
          type: object
          additionalProperties:
            type: string
        projectMetadata:
          $ref: '#/components/schemas/ProjectMetadata'
    ProjectMetadata:
      type: object
      properties:
        projectName:
          type: string
        author:
          type: string
        type:
          type: string
        description:
          type: string
        version:
          type: string
        configs:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
        noDirectLaunch:
          type: array
          items:
            type: string
    PagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            type: object
    Document:
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        fileName:
          type: string
        filePath:
          type: string
        description:
          type: string
        document:
          type: string
        creationDate:
          type: string
          format: date-time
        service:
          type: string
        level:
          type: integer
          format: int32
        revision:
          type: integer
          format: int32
        enabled:
          type: boolean
        alias:
          type: string
        baseDn:
          type: string
    DocumentPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    AssetDirMapping:
      type: object
      properties:
        directory:
          type: string
          description: Relative path to asset base directory.
        type:
          type: array
          description: List of file extention that are stored in directory.
          items:
            type: string
            description: List of file extention that are stored in directory.
        description:
          type: string
          description: Description of assets stored in directory.
        jansServiceModule:
          type: array
          description: List of supported service module where asset can be uploaded.
          items:
            type: string
            description: List of supported service module where asset can be uploaded.
      description: Asset type mapped to server directory.
    AssetForm:
      required:
        - assetFile
        - document
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        assetFile:
          type: string
          format: binary
    AttributeValidation:
      type: object
      properties:
        minLength:
          type: integer
          format: int32
        maxLength:
          type: integer
          format: int32
        regexp:
          type: string
    JansAttribute:
      required:
        - dataType
        - description
        - displayName
        - editType
        - name
        - viewType
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        sourceAttribute:
          type: string
        nameIdType:
          type: string
        name:
          maxLength: 30
          minLength: 1
          pattern: '^[a-zA-Z0-9_]+$'
          type: string
        displayName:
          maxLength: 60
          minLength: 0
          type: string
        description:
          maxLength: 4000
          minLength: 0
          type: string
        origin:
          type: string
        dataType:
          type: string
          enum:
            - string
            - numeric
            - boolean
            - binary
            - certificate
            - generalizedTime
            - json
        editType:
          type: array
          items:
            type: string
            enum:
              - admin
              - owner
              - manager
              - user
              - whitePages
        viewType:
          type: array
          items:
            type: string
            enum:
              - admin
              - owner
              - manager
              - user
              - whitePages
        usageType:
          type: array
          items:
            type: string
            enum:
              - openid
        claimName:
          type: string
        seeAlso:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - expired
            - register
        saml1Uri:
          type: string
        saml2Uri:
          type: string
        urn:
          type: string
        scimCustomAttr:
          type: boolean
        oxMultiValuedAttribute:
          type: boolean
        jansHideOnDiscovery:
          type: boolean
        custom:
          type: boolean
        attributeValidation:
          $ref: '#/components/schemas/AttributeValidation'
        tooltip:
          type: string
        whitePagesCanView:
          type: boolean
        userCanView:
          type: boolean
        adminCanEdit:
          type: boolean
        userCanEdit:
          type: boolean
        adminCanView:
          type: boolean
        userCanAccess:
          type: boolean
        adminCanAccess:
          type: boolean
        baseDn:
          type: string
    PatchRequest:
      type: object
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
    AppConfiguration:
      type: object
      properties:
        issuer:
          type: string
        baseEndpoint:
          type: string
        authorizationEndpoint:
          type: string
        authorizationChallengeEndpoint:
          type: string
        tokenEndpoint:
          type: string
        tokenRevocationEndpoint:
          type: string
        userInfoEndpoint:
          type: string
        clientInfoEndpoint:
          type: string
        checkSessionIFrame:
          type: string
        endSessionEndpoint:
          type: string
        jwksUri:
          type: string
        archivedJwksUri:
          type: string
        registrationEndpoint:
          type: string
        openIdDiscoveryEndpoint:
          type: string
        openIdConfigurationEndpoint:
          type: string
        idGenerationEndpoint:
          type: string
        introspectionEndpoint:
          type: string
        parEndpoint:
          type: string
        requirePar:
          type: boolean
        deviceAuthzEndpoint:
          type: string
        mtlsAuthorizationEndpoint:
          type: string
        mtlsAuthorizationChallengeEndpoint:
          type: string
        mtlsTokenEndpoint:
          type: string
        mtlsTokenRevocationEndpoint:
          type: string
        mtlsUserInfoEndpoint:
          type: string
        mtlsClientInfoEndpoint:
          type: string
        mtlsCheckSessionIFrame:
          type: string
        mtlsEndSessionEndpoint:
          type: string
        mtlsJwksUri:
          type: string
        mtlsRegistrationEndpoint:
          type: string
        mtlsIdGenerationEndpoint:
          type: string
        mtlsIntrospectionEndpoint:
          type: string
        mtlsParEndpoint:
          type: string
        mtlsDeviceAuthzEndpoint:
          type: string
        accessEvaluationAllowBasicClientAuthorization:
          type: boolean
        accessEvaluationScriptName:
          type: string
        requireRequestObjectEncryption:
          type: boolean
        requirePkce:
          type: boolean
        allowAllValueForRevokeEndpoint:
          type: boolean
        allowRevokeForOtherClients:
          type: boolean
        sectorIdentifierCacheLifetimeInMinutes:
          type: integer
          format: int32
        archivedJwkLifetimeInSeconds:
          type: integer
          format: int32
        umaConfigurationEndpoint:
          type: string
        umaRptAsJwt:
          type: boolean
        umaRptLifetime:
          type: integer
          format: int32
        umaTicketLifetime:
          type: integer
          format: int32
        umaPctLifetime:
          type: integer
          format: int32
        umaResourceLifetime:
          type: integer
          format: int32
        umaAddScopesAutomatically:
          type: boolean
        umaValidateClaimToken:
          type: boolean
        umaGrantAccessIfNoPolicies:
          type: boolean
        umaRestrictResourceToAssociatedClient:
          type: boolean
        statTimerIntervalInSeconds:
          type: integer
          format: int32
        statAuthorizationScope:
          type: string
        allowSpontaneousScopes:
          type: boolean
        spontaneousScopeLifetime:
          type: integer
          format: int32
        statusListBitSize:
          type: integer
          format: int32
        statusListResponseJwtSignatureAlgorithm:
          type: string
        statusListResponseJwtLifetime:
          type: integer
          format: int32
        statusListIndexAllocationBlockSize:
          type: integer
          format: int32
        openidSubAttribute:
          type: string
        publicSubjectIdentifierPerClientEnabled:
          type: boolean
        subjectIdentifiersPerClientSupported:
          type: array
          items:
            type: string
        applyXFrameOptionsHeaderIfUriContainsAny:
          type: array
          items:
            type: string
        xframeOptionsHeaderValue:
          type: string
          enum:
            - SAMEORIGIN
            - DENY
        responseTypesSupported:
          uniqueItems: true
          type: array
          items:
            uniqueItems: true
            type: array
            items:
              type: string
              enum:
                - code
                - token
                - id_token
        responseModesSupported:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - query
              - fragment
              - form_post
              - query.jwt
              - fragment.jwt
              - form_post.jwt
              - jwt
        grantTypesSupported:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - none
              - authorization_code
              - implicit
              - password
              - client_credentials
              - refresh_token
              - 'urn:ietf:params:oauth:grant-type:uma-ticket'
              - 'urn:ietf:params:oauth:grant-type:token-exchange'
              - 'urn:openid:params:grant-type:ciba'
              - 'urn:ietf:params:oauth:grant-type:device_code'
        subjectTypesSupported:
          type: array
          items:
            type: string
        defaultSubjectType:
          type: string
        authorizationSigningAlgValuesSupported:
          type: array
          items:
            type: string
        authorizationEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        authorizationEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        userInfoSigningAlgValuesSupported:
          type: array
          items:
            type: string
        userInfoEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        userInfoEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        introspectionSigningAlgValuesSupported:
          type: array
          items:
            type: string
        introspectionEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        introspectionEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        txTokenSigningAlgValuesSupported:
          type: array
          items:
            type: string
        txTokenEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        txTokenEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        idTokenSigningAlgValuesSupported:
          type: array
          items:
            type: string
        idTokenEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        idTokenEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        accessTokenSigningAlgValuesSupported:
          type: array
          items:
            type: string
        forceSignedRequestObject:
          type: boolean
        requestObjectSigningAlgValuesSupported:
          type: array
          items:
            type: string
        requestObjectEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
        requestObjectEncryptionEncValuesSupported:
          type: array
          items:
            type: string
        tokenEndpointAuthMethodsSupported:
          type: array
          items:
            type: string
        tokenEndpointAuthSigningAlgValuesSupported:
          type: array
          items:
            type: string
        dynamicRegistrationCustomAttributes:
          type: array
          items:
            type: string
        dynamicRegistrationDefaultCustomAttributes:
          $ref: '#/components/schemas/JsonNode'
        displayValuesSupported:
          type: array
          items:
            type: string
        claimTypesSupported:
          type: array
          items:
            type: string
        jwksAlgorithmsSupported:
          type: array
          items:
            type: string
        serviceDocumentation:
          type: string
        claimsLocalesSupported:
          type: array
          items:
            type: string
        idTokenTokenBindingCnfValuesSupported:
          type: array
          items:
            type: string
        uiLocalesSupported:
          type: array
          items:
            type: string
        claimsParameterSupported:
          type: boolean
        requestParameterSupported:
          type: boolean
        requestUriParameterSupported:
          type: boolean
        requestUriHashVerificationEnabled:
          type: boolean
        requireRequestUriRegistration:
          type: boolean
        requestUriBlockList:
          type: array
          items:
            type: string
        opPolicyUri:
          type: string
        opTosUri:
          type: string
        cleanUpInactiveClientAfterHoursOfInactivity:
          type: integer
          format: int32
        clientPeriodicUpdateTimerInterval:
          type: integer
          format: int32
        authorizationCodeLifetime:
          type: integer
          format: int32
        refreshTokenLifetime:
          type: integer
          format: int32
        txTokenLifetime:
          type: integer
          format: int32
        idTokenLifetime:
          type: integer
          format: int32
        idTokenFilterClaimsBasedOnAccessToken:
          type: boolean
        saveTokensInCache:
          type: boolean
        saveTokensInCacheAndDontSaveInPersistence:
          type: boolean
        accessTokenLifetime:
          type: integer
          format: int32
        cleanServiceInterval:
          type: integer
          format: int32
        cleanServiceBatchChunkSize:
          type: integer
          format: int32
        keyRegenerationEnabled:
          type: boolean
        keyRegenerationInterval:
          type: integer
          format: int32
        defaultSignatureAlgorithm:
          type: string
        jansOpenIdConnectVersion:
          type: string
        jansId:
          type: string
        dynamicRegistrationExpirationTime:
          type: integer
          format: int32
        dynamicRegistrationPersistClientAuthorizations:
          type: boolean
        trustedClientEnabled:
          type: boolean
        skipAuthorizationForOpenIdScopeAndPairwiseId:
          type: boolean
        dynamicRegistrationScopesParamEnabled:
          type: boolean
        dynamicRegistrationPasswordGrantTypeEnabled:
          type: boolean
        dynamicRegistrationAllowedPasswordGrantScopes:
          type: array
          items:
            type: string
        dynamicRegistrationCustomObjectClass:
          type: string
        personCustomObjectClassList:
          type: array
          items:
            type: string
        persistIdToken:
          type: boolean
        persistRefreshToken:
          type: boolean
        allowPostLogoutRedirectWithoutValidation:
          type: boolean
        invalidateSessionCookiesAfterAuthorizationFlow:
          type: boolean
        returnClientSecretOnRead:
          type: boolean
        rotateClientRegistrationAccessTokenOnUsage:
          type: boolean
        rejectJwtWithNoneAlg:
          type: boolean
        expirationNotificatorEnabled:
          type: boolean
        useNestedJwtDuringEncryption:
          type: boolean
        expirationNotificatorMapSizeLimit:
          type: integer
          format: int32
        expirationNotificatorIntervalInSeconds:
          type: integer
          format: int32
        redirectUrisRegexEnabled:
          type: boolean
        useHighestLevelScriptIfAcrScriptNotFound:
          type: boolean
        acrMappings:
          type: object
          additionalProperties:
            type: string
        authenticationFiltersEnabled:
          type: boolean
        clientAuthenticationFiltersEnabled:
          type: boolean
        clientRegDefaultToCodeFlowWithRefresh:
          type: boolean
        grantTypesAndResponseTypesAutofixEnabled:
          type: boolean
        authenticationFilters:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationFilter'
        clientAuthenticationFilters:
          type: array
          items:
            $ref: '#/components/schemas/ClientAuthenticationFilter'
        corsConfigurationFilters:
          type: array
          items:
            $ref: '#/components/schemas/CorsConfigurationFilter'
        sessionIdUnusedLifetime:
          type: integer
          format: int32
        sessionIdUnauthenticatedUnusedLifetime:
          type: integer
          format: int32
        sessionIdPersistOnPromptNone:
          type: boolean
        sessionIdRequestParameterEnabled:
          type: boolean
        changeSessionIdOnAuthentication:
          type: boolean
        sessionIdPersistInCache:
          type: boolean
        includeSidInResponse:
          type: boolean
        disablePromptLogin:
          type: boolean
        disablePromptConsent:
          type: boolean
        sessionIdCookieLifetime:
          type: integer
          format: int32
        sessionIdLifetime:
          type: integer
          format: int32
        activeSessionAuthorizationScope:
          type: string
        configurationUpdateInterval:
          type: integer
          format: int32
        logNotFoundEntityAsError:
          type: boolean
        enableClientGrantTypeUpdate:
          type: boolean
        grantTypesSupportedByDynamicRegistration:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - none
              - authorization_code
              - implicit
              - password
              - client_credentials
              - refresh_token
              - 'urn:ietf:params:oauth:grant-type:uma-ticket'
              - 'urn:ietf:params:oauth:grant-type:token-exchange'
              - 'urn:openid:params:grant-type:ciba'
              - 'urn:ietf:params:oauth:grant-type:device_code'
        cssLocation:
          type: string
        jsLocation:
          type: string
        imgLocation:
          type: string
        metricReporterInterval:
          type: integer
          format: int32
        metricReporterKeepDataDays:
          type: integer
          format: int32
        pairwiseIdType:
          type: string
        pairwiseCalculationKey:
          type: string
        pairwiseCalculationSalt:
          type: string
        shareSubjectIdBetweenClientsWithSameSectorId:
          type: boolean
        webKeysStorage:
          type: string
          enum:
            - keystore
            - pkcs11
        dnName:
          type: string
        keyStoreFile:
          type: string
        keyStoreSecret:
          type: string
        keySelectionStrategy:
          type: string
          enum:
            - OLDER
            - NEWER
            - FIRST
        keyAlgsAllowedForGeneration:
          type: array
          items:
            type: string
        keySignWithSameKeyButDiffAlg:
          type: boolean
        staticKid:
          type: string
        staticDecryptionKid:
          type: string
        introspectionAccessTokenMustHaveUmaProtectionScope:
          type: boolean
        introspectionAccessTokenMustHaveIntrospectionScope:
          type: boolean
        introspectionSkipAuthorization:
          type: boolean
        introspectionRestrictBasicAuthnToOwnTokens:
          type: boolean
        endSessionWithAccessToken:
          type: boolean
        disablePromptCreate:
          type: boolean
        cookieDomain:
          type: string
        enabledOAuthAuditLogging:
          type: boolean
        jmsBrokerURISet:
          uniqueItems: true
          type: array
          items:
            type: string
        jmsUserName:
          type: string
        jmsPassword:
          type: string
        externalUriWhiteList:
          type: array
          items:
            type: string
        clientWhiteList:
          type: array
          items:
            type: string
        clientBlackList:
          type: array
          items:
            type: string
        legacyIdTokenClaims:
          type: boolean
        customHeadersWithAuthorizationResponse:
          type: boolean
        frontChannelLogoutSessionSupported:
          type: boolean
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        updateUserLastLogonTime:
          type: boolean
        updateClientAccessTime:
          type: boolean
        logClientIdOnClientAuthentication:
          type: boolean
        logClientNameOnClientAuthentication:
          type: boolean
        disableJdkLogger:
          type: boolean
        authorizationRequestCustomAllowedParameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationRequestCustomParameter'
        openidScopeBackwardCompatibility:
          type: boolean
        disableU2fEndpoint:
          type: boolean
        authorizationChallengeSessionLifetimeInSeconds:
          type: integer
          format: int32
        rotateDeviceSecret:
          type: boolean
        returnDeviceSecretFromAuthzEndpoint:
          type: boolean
        dcrForbidExpirationTimeInRequest:
          type: boolean
        dcrSignatureValidationEnabled:
          type: boolean
        dcrSignatureValidationSharedSecret:
          type: string
        dcrSignatureValidationSoftwareStatementJwksURIClaim:
          type: string
        dcrSignatureValidationSoftwareStatementJwksClaim:
          type: string
        dcrSignatureValidationJwks:
          type: string
        dcrSignatureValidationJwksUri:
          type: string
        dcrAuthorizationWithClientCredentials:
          type: boolean
        dcrAuthorizationWithMTLS:
          type: boolean
        dcrAttestationEvidenceRequired:
          type: boolean
        trustedSsaIssuers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TrustedIssuerConfig'
        useLocalCache:
          type: boolean
        fapiCompatibility:
          type: boolean
        forceIdTokenHintPresence:
          type: boolean
        rejectEndSessionIfIdTokenExpired:
          type: boolean
        allowEndSessionWithUnmatchedSid:
          type: boolean
        forceOfflineAccessScopeToEnableRefreshToken:
          type: boolean
        errorReasonEnabled:
          type: boolean
        removeRefreshTokensForClientOnLogout:
          type: boolean
        skipRefreshTokenDuringRefreshing:
          type: boolean
        refreshTokenExtendLifetimeOnRotation:
          type: boolean
        allowBlankValuesInDiscoveryResponse:
          type: boolean
        checkUserPresenceOnRefreshToken:
          type: boolean
        consentGatheringScriptBackwardCompatibility:
          type: boolean
        introspectionScriptBackwardCompatibility:
          type: boolean
        introspectionResponseScopesBackwardCompatibility:
          type: boolean
        softwareStatementValidationType:
          type: string
        softwareStatementValidationClaimName:
          type: string
        authenticationProtectionConfiguration:
          $ref: '#/components/schemas/AuthenticationProtectionConfiguration'
        errorHandlingMethod:
          type: string
          enum:
            - internal
            - remote
        disableAuthnForMaxAgeZero:
          type: boolean
        keepAuthenticatorAttributesOnAcrChange:
          type: boolean
        deviceAuthzRequestExpiresIn:
          type: integer
          format: int32
        deviceAuthzTokenPollInterval:
          type: integer
          format: int32
        deviceAuthzResponseTypeToProcessAuthz:
          type: string
        deviceAuthzAcr:
          type: string
        backchannelClientId:
          type: string
        backchannelRedirectUri:
          type: string
        backchannelAuthenticationEndpoint:
          type: string
        backchannelDeviceRegistrationEndpoint:
          type: string
        backchannelTokenDeliveryModesSupported:
          type: array
          items:
            type: string
        backchannelAuthenticationRequestSigningAlgValuesSupported:
          type: array
          items:
            type: string
        backchannelUserCodeParameterSupported:
          type: boolean
        backchannelBindingMessagePattern:
          type: string
        backchannelAuthenticationResponseExpiresIn:
          type: integer
          format: int32
        backchannelAuthenticationResponseInterval:
          type: integer
          format: int32
        backchannelLoginHintClaims:
          type: array
          items:
            type: string
        cibaEndUserNotificationConfig:
          $ref: '#/components/schemas/CIBAEndUserNotificationConfig'
        backchannelRequestsProcessorJobIntervalSec:
          type: integer
          format: int32
        backchannelRequestsProcessorJobChunkSize:
          type: integer
          format: int32
        cibaGrantLifeExtraTimeSec:
          type: integer
          format: int32
        cibaMaxExpirationTimeAllowedSec:
          type: integer
          format: int32
        dpopSigningAlgValuesSupported:
          type: array
          items:
            type: string
        dpopTimeframe:
          type: integer
          format: int32
        dpopJtiCacheTime:
          type: integer
          format: int32
        dpopUseNonce:
          type: boolean
        dpopNonceCacheTime:
          type: integer
          format: int32
        dpopJktForceForAuthorizationCode:
          type: boolean
        allowIdTokenWithoutImplicitGrantType:
          type: boolean
        forceRopcInAuthorizationEndpoint:
          type: boolean
        discoveryCacheLifetimeInMinutes:
          type: integer
          format: int32
        discoveryAllowedKeys:
          type: array
          items:
            type: string
        discoveryDenyKeys:
          type: array
          items:
            type: string
        featureFlags:
          type: array
          items:
            type: string
            enum:
              - UNKNOWN
              - HEALTH_CHECK
              - USERINFO
              - CLIENTINFO
              - ID_GENERATION
              - REGISTRATION
              - INTROSPECTION
              - REVOKE_TOKEN
              - REVOKE_SESSION
              - GLOBAL_TOKEN_REVOCATION
              - STATUS_LIST
              - ACTIVE_SESSION
              - END_SESSION
              - STATUS_SESSION
              - JANS_CONFIGURATION
              - CIBA
              - UMA
              - U2F
              - DEVICE_AUTHZ
              - METRIC
              - STAT
              - PAR
              - ACCESS_EVALUATION
              - SSA
        httpLoggingEnabled:
          type: boolean
        httpLoggingExcludePaths:
          uniqueItems: true
          type: array
          items:
            type: string
        externalLoggerConfiguration:
          type: string
        agamaConfiguration:
          $ref: '#/components/schemas/EngineConfig'
        dcrSsaValidationConfigs:
          type: array
          items:
            $ref: '#/components/schemas/SsaValidationConfig'
        ssaConfiguration:
          $ref: '#/components/schemas/SsaConfiguration'
        blockWebviewAuthorizationEnabled:
          type: boolean
        authorizationChallengeDefaultAcr:
          type: string
        authorizationChallengeShouldGenerateSession:
          type: boolean
        dateFormatterPatterns:
          type: object
          additionalProperties:
            type: string
        httpLoggingResponseBodyContent:
          type: boolean
        skipAuthenticationFilterOptionsMethod:
          type: boolean
        lockMessageConfig:
          $ref: '#/components/schemas/LockMessageConfig'
        fapi:
          type: boolean
        allResponseTypesSupported:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
    AuthenticationFilter:
      required:
        - baseDn
        - filter
      type: object
      properties:
        filter:
          type: string
        bind:
          type: boolean
        bindPasswordAttribute:
          type: string
          xml:
            name: bind-password-attribute
        baseDn:
          type: string
          xml:
            name: base-dn
    AuthenticationProtectionConfiguration:
      type: object
      properties:
        attemptExpiration:
          type: integer
          format: int32
        maximumAllowedAttemptsWithoutDelay:
          type: integer
          format: int32
        delayTime:
          type: integer
          format: int32
        bruteForceProtectionEnabled:
          type: boolean
    AuthorizationRequestCustomParameter:
      type: object
      properties:
        paramName:
          type: string
        returnInResponse:
          type: boolean
    CIBAEndUserNotificationConfig:
      type: object
      properties:
        apiKey:
          type: string
        authDomain:
          type: string
        databaseURL:
          type: string
        projectId:
          type: string
        storageBucket:
          type: string
        messagingSenderId:
          type: string
        appId:
          type: string
        notificationUrl:
          type: string
        notificationKey:
          type: string
        publicVapidKey:
          type: string
    ClientAuthenticationFilter:
      required:
        - baseDn
        - filter
      type: object
      properties:
        filter:
          type: string
        bind:
          type: boolean
        bindPasswordAttribute:
          type: string
          xml:
            name: bind-password-attribute
        baseDn:
          type: string
          xml:
            name: base-dn
    CorsConfigurationFilter:
      type: object
      properties:
        filterName:
          type: string
        corsEnabled:
          type: boolean
        corsAllowedOrigins:
          type: string
        corsAllowedMethods:
          type: string
        corsAllowedHeaders:
          type: string
        corsExposedHeaders:
          type: string
        corsSupportCredentials:
          type: boolean
        corsLoggingEnabled:
          type: boolean
        corsPreflightMaxAge:
          type: integer
          format: int32
        corsRequestDecorate:
          type: boolean
      description: CORS configuration filter properties.
    EngineConfig:
      type: object
      properties:
        enabled:
          type: boolean
        rootDir:
          type: string
        templatesPath:
          type: string
        scriptsPath:
          type: string
        maxItemsLoggedInCollections:
          type: integer
          format: int32
        disableTCHV:
          type: boolean
        pageMismatchErrorPage:
          type: string
        interruptionErrorPage:
          type: string
        crashErrorPage:
          type: string
        finishedFlowPage:
          type: string
        bridgeScriptPage:
          type: string
        serializeRules:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        defaultResponseHeaders:
          type: object
          additionalProperties:
            type: string
    LockMessageConfig:
      type: object
      properties:
        enableTokenMessages:
          type: boolean
        tokenMessagesChannel:
          type: string
    SsaConfiguration:
      type: object
      properties:
        ssaEndpoint:
          type: string
        ssaCustomAttributes:
          type: array
          items:
            type: string
        ssaSigningAlg:
          type: string
        ssaExpirationInDays:
          type: integer
          format: int32
    SsaValidationConfig:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - NONE
            - SSA
            - DCR
        displayName:
          type: string
        description:
          type: string
        scopes:
          type: array
          items:
            type: string
        allowedClaims:
          type: array
          items:
            type: string
        jwks:
          type: string
        jwksUri:
          type: string
        issuers:
          type: array
          items:
            type: string
        configurationEndpoint:
          type: string
        configurationEndpointClaim:
          type: string
        sharedSecret:
          type: string
    TrustedIssuerConfig:
      type: object
      properties:
        automaticallyGrantedScopes:
          type: array
          items:
            type: string
    PersistenceConfiguration:
      type: object
      properties:
        persistenceType:
          type: string
    JsonPatch:
      type: object
    CacheConfiguration:
      type: object
      properties:
        cacheProviderType:
          type: string
          enum:
            - IN_MEMORY
            - MEMCACHED
            - REDIS
            - NATIVE_PERSISTENCE
        memcachedConfiguration:
          $ref: '#/components/schemas/MemcachedConfiguration'
        inMemoryConfiguration:
          $ref: '#/components/schemas/InMemoryConfiguration'
        redisConfiguration:
          $ref: '#/components/schemas/RedisConfiguration'
        nativePersistenceConfiguration:
          $ref: '#/components/schemas/NativePersistenceConfiguration'
    InMemoryConfiguration:
      type: object
      properties:
        defaultPutExpiration:
          type: integer
          format: int32
    MemcachedConfiguration:
      type: object
      properties:
        servers:
          type: string
        maxOperationQueueLength:
          type: integer
          format: int32
        bufferSize:
          type: integer
          format: int32
        defaultPutExpiration:
          type: integer
          format: int32
        connectionFactoryType:
          type: string
          enum:
            - DEFAULT
            - BINARY
    NativePersistenceConfiguration:
      type: object
      properties:
        defaultPutExpiration:
          type: integer
          format: int32
        defaultCleanupBatchSize:
          type: integer
          format: int32
        deleteExpiredOnGetRequest:
          type: boolean
        disableAttemptUpdateBeforeInsert:
          type: boolean
    RedisConfiguration:
      type: object
      properties:
        redisProviderType:
          type: string
          enum:
            - STANDALONE
            - CLUSTER
            - SHARDED
            - SENTINEL
        servers:
          type: string
        defaultPutExpiration:
          type: integer
          format: int32
        sentinelMasterGroupName:
          type: string
        password:
          type: string
        useSSL:
          type: boolean
        sslTrustStoreFilePath:
          type: string
        sslTrustStorePassword:
          type: string
        sslKeyStoreFilePath:
          type: string
        sslKeyStorePassword:
          type: string
        maxIdleConnections:
          type: integer
          format: int32
        maxTotalConnections:
          type: integer
          format: int32
        connectionTimeout:
          type: integer
          format: int32
        soTimeout:
          type: integer
          format: int32
        maxRetryAttempts:
          type: integer
          format: int32
    ClientAuth:
      type: object
      properties:
        clientAuths:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Scope'
    Scope:
      type: object
      properties:
        dn:
          type: string
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        inum:
          type: string
        displayName:
          type: string
        id:
          type: string
        iconUrl:
          type: string
        description:
          type: string
        scopeType:
          type: string
          enum:
            - openid
            - dynamic
            - uma
            - spontaneous
            - oauth
        claims:
          type: array
          items:
            type: string
        defaultScope:
          type: boolean
        groupClaims:
          type: boolean
        dynamicScopeScripts:
          type: array
          items:
            type: string
        umaAuthorizationPolicies:
          type: array
          items:
            type: string
        attributes:
          $ref: '#/components/schemas/ScopeAttributes'
        creatorId:
          type: string
        creatorType:
          type: string
          enum:
            - none
            - client
            - user
            - auto
        creationDate:
          type: string
          format: date-time
        creatorAttributes:
          type: object
          additionalProperties:
            type: string
        umaType:
          type: boolean
        baseDn:
          type: string
    ScopeAttributes:
      type: object
      properties:
        spontaneousClientScopes:
          type: array
          items:
            type: string
        showInConfigurationEndpoint:
          type: boolean
    Client:
      type: object
      properties:
        dn:
          type: string
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        clientSecret:
          type: string
        frontChannelLogoutUri:
          type: string
        frontChannelLogoutSessionRequired:
          type: boolean
        registrationAccessToken:
          type: string
        clientIdIssuedAt:
          type: string
          format: date-time
        clientSecretExpiresAt:
          type: string
          format: date-time
        redirectUris:
          type: array
          items:
            type: string
        claimRedirectUris:
          type: array
          items:
            type: string
        responseTypes:
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
        grantTypes:
          type: array
          items:
            type: string
            enum:
              - none
              - authorization_code
              - implicit
              - password
              - client_credentials
              - refresh_token
              - 'urn:ietf:params:oauth:grant-type:uma-ticket'
              - 'urn:ietf:params:oauth:grant-type:token-exchange'
              - 'urn:openid:params:grant-type:ciba'
              - 'urn:ietf:params:oauth:grant-type:device_code'
        applicationType:
          type: string
          enum:
            - native
            - web
        contacts:
          type: array
          items:
            type: string
        idTokenTokenBindingCnf:
          type: string
        clientName:
          type: string
        logoUri:
          type: string
        clientUri:
          type: string
        policyUri:
          type: string
        tosUri:
          type: string
        clientNameLocalized:
          $ref: '#/components/schemas/LocalizedString'
        logoUriLocalized:
          $ref: '#/components/schemas/LocalizedString'
        clientUriLocalized:
          $ref: '#/components/schemas/LocalizedString'
        policyUriLocalized:
          $ref: '#/components/schemas/LocalizedString'
        tosUriLocalized:
          $ref: '#/components/schemas/LocalizedString'
        jwksUri:
          type: string
        jwks:
          type: string
        sectorIdentifierUri:
          type: string
        subjectType:
          type: string
          enum:
            - pairwise
            - public
        idTokenSignedResponseAlg:
          type: string
        idTokenEncryptedResponseAlg:
          type: string
        idTokenEncryptedResponseEnc:
          type: string
        userInfoSignedResponseAlg:
          type: string
        userInfoEncryptedResponseAlg:
          type: string
        userInfoEncryptedResponseEnc:
          type: string
        requestObjectSigningAlg:
          type: string
        requestObjectEncryptionAlg:
          type: string
        requestObjectEncryptionEnc:
          type: string
        tokenEndpointAuthMethod:
          type: string
          format: enum
          enum:
            - client_secret_basic
            - client_secret_post
            - client_secret_jwt
            - private_key_jwt
            - access_token
            - tls_client_auth
            - self_signed_tls_client_auth
            - none
        tokenEndpointAuthSigningAlg:
          type: string
        defaultMaxAge:
          type: integer
          format: int32
        defaultAcrValues:
          type: array
          items:
            type: string
        initiateLoginUri:
          type: string
        postLogoutRedirectUris:
          type: array
          items:
            type: string
        requestUris:
          type: array
          items:
            type: string
        scopes:
          type: array
          items:
            type: string
        claims:
          type: array
          items:
            type: string
        trustedClient:
          type: boolean
        lastAccessTime:
          type: string
          format: date-time
        lastLogonTime:
          type: string
          format: date-time
        persistClientAuthorizations:
          type: boolean
        includeClaimsInIdToken:
          type: boolean
        refreshTokenLifetime:
          type: integer
          format: int32
        accessTokenLifetime:
          type: integer
          format: int32
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectAttribute'
        customObjectClasses:
          type: array
          items:
            type: string
        rptAsJwt:
          type: boolean
        accessTokenAsJwt:
          type: boolean
        accessTokenSigningAlg:
          type: string
        disabled:
          type: boolean
        authorizedOrigins:
          type: array
          items:
            type: string
        softwareId:
          type: string
        softwareVersion:
          type: string
        softwareStatement:
          type: string
        attributes:
          $ref: '#/components/schemas/ClientAttributes'
        backchannelTokenDeliveryMode:
          type: string
          enum:
            - poll
            - ping
            - push
        backchannelClientNotificationEndpoint:
          type: string
        backchannelAuthenticationRequestSigningAlg:
          type: string
          enum:
            - RS256
            - RS384
            - RS512
            - ES256
            - ES384
            - ES512
            - PS256
            - PS384
            - PS512
        backchannelUserCodeParameter:
          type: boolean
        description:
          type: string
        organization:
          type: string
        groups:
          type: array
          items:
            type: string
        ttl:
          type: integer
          format: int32
        displayName:
          type: string
        baseDn:
          type: string
        inum:
          type: string
    ClientAttributes:
      type: object
      properties:
        tlsClientAuthSubjectDn:
          type: string
        runIntrospectionScriptBeforeJwtCreation:
          type: boolean
        keepClientAuthorizationAfterExpiration:
          type: boolean
        allowSpontaneousScopes:
          type: boolean
        spontaneousScopes:
          type: array
          items:
            type: string
        spontaneousScopeScriptDns:
          type: array
          items:
            type: string
        updateTokenScriptDns:
          type: array
          items:
            type: string
        backchannelLogoutUri:
          type: array
          items:
            type: string
        backchannelLogoutSessionRequired:
          type: boolean
        additionalAudience:
          type: array
          items:
            type: string
        postAuthnScripts:
          type: array
          items:
            type: string
        consentGatheringScripts:
          type: array
          items:
            type: string
        introspectionScripts:
          type: array
          items:
            type: string
        rptClaimsScripts:
          type: array
          items:
            type: string
        ropcScripts:
          type: array
          items:
            type: string
        parLifetime:
          type: integer
          format: int32
        requirePar:
          type: boolean
        dpopBoundAccessToken:
          type: boolean
        jansAuthSignedRespAlg:
          type: string
        jansAuthEncRespAlg:
          type: string
        jansAuthEncRespEnc:
          type: string
        jansSubAttr:
          type: string
        redirectUrisRegex:
          type: string
        jansAuthorizedAcr:
          type: array
          items:
            type: string
        jansDefaultPromptLogin:
          type: boolean
        txTokenLifetime:
          type: integer
          format: int32
        idTokenLifetime:
          type: integer
          format: int32
        allowOfflineAccessWithoutConsent:
          type: boolean
        minimumAcrLevel:
          type: integer
          format: int32
        minimumAcrLevelAutoresolve:
          type: boolean
        additionalTokenEndpointAuthMethods:
          type: array
          items:
            type: string
        minimumAcrPriorityList:
          type: array
          items:
            type: string
        requestedLifetime:
          type: integer
          format: int32
        evidence:
          type: string
        introspectionSignedResponseAlg:
          type: string
        introspectionEncryptedResponseAlg:
          type: string
        introspectionEncryptedResponseEnc:
          type: string
        txTokenSignedResponseAlg:
          type: string
        txTokenEncryptedResponseAlg:
          type: string
        txTokenEncryptedResponseEnc:
          type: string
        authorizationDetailsTypes:
          type: array
          items:
            type: string
    CustomObjectAttribute:
      type: object
      properties:
        name:
          type: string
        multiValued:
          type: boolean
        values:
          type: array
          items:
            type: object
        displayValue:
          type: string
        value:
          type: object
    LocalizedString:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: string
    AgamaConfiguration:
      type: object
      properties:
        mandatoryAttributes:
          type: array
          description: List of attributes required to create the Agama Flow.
          items:
            type: string
            description: List of attributes required to create the Agama Flow.
        optionalAttributes:
          type: array
          description: List of attributes that are optional.
          items:
            type: string
            description: List of attributes that are optional.
      description: Agama configuration details.
    ApiAppConfiguration:
      type: object
      properties:
        serviceName:
          type: string
          description: Config API service name.
        configOauthEnabled:
          type: boolean
          description: OAuth authentication enable/disable flag. Default value `true`.
        disableLoggerTimer:
          type: boolean
          description: >-
            Flag to enable/disable timer to dynamically reflect log
            configuration changes. Default value `true`Default value `false`.
        disableAuditLogger:
          type: boolean
          description: Flag to enable/disable request audit. Default value `false`.
        customAttributeValidationEnabled:
          type: boolean
          description: >-
            Flag to enable/disable check if custom attribue is declared in
            schema. Default value `true`.
        acrValidationEnabled:
          type: boolean
          description: >-
            Flag to enable/disable check if acr customScript is enabled. Default
            value `true`.
        apiApprovedIssuer:
          type: array
          description: List of approved external Auth server to validate token.
          items:
            type: string
            description: List of approved external Auth server to validate token.
        apiProtectionType:
          type: string
          description: >-
            Name of supported API protection mechansim. Supported type is
            `OAuth2`.
        apiClientId:
          type: string
          description: Config-API client ID.
        apiClientPassword:
          type: string
          description: Config-API client password.
        endpointInjectionEnabled:
          type: boolean
        authIssuerUrl:
          type: string
          description: Issuer Identifier of Jans OpenID Connect Provider.
        authOpenidConfigurationUrl:
          type: string
          description: Jans OpenID Connect Provider Well-Known Configuration URL.
        authOpenidIntrospectionUrl:
          type: string
          description: >-
            Jans URL of the OpenID Connect Provider's OAuth 2.0 Authorization
            Endpoint.
        authOpenidTokenUrl:
          type: string
          description: Jans URL of the OpenID Connect Provider's OAuth 2.0 Token Endpoint.
        authOpenidRevokeUrl:
          type: string
          description: >-
            Jans URL of the OpenID Connect Provider's OAuth 2.0 Revoke Token
            Endpoint.
        exclusiveAuthScopes:
          type: array
          description: >-
            List of oAuth scope that can be validity for an access tokens only
            by underlying Jans Auth server.
          items:
            type: string
            description: >-
              List of oAuth scope that can be validity for an access tokens only
              by underlying Jans Auth server.
        corsConfigurationFilters:
          type: array
          description: CORS configuration filter properties.
          items:
            $ref: '#/components/schemas/CorsConfigurationFilter'
        loggingLevel:
          type: string
          description: Specify logging level of Loggers. Default level is `INFO`.
        loggingLayout:
          type: string
          description: Log4j logging layout. Default value `TEXT`.
        externalLoggerConfiguration:
          type: string
          description: The path to the external log4j2 logging configuration.
        disableJdkLogger:
          type: boolean
          description: Choose whether to disable JDK loggers.
        maxCount:
          type: integer
          description: Maximum number of results per page in search endpoints.
          format: int32
        acrExclusionList:
          type: array
          description: >-
            List of ACR values that should be excluded from active validation
            check.
          items:
            type: string
            description: >-
              List of ACR values that should be excluded from active validation
              check.
        userExclusionAttributes:
          type: array
          description: User attribute that should not be returned in response.
          items:
            type: string
            description: User attribute that should not be returned in response.
        userMandatoryAttributes:
          type: array
          description: List of User mandatory attribute for user creation request.
          items:
            type: string
            description: List of User mandatory attribute for user creation request.
        agamaConfiguration:
          $ref: '#/components/schemas/AgamaConfiguration'
        auditLogConf:
          $ref: '#/components/schemas/AuditLogConf'
        dataFormatConversionConf:
          $ref: '#/components/schemas/DataFormatConversionConf'
        plugins:
          type: array
          description: Details of enabled plugins.
          items:
            $ref: '#/components/schemas/PluginConf'
        assetMgtConfiguration:
          $ref: '#/components/schemas/AssetMgtConfiguration'
    AssetMgtConfiguration:
      type: object
      properties:
        assetMgtEnabled:
          type: boolean
          description: Flag indicating if asset management functionality is enabled.
        assetServerUploadEnabled:
          type: boolean
          description: Flag indicating if asset upload to server is enabled.
        fileExtensionValidationEnabled:
          type: boolean
          description: Flag indicating if file extension validation is enabled.
        moduleNameValidationEnabled:
          type: boolean
          description: >-
            Flag indicating if service module name extension validation is
            enabled.
        assetDirMapping:
          type: array
          description: Asset type mapped to server directory.
          items:
            $ref: '#/components/schemas/AssetDirMapping'
      description: Asset management configuration details.
    AuditLogConf:
      type: object
      properties:
        enabled:
          type: boolean
          description: Flag to enable and disable audit log.
        ignoreHttpMethod:
          type: array
          description: HTTP methods for which audit is disabled.
          items:
            type: string
            description: HTTP methods for which audit is disabled.
        headerAttributes:
          type: array
          description: List of header HTTP attributes whose value is to be logged.
          items:
            type: string
            description: List of header HTTP attributes whose value is to be logged.
      description: Audit Log configuration details.
    DataFormatConversionConf:
      type: object
      properties:
        enabled:
          type: boolean
          description: Flag to enable and disable data conversion.
        ignoreHttpMethod:
          type: array
          description: HTTP methods for which data conversion is to be disabled.
          items:
            type: string
            description: HTTP methods for which data conversion is to be disabled.
      description: Configuration for data-type converstion.
    PluginConf:
      type: object
      properties:
        name:
          type: string
          description: Name of the plugin.
        description:
          type: string
          description: Description of the plugin.
        className:
          type: string
          description: Plugin application class.
    SmtpConfiguration:
      type: object
      properties:
        valid:
          type: boolean
        host:
          type: string
        port:
          type: integer
          format: int32
        connect_protection:
          type: string
          enum:
            - None
            - StartTls
            - SslTls
        trust_host:
          type: boolean
        from_name:
          type: string
        from_email_address:
          type: string
        requires_authentication:
          type: boolean
        smtp_authentication_account_username:
          type: string
        smtp_authentication_account_password:
          type: string
        key_store:
          type: string
        key_store_password:
          type: string
        key_store_alias:
          type: string
        signing_algorithm:
          type: string
    SmtpTest:
      type: object
      properties:
        sign:
          type: boolean
        subject:
          type: string
        message:
          type: string
    CustomScript:
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        name:
          maxLength: 60
          minLength: 2
          pattern: '^[a-zA-Z0-9_\-\:\/\.]+$'
          type: string
        aliases:
          type: array
          items:
            type: string
        description:
          type: string
        script:
          type: string
        scriptType:
          type: string
          enum:
            - person_authentication
            - authorization_challenge
            - introspection
            - resource_owner_password_credentials
            - application_session
            - cache_refresh
            - client_registration
            - id_generator
            - uma_rpt_policy
            - uma_rpt_claims
            - uma_claims_gathering
            - access_evaluation
            - consent_gathering
            - dynamic_scope
            - spontaneous_scope
            - end_session
            - post_authn
            - client_authn
            - select_account
            - create_user
            - scim
            - ciba_end_user_notification
            - revoke_token
            - persistence_extension
            - idp
            - discovery
            - health_check
            - authz_detail
            - update_token
            - config_api_auth
            - modify_ssa_response
            - fido2_extension
            - lock_extension
        programmingLanguage:
          type: string
          enum:
            - python
            - java
        moduleProperties:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCustomProperty'
        configurationProperties:
          type: array
          items:
            $ref: '#/components/schemas/SimpleExtendedCustomProperty'
        level:
          type: integer
          format: int32
        revision:
          type: integer
          format: int64
        enabled:
          type: boolean
        scriptError:
          $ref: '#/components/schemas/ScriptError'
        modified:
          type: boolean
        internal:
          type: boolean
        locationType:
          type: string
          enum:
            - ldap
            - db
            - file
        locationPath:
          type: string
        baseDn:
          type: string
    ScriptError:
      type: object
      properties:
        raisedAt:
          type: string
          format: date-time
        stackTrace:
          type: string
    SimpleCustomProperty:
      type: object
      properties:
        value1:
          type: string
        value2:
          type: string
        description:
          type: string
    SimpleExtendedCustomProperty:
      type: object
      properties:
        value1:
          type: string
        value2:
          type: string
        hide:
          type: boolean
        description:
          type: string
    JSONWebKey:
      type: object
      properties:
        name:
          type: string
        descr:
          type: string
        kid:
          type: string
        kty:
          type: string
          enum:
            - EC
            - RSA
            - OKP
            - oct
        use:
          type: string
          enum:
            - sig
            - enc
        alg:
          type: string
          enum:
            - RS256
            - RS384
            - RS512
            - ES256
            - ES256K
            - ES384
            - ES512
            - PS256
            - PS384
            - PS512
            - EdDSA
            - RSA1_5
            - RSA-OAEP
            - RSA-OAEP-256
            - ECDH-ES
            - ECDH-ES+A128KW
            - ECDH-ES+A192KW
            - ECDH-ES+A256KW
            - A128KW
            - A192KW
            - A256KW
            - A128GCMKW
            - A192GCMKW
            - A256GCMKW
            - PBES2-HS256+A128KW
            - PBES2-HS384+A192KW
            - PBES2-HS512+A256KW
            - dir
        exp:
          type: integer
          format: int64
        crv:
          type: string
          enum:
            - P-256
            - P-256K
            - P-384
            - P-521
            - Ed25519
            - Ed448
        x5c:
          type: array
          items:
            type: string
        'n':
          type: string
        e:
          type: string
        x:
          type: string
        'y':
          type: string
        key_ops_type:
          type: array
          items:
            type: string
            enum:
              - 'KeyOps{value=''connect''} CONNECT'
              - 'KeyOps{value=''ssa''} SSA'
              - 'KeyOps{value=''all''} ALL'
    WebKeysConfiguration:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JSONWebKey'
    GluuLdapConfiguration:
      type: object
      properties:
        configId:
          type: string
        bindDN:
          type: string
        bindPassword:
          type: string
        servers:
          type: array
          items:
            type: string
        maxConnections:
          type: integer
          format: int32
        useSSL:
          type: boolean
        baseDNs:
          type: array
          items:
            type: string
        primaryKey:
          type: string
        localPrimaryKey:
          type: string
        useAnonymousBind:
          type: boolean
        enabled:
          type: boolean
        version:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
    Logging:
      type: object
      properties:
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        httpLoggingEnabled:
          type: boolean
        disableJdkLogger:
          type: boolean
        enabledOAuthAuditLogging:
          type: boolean
        externalLoggerConfiguration:
          type: string
        httpLoggingExcludePaths:
          uniqueItems: true
          type: array
          items:
            type: string
    MessageConfiguration:
      type: object
      properties:
        messageProviderType:
          type: string
          enum:
            - DISABLED
            - REDIS
            - POSTGRES
        redisConfiguration:
          $ref: '#/components/schemas/RedisMessageConfiguration'
        postgresConfiguration:
          $ref: '#/components/schemas/PostgresMessageConfiguration'
    PostgresMessageConfiguration:
      type: object
      properties:
        driverClassName:
          type: string
        dbSchemaName:
          type: string
        connectionUri:
          type: string
        authUserName:
          type: string
        authUserPassword:
          type: string
        connectionPoolMaxTotal:
          type: integer
          format: int32
        connectionPoolMaxIdle:
          type: integer
          format: int32
        connectionPoolMinIdle:
          type: integer
          format: int32
        messageWaitMillis:
          type: integer
          format: int32
        messageSleepThreadTime:
          type: integer
          format: int32
    RedisMessageConfiguration:
      type: object
      properties:
        redisProviderType:
          type: string
          enum:
            - STANDALONE
            - CLUSTER
            - SHARDED
            - SENTINEL
        servers:
          type: string
        defaultPutExpiration:
          type: integer
          format: int32
        sentinelMasterGroupName:
          type: string
        password:
          type: string
        useSSL:
          type: boolean
        sslTrustStoreFilePath:
          type: string
        sslTrustStorePassword:
          type: string
        sslKeyStoreFilePath:
          type: string
        sslKeyStorePassword:
          type: string
        maxIdleConnections:
          type: integer
          format: int32
        maxTotalConnections:
          type: integer
          format: int32
        connectionTimeout:
          type: integer
          format: int32
        soTimeout:
          type: integer
          format: int32
        maxRetryAttempts:
          type: integer
          format: int32
    GluuOrganization:
      required:
        - description
        - displayName
      type: object
      properties:
        dn:
          type: string
        displayName:
          maxLength: 60
          minLength: 0
          type: string
        description:
          maxLength: 60
          minLength: 0
          type: string
        member:
          type: string
        countryName:
          type: string
        organization:
          type: string
        status:
          type: string
          enum:
            - active
            - inactive
            - expired
            - register
        managerGroup:
          type: string
        themeColor:
          type: string
        shortName:
          type: string
        customMessages:
          type: array
          items:
            type: string
        title:
          type: string
        jsLogoPath:
          type: string
        jsFaviconPath:
          type: string
        baseDn:
          type: string
    CustomScope:
      type: object
      properties:
        dn:
          type: string
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        inum:
          type: string
        displayName:
          type: string
        id:
          type: string
        iconUrl:
          type: string
        description:
          type: string
        scopeType:
          type: string
          enum:
            - openid
            - dynamic
            - uma
            - spontaneous
            - oauth
        claims:
          type: array
          items:
            type: string
        defaultScope:
          type: boolean
        groupClaims:
          type: boolean
        dynamicScopeScripts:
          type: array
          items:
            type: string
        umaAuthorizationPolicies:
          type: array
          items:
            type: string
        attributes:
          $ref: '#/components/schemas/ScopeAttributes'
        creatorId:
          type: string
        creatorType:
          type: string
          enum:
            - none
            - client
            - user
            - auto
        creationDate:
          type: string
          format: date-time
        creatorAttributes:
          type: object
          additionalProperties:
            type: string
        clients:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        umaType:
          type: boolean
        baseDn:
          type: string
    SessionId:
      type: object
      properties:
        dn:
          type: string
        id:
          type: string
        outsideSid:
          type: string
        lastUsedAt:
          type: string
          format: date-time
        userDn:
          type: string
        authenticationTime:
          type: string
          format: date-time
        state:
          type: string
          enum:
            - unauthenticated
            - authenticated
        sessionState:
          type: string
        permissionGranted:
          type: boolean
        permissionGrantedMap:
          $ref: '#/components/schemas/SessionIdAccessMap'
        sessionAttributes:
          type: object
          additionalProperties:
            type: string
        deviceSecrets:
          type: array
          items:
            type: string
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        creationDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        ttl:
          type: integer
          format: int32
        persisted:
          type: boolean
        opbrowserState:
          type: string
    SessionIdAccessMap:
      type: object
      properties:
        permissionGranted:
          type: object
          additionalProperties:
            type: boolean
          xml:
            name: map
    SessionPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SessionId'
    User:
      type: object
      properties:
        dn:
          type: string
        userId:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        oxAuthPersistentJwt:
          type: array
          items:
            type: string
        externalUid:
          type: array
          items:
            type: string
        authenticator:
          $ref: '#/components/schemas/UserAuthenticatorList'
        status:
          type: string
          enum:
            - active
            - inactive
            - expired
            - register
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectAttribute'
        customObjectClasses:
          type: array
          items:
            type: string
        baseDn:
          type: string
    UserAuthenticator:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        custom:
          type: object
          additionalProperties:
            type: object
    UserAuthenticatorList:
      type: object
      properties:
        authenticators:
          type: array
          items:
            $ref: '#/components/schemas/UserAuthenticator'
    TokenAttributes:
      type: object
      properties:
        x5cs256:
          type: string
        online_access:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: string
        dpopJkt:
          type: string
        authorizationDetails:
          type: string
        statusListIndex:
          type: integer
          format: int32
    TokenEntity:
      type: object
      properties:
        dn:
          type: string
        grantId:
          type: string
        userId:
          type: string
        userDn:
          type: string
        clientId:
          type: string
        creationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        authenticationTime:
          type: string
          format: date-time
        scope:
          type: string
        tokenCode:
          type: string
        tokenType:
          type: string
        grantType:
          type: string
        jwtRequest:
          type: string
        authorizationCode:
          type: string
        nonce:
          type: string
        codeChallenge:
          type: string
        codeChallengeMethod:
          type: string
        claims:
          type: string
        tokenBindingHash:
          type: string
        referenceId:
          type: string
        authMode:
          type: string
        sessionDn:
          type: string
        ttl:
          type: integer
          format: int32
        attributes:
          $ref: '#/components/schemas/TokenAttributes'
        dpop:
          type: string
        tokenTypeEnum:
          type: string
          enum:
            - ID_TOKEN
            - ACCESS_TOKEN
            - LONG_LIVED_ACCESS_TOKEN
            - REFRESH_TOKEN
            - AUTHORIZATION_CODE
            - TX_TOKEN
    TokenEntityPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/TokenEntity'
    UmaResource:
      required:
        - name
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        id:
          type: string
        name:
          type: string
        iconUri:
          type: string
        scopes:
          type: array
          items:
            type: string
        scopeExpression:
          type: string
        clients:
          type: array
          items:
            type: string
        resources:
          type: array
          items:
            type: string
        creator:
          type: string
        description:
          type: string
        type:
          type: string
        creationDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        ttl:
          type: integer
          format: int32
    AppConfiguration1:
      type: object
      properties:
        issuer:
          type: string
        baseEndpoint:
          type: string
        cleanServiceInterval:
          type: integer
          format: int32
        cleanServiceBatchChunkSize:
          type: integer
          format: int32
        useLocalCache:
          type: boolean
        disableJdkLogger:
          type: boolean
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        externalLoggerConfiguration:
          type: string
        metricReporterInterval:
          type: integer
          format: int32
        metricReporterKeepDataDays:
          type: integer
          format: int32
        metricReporterEnabled:
          type: boolean
        personCustomObjectClassList:
          type: array
          items:
            type: string
        superGluuEnabled:
          type: boolean
        sessionIdPersistInCache:
          type: boolean
        oldU2fMigrationEnabled:
          type: boolean
        errorReasonEnabled:
          type: boolean
        fido2Configuration:
          $ref: '#/components/schemas/Fido2Configuration'
    Fido2Configuration:
      type: object
      properties:
        authenticatorCertsFolder:
          type: string
        mdsAccessToken:
          type: string
        mdsCertsFolder:
          type: string
        mdsTocsFolder:
          type: string
        checkU2fAttestations:
          type: boolean
        userAutoEnrollment:
          type: boolean
        unfinishedRequestExpiration:
          type: integer
          format: int32
        authenticationHistoryExpiration:
          type: integer
          format: int32
        serverMetadataFolder:
          type: string
        requestedCredentialTypes:
          type: array
          items:
            type: string
        requestedParties:
          type: array
          items:
            $ref: '#/components/schemas/RequestedParty'
        metadataUrlsProvider:
          type: string
        skipDownloadMdsEnabled:
          type: boolean
        skipValidateMdsInAttestationEnabled:
          type: boolean
        assertionOptionsGenerateEndpointEnabled:
          type: boolean
    RequestedParty:
      type: object
      properties:
        name:
          type: string
        domains:
          type: array
          items:
            type: string
    Fido2DeviceData:
      type: object
      properties:
        uuid:
          type: string
        token:
          type: string
          writeOnly: true
        type:
          type: string
        platform:
          type: string
        name:
          type: string
        os_name:
          type: string
        os_version:
          type: string
        custom_data:
          type: object
          additionalProperties:
            type: string
        push_token:
          type: string
    Fido2DeviceNotificationConf:
      type: object
      properties:
        sns_endpoint_arn:
          type: string
        sns_endpoint_arn_remove:
          type: string
        sns_endpoint_arn_history:
          type: array
          items:
            type: string
    Fido2RegistrationData:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        username:
          type: string
        domain:
          type: string
        userId:
          type: string
        challenge:
          type: string
        attenstationRequest:
          type: string
        attenstationResponse:
          type: string
        uncompressedECPoint:
          type: string
        publicKeyId:
          type: string
        type:
          type: string
        status:
          type: string
          enum:
            - pending
            - registered
            - compromised
            - canceled
        counter:
          type: integer
          format: int32
        attestationType:
          type: string
        signatureAlgorithm:
          type: integer
          format: int32
        applicationId:
          type: string
    Fido2RegistrationEntry:
      type: object
      properties:
        dn:
          type: string
        id:
          type: string
        challange:
          type: string
        challengeHash:
          type: integer
          format: int32
        creationDate:
          type: string
          format: date-time
        userInum:
          type: string
        rpId:
          type: string
        sessionStateId:
          type: string
        expirationDate:
          type: string
          format: date-time
        deletable:
          type: boolean
        ttl:
          type: integer
          format: int32
        displayName:
          type: string
        publicKeyId:
          type: string
        publicKeyIdHash:
          type: integer
          format: int32
        registrationData:
          $ref: '#/components/schemas/Fido2RegistrationData'
        counter:
          type: integer
          format: int32
        registrationStatus:
          type: string
          enum:
            - pending
            - registered
            - compromised
            - canceled
        deviceNotificationConf:
          $ref: '#/components/schemas/Fido2DeviceNotificationConf'
        deviceData:
          $ref: '#/components/schemas/Fido2DeviceData'
        expiration:
          type: integer
          format: int32
          writeOnly: true
        baseDn:
          type: string
    Fido2RegistrationEntryPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Fido2RegistrationEntry'
    CustomUser:
      type: object
      properties:
        dn:
          type: string
        userId:
          type: string
        updatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        oxAuthPersistentJwt:
          type: array
          items:
            type: string
        externalUid:
          type: array
          items:
            type: string
        authenticator:
          $ref: '#/components/schemas/UserAuthenticatorList'
        status:
          type: string
          enum:
            - active
            - inactive
            - expired
            - register
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectAttribute'
        customObjectClasses:
          type: array
          items:
            type: string
        inum:
          type: string
        mail:
          type: string
        displayName:
          type: string
        givenName:
          type: string
        userPassword:
          type: string
        baseDn:
          type: string
    UserPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    UserPatchRequest:
      type: object
      properties:
        jsonPatchString:
          type: string
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectAttribute'
    AdminPermission:
      type: object
      properties:
        tag:
          type: string
        permission:
          type: string
        description:
          type: string
        defaultPermissionInToken:
          type: boolean
    GenericResponse:
      type: object
      properties:
        success:
          type: boolean
        responseMessage:
          type: string
        responseCode:
          type: integer
          format: int32
        responseObject:
          $ref: '#/components/schemas/JsonNode'
    RolePermissionMapping:
      type: object
      properties:
        role:
          type: string
        permissions:
          type: array
          items:
            type: string
    AdminRole:
      type: object
      properties:
        role:
          type: string
        description:
          type: string
        deletable:
          type: boolean
    AppConfigResponse:
      type: object
      properties:
        authServerHost:
          type: string
          description: Auth Server host
          readOnly: true
        authzBaseUrl:
          type: string
          description: Authorization base URL
          readOnly: true
        clientId:
          type: string
          description: OIDC Client ID
          readOnly: true
        responseType:
          type: string
          description: OIDC Client Secret
          readOnly: true
        scope:
          type: string
          description: Scope
          readOnly: true
        redirectUrl:
          type: string
          description: Redirect URL
          readOnly: true
        acrValues:
          type: string
          description: ACR Value
        frontChannelLogoutUrl:
          type: string
          description: Front Channel Logout URL
          readOnly: true
        postLogoutRedirectUri:
          type: string
          description: Post Logout Redirect URL
          readOnly: true
        endSessionEndpoint:
          type: string
          description: End Session Endpoint
          readOnly: true
        sessionTimeoutInMins:
          type: integer
          description: Admin UI Session Timeout
          format: int32
        allowSmtpKeystoreEdit:
          type: boolean
          description: Admin UI allow SMTP Keystore Edit
        additionalParameters:
          type: array
          description: Additional Authentication Parameters
          items:
            $ref: '#/components/schemas/KeyValuePair'
    KeyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    LicenseRequest:
      type: object
      properties:
        licenseKey:
          type: string
    LicenseResponse:
      type: object
      properties:
        licenseEnabled:
          type: boolean
        productName:
          type: string
        productCode:
          type: string
        licenseType:
          type: string
        maxActivations:
          type: integer
          format: int32
        licenseKey:
          type: string
        licenseActive:
          type: boolean
        validityPeriod:
          type: string
        companyName:
          type: string
        customerEmail:
          type: string
        customerFirstName:
          type: string
        customerLastName:
          type: string
        licenseExpired:
          type: boolean
    SSARequest:
      type: object
      properties:
        ssa:
          type: string
    WebhookEntry:
      required:
        - displayName
        - url
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
        displayName:
          maxLength: 60
          minLength: 2
          pattern: '^[a-zA-Z0-9_\-\:\/\.]+$'
          type: string
        description:
          type: string
        url:
          type: string
        httpRequestBodyString:
          type: string
        httpMethod:
          type: string
        jansEnabled:
          type: boolean
        httpHeaders:
          type: array
          items:
            $ref: '#/components/schemas/KeyValuePair'
        auiFeatureIds:
          uniqueItems: true
          type: array
          items:
            type: string
        httpRequestBody:
          type: object
          additionalProperties:
            type: object
        baseDn:
          type: string
    AuiFeature:
      type: object
      properties:
        dn:
          type: string
        auiFeatureId:
          type: string
        displayName:
          type: string
        jansScope:
          type: string
        webhookIdsMapped:
          type: array
          items:
            type: string
        baseDn:
          type: string
    ShortCodeRequest:
      required:
        - webhookId
      type: object
      properties:
        webhookId:
          type: string
        shortcodeValueMap:
          type: object
          additionalProperties:
            type: object
    AppConfiguration2:
      type: object
      properties:
        sourceConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GluuLdapConfiguration'
        inumConfig:
          $ref: '#/components/schemas/GluuLdapConfiguration'
        targetConfig:
          $ref: '#/components/schemas/GluuLdapConfiguration'
        ldapSearchSizeLimit:
          type: integer
          format: int32
        keyAttributes:
          type: array
          items:
            type: string
        keyObjectClasses:
          type: array
          items:
            type: string
        sourceAttributes:
          type: array
          items:
            type: string
        customLdapFilter:
          type: string
        updateMethod:
          type: string
        defaultInumServer:
          type: boolean
        keepExternalPerson:
          type: boolean
        useSearchLimit:
          type: boolean
        attributeMapping:
          type: array
          items:
            $ref: '#/components/schemas/CacheRefreshAttributeMapping'
        snapshotFolder:
          type: string
        snapshotMaxCount:
          type: integer
          format: int32
        baseDN:
          type: string
        personObjectClassTypes:
          type: array
          items:
            type: string
        personCustomObjectClass:
          type: string
        contactObjectClassTypes:
          type: array
          items:
            type: string
        allowPersonModification:
          type: boolean
        supportedUserStatus:
          type: array
          items:
            type: string
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        externalLoggerConfiguration:
          type: string
        metricReporterInterval:
          type: integer
          format: int32
        metricReporterKeepDataDays:
          type: integer
          format: int32
        metricReporterEnabled:
          type: boolean
        disableJdkLogger:
          type: boolean
        cleanServiceInterval:
          type: integer
          format: int32
        linkEnabled:
          type: boolean
        serverIpAddress:
          type: string
        pollingInterval:
          type: string
        lastUpdate:
          type: string
          format: date-time
        lastUpdateCount:
          type: string
        problemCount:
          type: string
        useLocalCache:
          type: boolean
    CacheRefreshAttributeMapping:
      type: object
      properties:
        source:
          type: string
        destination:
          type: string
    AppConfiguration3:
      type: object
      properties:
        baseDN:
          type: string
        applicationUrl:
          type: string
        baseEndpoint:
          type: string
        personCustomObjectClass:
          type: string
        oxAuthIssuer:
          type: string
        protectionMode:
          type: string
          enum:
            - OAUTH
            - BYPASS
        maxCount:
          type: integer
          format: int32
        bulkMaxOperations:
          type: integer
          format: int32
        bulkMaxPayloadSize:
          type: integer
          format: int64
        userExtensionSchemaURI:
          type: string
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        externalLoggerConfiguration:
          type: string
        metricReporterInterval:
          type: integer
          format: int32
        metricReporterKeepDataDays:
          type: integer
          format: int32
        metricReporterEnabled:
          type: boolean
        disableJdkLogger:
          type: boolean
        disableLoggerTimer:
          type: boolean
        useLocalCache:
          type: boolean
        skipDefinedPasswordValidation:
          type: boolean
    BrokerIdentityProviderForm:
      required:
        - identityProvider
        - metaDataFile
      type: object
      properties:
        identityProvider:
          $ref: '#/components/schemas/IdentityProvider'
        metaDataFile:
          type: string
          format: binary
    IdentityProvider:
      required:
        - creatorId
        - description
        - displayName
        - name
        - realm
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
          description: Unique identifier.
        creatorId:
          type: string
          description: Creator of IDP.
        name:
          type: string
          description: Name uniquely identifies an identity provider.
        displayName:
          maxLength: 60
          minLength: 0
          type: string
          description: Identity provider display name.
        description:
          maxLength: 500
          minLength: 0
          type: string
          description: Description of Identity provider.
        realm:
          type: string
          description: Realm in which Identity provider is created.
        enabled:
          type: boolean
          description: Indicates if Identity provider is enabled.
        signingCertificate:
          type: string
          description: Digital certificate used to verify the authenticity of the request.
        validateSignature:
          type: string
        singleLogoutServiceUrl:
          type: string
          description: Url used to send logout requests.
        nameIDPolicyFormat:
          type: string
          description: ' URI reference corresponding to a name identifier format.'
        principalAttribute:
          type: string
          description: ' Name or Friendly Name of the attribute used to identify external users.'
        principalType:
          type: string
          description: Way to identify and track external users from the assertion.
        idpEntityId:
          type: string
          description: >-
            Entity ID that will be used to uniquely identify this SAML Service
            Provider.
        singleSignOnServiceUrl:
          type: string
          description: Url used to send SAML authentication requests.
        encryptionPublicKey:
          type: string
          description: Public key to use to encrypt the message.
        providerId:
          type: string
          description: 'IDP provider, should be SAML.'
        trustEmail:
          type: boolean
          description: >-
            If enabled, email provided by this provider is not verified even if
            verification is enabled for the realm.
        storeToken:
          type: boolean
          description: Enable/disable if tokens must be stored after authenticating users.
        addReadTokenRoleOnCreate:
          type: boolean
          description: Enable/disable if new users can read any stored tokens.
        authenticateByDefault:
          type: boolean
        linkOnly:
          type: boolean
          description: >-
            If true, users cannot log in through this provider. They can only
            link to this provider.
        firstBrokerLoginFlowAlias:
          type: string
          description: >-
            Alias of authentication flow, which is triggered after first login
            with this identity provider. Term 'First Login' means that no
            Keycloak account is currently linked to the authenticated identity
            provider account.
        postBrokerLoginFlowAlias:
          type: string
          description: >-
            Alias of authentication flow, which is triggered after each login
            with this identity provider.
        spMetaDataURL:
          type: string
          description: SAML SP metadata file URL.
        spMetaDataLocation:
          type: string
          description: SP metadata file location.
        idpMetaDataURL:
          type: string
          description: SAML IDP metadata file URL.
        idpMetaDataLocation:
          type: string
          description: SAML IDP metadata file location.
        status:
          type: string
          description: IDP setup status.
          enum:
            - active
            - inactive
            - expired
            - register
        validationStatus:
          type: string
          description: IDP validation status.
          enum:
            - In Progress
            - Success
            - Scheduled
            - Failed
        validationLog:
          type: array
          description: IDP validation log.
          items:
            type: string
            description: IDP validation log.
        baseDn:
          type: string
    IdentityProviderPagedResult:
      type: object
      properties:
        start:
          type: integer
          format: int32
        totalEntriesCount:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/IdentityProvider'
    SamlAppConfiguration:
      type: object
      properties:
        applicationName:
          type: string
          description: Name of application.
        samlTrustRelationshipDn:
          type: string
          description: Trust relationship organizational unit.
        trustedIdpDn:
          type: string
          description: Identity provider organizational unit.
        enabled:
          type: boolean
          description: SAML functionality enabled.
        selectedIdp:
          type: string
          description: Selected SAML server.
        serverUrl:
          type: string
          description: SAML server URL.
        realm:
          type: string
          description: 'SAML server realm, default is `jans`.'
        clientId:
          type: string
          description: Jans auth SAML client ID.
        clientSecret:
          type: string
          description: Jans auth SAML client password.
        grantType:
          type: string
          description: Grant type to get access token.
        scope:
          type: string
          description: Oauth2 scope to get access token.
        username:
          type: string
          description: SAML server username.
        password:
          type: string
          description: SAML server user credentails.
        spMetadataUrl:
          type: string
          description: Relative SAML server SP Metadata Url.
        tokenUrl:
          type: string
          description: Relative SAML server Token Url.
        idpUrl:
          type: string
          description: Relative SAML server IDP Url.
        extIDPTokenUrl:
          type: string
          description: Relative SAML server IDP Token Url.
        extIDPRedirectUrl:
          type: string
          description: Relative IDP redirect Url.
        idpMetadataImportUrl:
          type: string
          description: Relative SAML server Metadata import Url.
        idpRootDir:
          type: string
          description: Jans Auth server root SAML directory.
        idpMetadataDir:
          type: string
          description: >-
            Jans Auth server relative SAML directory to store IDP Metadata
            files.
        idpMetadataTempDir:
          type: string
          description: >-
            Jans Auth server relative SAML temp directory to store IDP Metadata
            files.
        idpMetadataFile:
          type: string
          description: IDP Metadata file name format.
        spMetadataDir:
          type: string
          description: Jans Auth server relative SAML directory to store SP Metadata files.
        spMetadataTempDir:
          type: string
          description: >-
            Jans Auth server relative SAML temp directory to store SP Metadata
            files.
        spMetadataFile:
          type: string
          description: SP Metadata file name format.
        ignoreValidation:
          type: boolean
          description: Boolean value to enable/disable SAML validation.
        setConfigDefaultValue:
          type: boolean
          description: Boolean value `true` to set the default values for an IDP.
        idpMetadataMandatoryAttributes:
          type: array
          description: List of mandatory IDP Metadata attributes.
          items:
            type: string
            description: List of mandatory IDP Metadata attributes.
        kcAttributes:
          type: array
          description: Keycloak SAML attribute names.
          items:
            type: string
            description: Keycloak SAML attribute names.
        kcSamlConfig:
          type: array
          description: Keycloak SAML config attribute names.
          items:
            type: string
            description: Keycloak SAML config attribute names.
    ProfileConfiguration:
      type: object
      properties:
        name:
          type: string
        signResponses:
          type: string
      description: List of profile configuration.
    SAMLMetadata:
      type: object
      properties:
        nameIDPolicyFormat:
          type: string
          description: ' URI reference corresponding to a name identifier format.'
        entityId:
          type: string
          description: >-
            Entity ID that will be used to uniquely identify this SAML Service
            Provider.
        singleLogoutServiceUrl:
          type: string
          description: Url used to send logout requests.
        jansAssertionConsumerServiceGetURL:
          type: string
          description: >-
            GET URL the Identity provider (IdP) will send the SAML Response
            containing the assertions.
        jansAssertionConsumerServicePostURL:
          type: string
          description: >-
            POST URL the Identity provider (IdP) will send the SAML Response
            containing the assertions.
      description: SAML entity metadata.
    TrustRelationship:
      required:
        - description
        - displayName
        - name
        - spMetaDataSourceType
      type: object
      properties:
        dn:
          type: string
        inum:
          type: string
          description: Unique identifier
        owner:
          type: string
          description: Creator of Trust Relationship.
        name:
          maxLength: 60
          minLength: 0
          type: string
          description: >-
            The alphanumeric ID string that is used to identify the Trust
            Relationship.
        displayName:
          maxLength: 60
          minLength: 0
          type: string
          description: Trust Relationship display name.
        description:
          maxLength: 4000
          minLength: 0
          type: string
          description: Description of the Trust Relationship.
        baseUrl:
          type: string
          description: URL to use when the auth server needs to redirect.
        enabled:
          type: boolean
          description: Indicates if Trust Relationship is enabled.
        alwaysDisplayInConsole:
          type: boolean
          description: Indicates if Trust Relationship should always be listed in the UI.
        clientAuthenticatorType:
          type: string
          description: Preferred Authenticator Type.
        secret:
          type: string
          description: Client secret.
        registrationAccessToken:
          type: string
          description: Registration access token.
        consentRequired:
          type: boolean
          description: Boolean value if consent is required.
        spMetaDataSourceType:
          type: string
          description: 'Trust Relationship SP metadata type - file, URI.'
          enum:
            - file
            - manual
        samlMetadata:
          $ref: '#/components/schemas/SAMLMetadata'
        redirectUris:
          type: array
          description: List of valid Redirect URI.
          items:
            type: string
            description: List of valid Redirect URI.
        spMetaDataURL:
          type: string
          description: SAML entity metadata file URL.
        metaLocation:
          type: string
          description: Trust Relationship metadata file location.
        releasedAttributes:
          type: array
          description: Trust Relationship attributes that will be released to SAML server.
          items:
            type: string
            description: >-
              Trust Relationship attributes that will be released to SAML
              server.
        spLogoutURL:
          pattern: >-
            ^$|(^(https?|http)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|])
          type: string
          description: Logout request URL.
        status:
          type: string
          description: Trust Relationship setup status.
          enum:
            - active
            - inactive
            - expired
            - register
        validationStatus:
          type: string
          description: Trust Relationship validation status.
          enum:
            - In Progress
            - Success
            - Scheduled
            - Failed
        validationLog:
          type: array
          description: Validation log.
          items:
            type: string
            description: Validation log.
        profileConfigurations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProfileConfiguration'
          description: List of profile configuration.
        baseDn:
          type: string
    TrustRelationshipForm:
      required:
        - metaDataFile
        - trustRelationship
      type: object
      properties:
        trustRelationship:
          $ref: '#/components/schemas/TrustRelationship'
        metaDataFile:
          type: string
          format: binary
    AppConfiguration4:
      type: object
      properties:
        sourceConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GluuLdapConfiguration'
        inumConfig:
          $ref: '#/components/schemas/GluuLdapConfiguration'
        targetConfig:
          $ref: '#/components/schemas/GluuLdapConfiguration'
        ldapSearchSizeLimit:
          type: integer
          format: int32
        keyAttributes:
          type: array
          items:
            type: string
        keyObjectClasses:
          type: array
          items:
            type: string
        sourceAttributes:
          type: array
          items:
            type: string
        customLdapFilter:
          type: string
        updateMethod:
          type: string
        defaultInumServer:
          type: boolean
        keepExternalPerson:
          type: boolean
        useSearchLimit:
          type: boolean
        attributeMapping:
          type: array
          items:
            $ref: '#/components/schemas/CacheRefreshAttributeMapping'
        snapshotFolder:
          type: string
        snapshotMaxCount:
          type: integer
          format: int32
        keycloakConfiguration:
          $ref: '#/components/schemas/KeycloakConfiguration'
        baseDN:
          type: string
        personObjectClassTypes:
          type: array
          items:
            type: string
        personCustomObjectClass:
          type: string
        contactObjectClassTypes:
          type: array
          items:
            type: string
        allowPersonModification:
          type: boolean
        supportedUserStatus:
          type: array
          items:
            type: string
        loggingLevel:
          type: string
        loggingLayout:
          type: string
        externalLoggerConfiguration:
          type: string
        metricReporterInterval:
          type: integer
          format: int32
        metricReporterKeepDataDays:
          type: integer
          format: int32
        metricReporterEnabled:
          type: boolean
        disableJdkLogger:
          type: boolean
        cleanServiceInterval:
          type: integer
          format: int32
        keycloakLinkEnabled:
          type: boolean
        keycloakLinkServerIpAddress:
          type: string
        keycloakLinkPollingInterval:
          type: string
        keycloakLinkLastUpdate:
          type: string
          format: date-time
        keycloakLinkLastUpdateCount:
          type: string
        keycloakLinkProblemCount:
          type: string
        useLocalCache:
          type: boolean
    KeycloakConfiguration:
      type: object
      properties:
        serverUrl:
          type: string
        realm:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        grantType:
          type: string
        username:
          type: string
        password:
          type: string
    HealthEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        status:
          type: string
        engineStatus:
          type: string
        baseDn:
          type: string
        inum:
          type: string
    LogEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        eventType:
          type: string
        severetyLevel:
          type: string
        action:
          type: string
        decisionResult:
          type: string
        requestedResource:
          type: string
        princiaplId:
          type: string
        clientId:
          type: string
        contextInformation:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
    TelemetryEntry:
      type: object
      properties:
        dn:
          type: string
        creationDate:
          type: string
          format: date-time
        eventTime:
          type: string
          format: date-time
        service:
          type: string
        nodeName:
          type: string
        status:
          type: string
        lastPolicyLoadSize:
          type: integer
          format: int32
        policySuccessLoadCounter:
          type: integer
          format: int64
        policyFailedLoadCounter:
          type: integer
          format: int64
        lastPolicyEvaluationTimeNs:
          type: integer
          format: int32
        avgPolicyEvaluationTimeNs:
          type: integer
          format: int32
        evaluationRequestsCount:
          type: integer
          format: int64
        policyStats:
          type: object
          additionalProperties:
            type: string
        baseDn:
          type: string
        inum:
          type: string
        memoryUsage:
          type: string
    AppConfiguration5:
      type: object
      properties:
        baseDN:
          type: string
          description: >-
            Entry Base distinguished name (DN) that identifies the starting
            point of a search
        baseEndpoint:
          type: string
          description: Lock base endpoint URL
        openIdIssuer:
          type: string
          description: OpenID issuer URL
        tokenChannels:
          type: array
          description: List of token channel names
          items:
            type: string
            description: List of token channel names
        clientId:
          type: string
          description: Lock Client ID
        clientPassword:
          type: string
          description: Lock client password
        tokenUrl:
          type: string
          description: Jans URL of the OpenID Connect Provider's OAuth 2.0 Token Endpoint
        groupScopeEnabled:
          type: boolean
          description: Group scope enabled
        endpointGroups:
          type: object
          additionalProperties:
            type: array
            description: Endpoint groups
            items:
              type: string
              description: Endpoint groups
          description: Endpoint groups
        endpointDetails:
          type: object
          additionalProperties:
            type: array
            description: >-
              Jans URL of config-api audit endpoints and corresponding scope
              details
            items:
              type: string
              description: >-
                Jans URL of config-api audit endpoints and corresponding scope
                details
          description: >-
            Jans URL of config-api audit endpoints and corresponding scope
            details
        disableJdkLogger:
          type: boolean
          description: Choose whether to disable JDK loggers
        loggingLevel:
          type: string
          description: Specify the logging level of loggers
        loggingLayout:
          type: string
          description: Logging layout used for Jans Authorization Server loggers
        externalLoggerConfiguration:
          type: string
          description: The path to the external log4j2 logging configuration
        metricChannel:
          type: string
          description: Channel for metric reports
        metricReporterInterval:
          type: integer
          description: The interval for metric reporter in seconds
          format: int32
        metricReporterKeepDataDays:
          type: integer
          description: The days to keep metric reported data
          format: int32
        metricReporterEnabled:
          type: boolean
          description: Enable metric reporter
        cleanServiceInterval:
          type: integer
          description: Time interval for the Clean Service in seconds
          format: int32
        opaConfiguration:
          $ref: '#/components/schemas/OpaConfiguration'
        pdpType:
          type: string
          description: PDP type
        policiesJsonUrisAuthorizationToken:
          type: string
          description: Authorization token to access Json Uris
        policiesJsonUris:
          type: array
          description: List of Json Uris with link to Rego policies
          items:
            type: string
            description: List of Json Uris with link to Rego policies
        policiesZipUrisAuthorizationToken:
          type: string
          description: Authorization token to access Zip Uris
        policiesZipUris:
          type: array
          description: List of Zip Uris with policies
          items:
            type: string
            description: List of Zip Uris with policies
    OpaConfiguration:
      type: object
      properties:
        baseUrl:
          type: string
          description: Base OPA URL
        accessToken:
          type: string
          description: OPA access token
      description: Opa Configuration
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://{op-hostname}/.../token'
          scopes:
            'https://jans.io/oauth/jans-auth-server/config/properties.readonly': View Auth Server properties related information
            'https://jans.io/oauth/jans-auth-server/config/properties.write': Manage Auth Server properties related information
            'https://jans.io/oauth/config/attributes.readonly': View attribute related information
            'https://jans.io/oauth/config/attributes.write': Manage attribute related information
            'https://jans.io/oauth/config/attributes.delete': Delete attribute related information
            'https://jans.io/oauth/config/acrs.readonly': View ACRS related information
            'https://jans.io/oauth/config/acrs.write': Manage ACRS related information
            'https://jans.io/oauth/config/database/ldap.readonly': View LDAP database related information
            'https://jans.io/oauth/config/database/ldap.write': Manage LDAP database related information
            'https://jans.io/oauth/config/database/ldap.delete': Delete LDAP database related information
            'https://jans.io/oauth/config/scripts.readonly': View cache scripts information
            'https://jans.io/oauth/config/scripts.write': Manage scripts related information
            'https://jans.io/oauth/config/scripts.delete': Delete scripts related information
            'https://jans.io/oauth/config/cache.readonly': View cache related information
            'https://jans.io/oauth/config/cache.write': Manage cache related information
            'https://jans.io/oauth/config/smtp.readonly': View SMTP related information
            'https://jans.io/oauth/config/smtp.write': Manage SMTP related information
            'https://jans.io/oauth/config/smtp.delete': Delete SMTP related information
            'https://jans.io/oauth/config/logging.readonly': View logging related information
            'https://jans.io/oauth/config/logging.write': Manage logging related information
            'https://jans.io/oauth/config/jwks.readonly': View JWKS related information
            'https://jans.io/oauth/config/jwks.write': Manage JWKS related information
            'https://jans.io/oauth/config/jwks.delete': Delete JWKS related information
            'https://jans.io/oauth/config/openid/clients.readonly': View clients related information
            'https://jans.io/oauth/config/openid/clients.write': Manage clients related information
            'https://jans.io/oauth/config/openid/clients.delete': Delete clients related information
            'https://jans.io/oauth/config/scopes.readonly': View scope related information
            'https://jans.io/oauth/config/scopes.write': Manage scope related information
            'https://jans.io/oauth/config/scopes.delete': Delete scope related information
            'https://jans.io/oauth/config/uma/resources.readonly': View UMA Resource related information
            'https://jans.io/oauth/config/uma/resources.write': Manage UMA Resource related information
            'https://jans.io/oauth/config/uma/resources.delete': Delete UMA Resource related information
            'https://jans.io/oauth/config/stats.readonly': View server with basic statistic
            'https://jans.io/oauth/config/organization.readonly': View organization configuration information
            'https://jans.io/oauth/config/organization.write': Manage organization configuration information
            'https://jans.io/oauth/config/agama.readonly': View Agama Flow related information
            'https://jans.io/oauth/config/agama.write': Manage Agama Flow related information
            'https://jans.io/oauth/config/agama.delete': Delete Agama Flow related information
            'https://jans.io/oauth/jans-auth-server/session.readonly': View Session related information
            'https://jans.io/oauth/jans-auth-server/session.delete': Delete Session information
            'https://jans.io/oauth/config/read-all': Admin read scope
            'https://jans.io/oauth/config/write-all': Admin write scope
            'https://jans.io/oauth/config/delete-all': Admin delete scope
            'https://jans.io/oauth/config/openid-read': View OpenID functionality
            'https://jans.io/oauth/config/openid/openid-write': Manage OpenID functionality
            'https://jans.io/oauth/config/openid/openid-delete': Delete OpenID functionality
            'https://jans.io/oauth/config/uma-read': View UMA functionality
            'https://jans.io/oauth/config/uma-write': Manage UMA functionality
            'https://jans.io/oauth/config/uma-delete': Delete UMA functionality
            'https://jans.io/oauth/config/plugin.readonly': View Plugin information
            'https://jans.io/oauth/config/properties.readonly': View Config-API related configuration properties
            'https://jans.io/oauth/config/properties.write': Manage Config-API related configuration properties
            'https://jans.io/oauth/client/authorizations.readonly': View ClientAuthorizations
            'https://jans.io/oauth/client/authorizations.delete': Revoke ClientAuthorizations
            'https://jans.io/oauth/config/jans_asset-read': View Jans Assets
            'https://jans.io/oauth/config/jans_asset-write': Manage Jans Assets
            'https://jans.io/oauth/config/jans_asset-delete': Delete Jans Assets
            'https://jans.io/oauth/config/token.readonly': View Token details
            'https://jans.io/oauth/config/token.write': Manage Token details
            'https://jans.io/oauth/config/token.delete': Delete Token details
            'https://jans.io/oauth/config/data.readonly': View Config-API related data
