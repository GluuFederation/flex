{
  "actions": {
    "accept": "Accept",
    "add": "Add",
    "add_ldap_configuration": "Add LDAP Configuration",
    "add_property": "Add property",
    "apply": "Apply",
    "back_home": "Back Home",
    "cancel": "Cancel",
    "currentMonth": "Current Month",
    "currentYear": "Current Year",
    "choose": "Choose",
    "edit": "Edit",
    "next": "Next",
    "no": "No",
    "previous": "Previous",
    "save": "Save",
    "search": "Search",
    "submit": "Submit",
    "remove": "Remove",
    "test": "Test",
    "view": "View",
    "yes": "Yes"
  },
  "fields": {
    "access_token_signing_alg": "Access Token Signing Algorithm",
    "activate": "Activate",
    "active": "Active",
    "application_type": "Application Type",
    "attributes": "Attributes",
    "attribute_edit_type": "Attribute Edit Type",
    "attribute_view_type": "Attribute View Type",
    "authentication_method": "Authentication method for the Token Endpoint",
    "authorization_code_access_token": "Authorization Code Access Token",
    "average_of_mau": "Average of MAU",
    "base_dns": "Base DNs",
    "bind_dn": "Bind DN",
    "bind_password": "Bind Password",
    "buckets": "Buckets",
    "buffer_size": "Buffer Size",
    "cache_configuration": "Cache Configuration",
    "cache_provider_type": "Cache Provider Type",
    "claims": "Claims",
    "client_credentials_access_token": "Client Credentials Access Token",
    "client_expiration_date": "Client Expiration Date",
    "client_id": "Client Id",
    "client_name": "Client Name",
    "client_secret": "Client Secret",
    "computation_pool_size": "Computation Pool Size",
    "configuration_id": "Configuration Id",
    "connection_factory_type": "Connection Factory Type",
    "connection_timeout": "Connection Timeout",
    "consent_gathering_scripts": "Consent Gathering Scripts",
    "custom_properties": "Custom Properties (key/values)",
    "data_type": "Data Type",
    "default_acr": "Default Authentication Method(Acr)",
    "default_bucket": "Default Bucket",
    "default_cleanup_batch_size": "Default Cleanup Batch Size",
    "default_put_expiration": "Default Put Expiration",
    "default_scope": "Default Scope",
    "delete_expired_on_get_request": "Delete Expired OnGetRequest",
    "description": "Description",
    "disable": "Disable",
    "disabled": "Disabled",
    "disable_jdk_logger": "Disable JSK Logger?",
    "displayname": "Display Name",
    "dynamic_scope_scripts": "Dynamics Scopes Scripts",
    "edit_type": "Edit Type",
    "enable": "Enable",
    "enabled": "Enabled",
    "enable_custom_validation_for_this_attribute": "Enable custom validation for this attribute?",
    "enabled_oAuth_audit_logging": "Enable Oauth Audit Logging?",
    "enter_the_attribute_inum": "Enter the attribute inum",
    "grant_types": "Grant Types",
    "host_name": "Host Name",
    "hide_on_discovery": "Hide On Discovery?",
    "http_logging_enabled": "Enable HTTP Logging",
    "id": "Id",
    "id_token_encrypted_response_alg": "JWE alg Algorithm for encrypting the ID Token",
    "id_token_encrypted_response_enc": "JWE enc Algorithm for encrypting the ID Token",
    "id_token_signed_response_alg": "JWS alg Algorithm for signing the ID Token",
    "inactive": "InActive",
    "include_in_scim_extension": "Include In SCIM Extension?",
    "in_memory_configuration": "inMemoryConfiguration",
    "internal": "Internal",
    "introspection_scripts": "Introspection Scripts",
    "inum": "Inum",
    "is_active": "Is Active",
    "is_expirable_client": "Is Expirable Client?",
    "is_trusted_client": "Skip Authorization Flow?",
    "json_web_keys": "JSON Web Keys",
    "jwks": "Jwks",
    "jwks_uri": "Jwks URI",
    "location_type": "Location Type",
    "log_level": "Log level",
    "log_layout": "Log layout",
    "login_uris": "Login URIs",
    "logo_uri": "Logo URI",
    "logout_redirect_uris": "Logout Redirect URIs",
    "level": "Level",
    "local_primary_key": "Local Primary Key",
    "max_connections": "Max Connections",
    "max_idle_connections": "Max Idle Connections",
    "max_operation_queue_length": "Max Operation Queue Length",
    "max_retry_attempts": "Max Retry Attempts",
    "max_total_connections": "Max Total Connections",
    "memcached_configuration": "memcachedConfiguration",
    "maximum_length": "Maximum length",
    "minimum_length": "Minimum length",
    "month": "Month",
    "monthly_active_users": "Monthly Active Users",
    "multivalued": "Multivalued?",
    "name": "Name",
    "native_persistence_configuration": "nativePersistenceConfiguration",
    "oauth": "OAuth",
    "openid": "OpenID",
    "oxauth_claim_name": "oxAuth claim name",
    "ox_attributes": "oxAttributes",
    "password": "Password",
    "persist_client_authorizations": "Persist Client Authorizations",
    "policy_uri": "Policy URI",
    "post_authn_scripts": "Post Authn Scripts",
    "post_logout_redirect_uris": "Post Logout Redirect URIs",
    "pre_authorization": "Pre-Authorization",
    "primary_key": "Primary Key",
    "programming_language": "Programming Language",
    "redirect_uris": "Redirect URIs",
    "redis_configuration": "redisConfiguration",
    "redis_provider_type": "Redis Provider Type",
    "regular_expression": "Regular expression",
    "request_object_encryption_alg": "JWE alg Algorithm for encrypting request objects",
    "request_object_encryption_enc": "JWE enc Algorithm for encrypting request objects",
    "request_object_signing_alg": "JWS enc Algorithm for signing request objects",
    "required_authentication": "Required Authentication",
    "required_ssl": "Required SSL",
    "response_types": "Response Types",
    "revision": "Revision",
    "rpt_scripts": "Rpt Scripts",
    "saml1_uri": "Saml1 URI",
    "saml2_uri": "Saml2 URI",
    "scope_type": "Scope Type",
    "scopes:": "Scopes",
    "scripts": "Scripts",
    "script_type": "Script Type",
    "sector_uri": "Sector Identifier URI",
    "sender_email": "Sender Email",
    "sender_name": "Sender Name",
    "sentinel_master_group_name": "sentinelMasterGroupName",
    "servers": "Server Details",
    "show_in_onfiguration_endpoint": "Show In Configuration Endpoint",
    "smtp_server_port": "SMTP server port",
    "smtp_test_status": "Smtp Test Status",
    "smtp_user_name": "SMTP User Name",
    "smtp_user_password": "SMTP User Password",
    "so_timeout": "So Timeout",
    "spontaneous_client_scopes": "Spontaneous Client Scopes",
    "spontaneous_client_id": "Spontaneous Client Id",
    "spontaneous_scope_script_dns": "Spontaneous Scope Script Dns",
    "spontaneous_scopes": "Spontaneous Scopes",
    "ssl_trust_store_file": "SSL Trust Store File",
    "ssl_trust_store_file_path": "sslTrustStoreFilePath",
    "ssl_trust_store_format": "SSL Trust Store Format",
    "ssl_trust_store_pin": "SSL Trust Store Pin",
    "status": "Status",
    "scopes": "Scopes",
    "subject_type": "Subject Type",
    "test_config": "Test Config",
    "test_connection": "Test Connection",
    "token_endpoint_auth_method": "JWS alg Algoritm for Authentication method to token Endpoint",
    "tls_client_auth_subject_dn": "Tls Client Auth Subject Dn",
    "run_introspection_script_before_accesstoken": "Run Introspection Script Before AccessToken As Jwt Creation And Include Claims",
    "keep_client_authorization": "Keep Client Authorization After Expiration",
    "allow_spontaneous_scopes": "Allow Spontaneous Scopes",
    "backchannelLogoutSessionRequired": "Back Channel Logout Session Required",
    "backchannelLogoutUri": "Back Channel Logout URI",
    "additionalAudience": "Additional Audience",
    "accessTokenAsJwt": "Access Token as JWT",
    "requireAuthTime": "Require AuthTime",
    "rptAsJwt": "Rpt As Jwt",
    "includeClaimsInIdToken": "Include Claims In IdToken",
    "frontChannelLogoutSessionRequired": "Logout Session Required",
    "clientUri": "Client URI",
    "trusted_host": "Trusted Host ?",
    "initiateLoginUri": "Initiate Login URI",
    "tosUri": "Terms of service URI",
    "idTokenTokenBindingCnf": "IdToken Binding Confirmation method",
    "refreshTokenLifetime": "Refresh Token Lifetime",
    "oxdId": "Oxd Id",
    "defaultMaxAge": "Default Maximun Authentication Age",
    "accessTokenLifetime": "Access Token Lifetime",
    "show_software_settings": "Show Software related settings ?",
    "show_ciba_settings": "Show CIBA related settings ?",
    "backchannelTokenDeliveryMode": "CIBA Token Delivery Mode",
    "backchannelClientNotificationEndpoint": "CIBA Client Notification Endpoint",
    "backchannelUserCodeParameter": "CIBA User Code Parameter?",
    "frontChannelLogoutUri": "Front Channel Logout URI",
    "contacts": "Contacts",
    "claimRedirectURIs": "Claim Redirect URIs",
    "requestUris": "Request URIs",
    "authorizedOrigins": "Authorized Javascript Origins",
    "defaultAcrValues": "Default Acr Values",
    "softwareId": "Software Id",
    "softwareVersion": "Software Version",
    "softwareStatement": "'Software Statement",
    "usage_type": "Usage Type",
    "use_anonymous_bind": "Use Anonymous Bind",
    "use_ssl": "Use SSL",
    "user_info_encrypted_response_alg": "JWE alg Algorithm for encrypting userinfo responses",
    "user_info_encrypted_response_enc": "JWE enc Algorithm for encrypting userinfo responses",
    "user_info_signed_response_alg": "JWS alg Algorithm for signing userinfo responses",
    "user_name": "User Name",
    "user_password": "User Password",
    "view_type": "View Type",
    "productName": "Product Name",
    "productCode": "Product Code",
    "licenseType": "License Type",
    "maxActivations": "Maximum Activations",
    "licenseKey": "License Key",
    "isLicenseActive": "Is License Active",
    "validityPeriod": "License Valid Upto",
    "companyName": "Company Name",
    "customerEmail": "Customer Email",
    "customerName": "Customer Name",
    "licenseDetails": "License Details",
    "username": "Username",
    "connectionUris": "Connection URIs",
    "schemaName": "Schema Name",
    "passwordEncryptionMethod": "Password Encryption Method",
    "serverTimezone": "Server Timezone",
    "binaryAttributes": "Binary Attributes",
    "certificateAttributes": "Certificate Attributes"
  },
  "languages": {
    "french": "French",
    "english": "English",
    "portuguese": "Portuguese"
  },
  "menus": {
    "adminui": "Admin",
    "config-api": "Config-API",
    "api": {
      "roles": "Access roles",
      "permissions": "Permissions",
      "mapping": "Mapping"
    },
    "cache": "Cache",
    "clients": "Clients",
    "configuration": "Configuration",
    "couchbase": "Couchbase",
    "defaults": "Defaults",
    "dashboard": "Dashboard",
    "health": "Health",
    "home": "Home",
    "keys": "Keys",
    "ldap": "Ldap",
    "license": "Licensing",
    "licenseDetails": "License Details",
    "my_profile": "My Profile",
    "sql": "Sql",
    "logging": "Logging",
    "mau": "Active Users",
    "oauthserver": "OAuth server",
    "persistence": "Persistence",
    "person": "Person",
    "properties": "Properties",
    "reports": "Reports",
    "roles": "Roles",
    "schema": "Schema",
    "scopes": "Scopes",
    "scripts": "Scripts",
    "services": "Services",
    "settings": "Settings",
    "signout": "Sign out"
  },
  "messages": {
    "action_commit_question": "Audit log: Want to apply changes made on this page?",
    "action_deletion_question": "Do you really want to delete this item?",
    "action_deletion_for": "Deletion confirmation for",
    "add_client": "Add Client",
    "add_scope": "Add Scope",
    "add_script": "Add Script",
    "advanced_search": "Advanced search options",
    "alert_couchbase": "Backing data source is not Couchbase !",
    "database_status_down": "Offline",
    "database_status_up": "Online",
    "delete_client": "Delete Client",
    "edit_client": "Edit Client",
    "edit_scope": "Edit Scope",
    "edit_script": "Edit Script",
    "ldap_connection_error": "LDAP Connection Failed!",
    "ldap_connection_success": "LDAP Connection successful!",
    "not_deletable_client": "This Client can't be detele",
    "not_implemented": "Not implemented yet",
    "oauth_server_status_down": "Down",
    "oauth_server_status_up": "Running",
    "refresh": "Refresh data",
    "request_waiting_message": "Performing the request, please wait!",
    "resource_not_found_message": "The requested resource doesn't exist on this server. Please contact the site administrator or the support team.",
    "resource_not_found_title": "Resource not found",
    "view_client_details": "View client details"
  },
  "tooltips": {
    "add_attribute": "Add attribute",
    "add_ldap": "Add LDAP",
    "advanced_search_options": "Advanced search options",
    "delete_attribute": "Delete attribute",
    "delete_record": "Delete record",
    "edit_ldap": "Edit Ldap",
    "edit_attribute": "Edit Attribute",
    "refresh_data": "Refresh Data",
    "view_attribute": "View attribute",
    "edit_sql": "Edit SQL",
    "add_sql": "Add SQL"
  },
  "placeholders": {
    "action_commit_message": "Provide the reason of this change",
    "activate_ldap_configuration": "Activate ldap configuration",
    "client_description": "Enter the client description",
    "client_name": "Enter the client name",
    "description": "Enter description",
    "display_name": "Enter display name",
    "enable_ssl_communication": "Enable SSL communication between auth Server and LDAP server",
    "enter_property_key": "Enter the property key",
    "enter_property_value": "Enter the property value",
    "enter_the_saml1_uri": "Enter the saml1 URI",
    "enter_the_saml2_uri": "Enter the saml2 URI",
    "enter_the_attribute_name": "Enter the attribute name",
    "enter_the_attribute_display_name": "Enter the attribute display name",
    "enter_the_attribute_description": "Enter the attribute description",
    "ldap_bind_dn": "Enter the ldap Bind DN",
    "ldap_bind_max_connections": "Enter the ldap Bind Max Connections",
    "ldap_bind_password": "Enter the ldap Bind Password",
    "ldap_name": "Enter the ldap Name",
    "ldap_primary_key": "Enter the ldap Primary Key",
    "logo_uri": "Enter the logo URI",
    "name": "Enter the name",
    "policy_uri": "Enter the policy URI",
    "post_logout_redirect_uris": "Enter a post redirect URI in format (e.g. https:// or schema://) ",
    "redirect_uri": "Enter a redirect URI",
    "redirect_uris": "Enter a redirect URI in format (e.g. https:// or schema://",
    "search_pattern": "Search pattern",
    "sector_uri": "Enter the sector URI",
    "sender_email": "Enter the sender email",
    "sender_name": "Enter the sender name",
    "smtp_server_hostname": "Enter the SMTP server hostname",
    "smtp_server_port": "Enter the SMTP server port",
    "smtp_user_name": "Enter the SMTP user name",
    "smtp_user_password": "Enter the SMTP user password",
    "spontaneous_client_id": "Enter the spontaneous client id",
    "typeahead_holder_message": "Enter multiple items by selecting from appeared dropdown after entering each item.",
    "sql_config_name": "Enter the sql configuration name.",
    "sql_username": "Enter the Username.",
    "sql_password": "Enter the Password.",
    "sql_schemaname": "Enter the schema name.",
    "sql_passwordEncryptionMethod": "Add password encryption method.",
    "sql_serverTimezone": "Enter server timezone.",
    "activate_sql_configuration": "Activate SQL configuration."
  },
  "titles": {
    "acrs": "ACRs",
    "active_users": "Actives Users && Access Token Stats",
    "acrs_logging": "ACRs && Logging",
    "algorithmic_keys": "Algorithmic Keys",
    "application_settings": "Application Settings",
    "all_attributes": "Attributes/Claims",
    "all_custom_scripts": "Custom Scripts",
    "all_oidc_clients": "OpenID Clients",
    "all_scopes": "OAuth/OpenID Scopes",
    "couchbase_authentication": "Couchbase Authentication",
    "client_advanced": "Advanced",
    "client_attributes": "Client Attributes",
    "client_basic": "Basic",
    "client_encryption_signing": "Encryption/Signing",
    "client_scripts": "Client Scripts",
    "config_api_roles": "Config API Roles",
    "config_api_permissions": "Config API Permissions",
    "connectionUri": "Connection URI",
    "custom_scripts": "All Custom Scripts",
    "database_status_title": "Database status",
    "detail_information": "Detailed information",
    "detail_contact": "Detail Contact",
    "ldap_authentication": "LDAP Authentication",
    "services_health": "Services Health Status",
    "sql_authentication": "SQL Authentication",
    "logging": "LOGGING",
    "jwk_keys": "JWK keys",
    "jans_json_property": "Jans Server JSON Configuration",
    "mapping": "API ROLES/PERMISSIONS MAPPING",
    "modules_properties": "Module Properties",
    "oauth_server_status_title": "OAuth server status",
    "oidc_clients": "OpenID Connect Clients",
    "private_keys": "Private Keys",
    "public_keys": "Public Keys",
    "profile_detail": "Profile Details",
    "roles": "Config API Roles",
    "permissions": "Config API Permissions",
    "scopes": "OpenID/OAuth Scopes",
    "scripts": "Custom Interception Scripts",
    "schemaName": "Schema Name"
  },
  "links": {
    "support": "https://support.gluu.org/"
  },
  "options": {
    "admin": "ADMIN",
    "active": "ACTIVE",
    "boolean": "BOOLEAN",
    "binary": "BINARY",
    "certificate": "CERTIFICATE",
    "choose": "Choose",
    "cluster": "CLUSTER",
    "date": "DATE",
    "default": "DEFAULT",
    "disable": "disable",
    "disabled": "Disabled",
    "enabled": "Enabled",
    "false": "false",
    "json": "JSON",
    "inactive": "INACTIVE",
    "in_memory": "IN_MEMORY",
    "memcached": "MEMCACHED",
    "native_persistence": "NATIVE_PERSISTENCE",
    "no": "No",
    "numeric": "NUMERIC",
    "openid": "OPENID",
    "redis": "REDIS",
    "sentinel": "SENTINEL",
    "sharded": "SHARDED",
    "standalone": "STANDALONE",
    "string": "STRING",
    "true": "true",
    "user": "USER",
    "yes": "Yes"
  },
  "documentation": {
    "json_properties": {
      "defaultAcr": "This field controls the default authentication mechanism that is presented to users from all applications that leverage Janssen Server for authentication.",
      "accessTokenLifetime": "Specifies the Client-specific access token expiration.",
      "allowPostLogoutRedirectWithoutValidation": "Allows post logout redirect without validation for End Session Endpoint.",
      "authenticationFilters": "List of authentication filters.",
      "authenticationFiltersEnabled": "Boolean value specifying whether to enable user authentication filters.",
      "authenticationProtectionConfiguration": "Authentication Brute Force Protection Configuration.",
      "authorizationCodeLifetime": "The lifetime of the Authorization Code.",
      "authorizationEndpoint": "The URL of the Authorization Endpoint.",
      "authorizationRequestCustomAllowedParameters": "Authorization Request Custom Allowed Parameters.",
      "backchannelAuthenticationEndpoint": "Backchannel Authentication Endpoint.",
      "backchannelAuthenticationResponseExpiresIn": "Back channel Authentication Response Expires In.",
      "backchannelAuthenticationResponseInterval": "Back channel Authentication Response Interval.",
      "backchannelBindingMessagePattern": "Back channel Binding Message Pattern.",
      "backchannelDeviceRegistrationEndpoint": "Back channel Device Registration Endpoint.",
      "backchannelLoginHintClaims": "Back channel Login Hint Claims",
      "backchannelRedirectUri": "Back channel Redirect Uri.",
      "backchannelRequestsProcessorJobChunkSize": "backchannelRequestsProcessorJobChunkSize",
      "backchannelRequestsProcessorJobIntervalSec": "backchannelRequestsProcessorJobIntervalSec",
      "backchannelTokenDeliveryModesSupported": "Back channel Token Delivery Modes Supported.",
      "backchannelUserCodeParameterSupported": "Back channel User Code Parameter Supported.",
      "baseEndpoint": "Base URL of the Endpoints.",
      "changeSessionIdOnAuthentication": "Boolean value specifying whether change session_id </br> on authentication. Default value is true.",
      "checkSessionIFrame": "URL of an OP iframe that supports cross-origin communications for </br>session state information with the RP Client, using the HTML5 postMessage API.",
      "cibaEndUserNotificationConfig": "CIBA End User Notification Configuration.",
      "cibaGrantLifeExtraTimeSec": "Specifies the CIBA Grant life extra time in seconds.",
      "cibaMaxExpirationTimeAllowedSec": "Specifies the CIBA token expiration time in seconds.",
      "claimTypesSupported": "A list of the Claim Types that the OpenID Provider supports.",
      "claimsLocalesSupported": "Languages and scripts supported for values in Claims being returned.",
      "claimsParameterSupported": "Specifies whether the OP supports use of the claims parameter.",
      "cleanServiceBatchChunkSize": "Each clean up iteration fetches chunk of expired </br>data per base dn and removes it from storage.",
      "cleanServiceInterval": "Time interval for the Clean Service in seconds.",
      "clientAuthenticationFilters": "Client authentication filters.",
      "clientAuthenticationFiltersEnabled": "Boolean value specifying whether to enable client authentication filters.",
      "clientBlackList": "Black List for Client Redirection URIs.",
      "clientInfoEndpoint": "The URL of the Client Info Endpoint.",
      "clientRegDefaultToCodeFlowWithRefresh": "Boolean value specifying whether to add Authorization Code Flow </br>with Refresh grant during client registration.",
      "clientWhiteList": "White List for Client Redirection URIs.",
      "configurationUpdateInterval": "The interval for configuration update in seconds.",
      "consentGatheringScriptBackwardCompatibility": "Boolean value specifying whether turn on Consent Gathering Script</br> backward compatibility mode. If true AS will pick up script with higher level globally. </br>If false (default) AS will pick up script based on client configuration.",
      "corsConfigurationFilters": "CORS Configuration filters.",
      "customHeadersWithAuthorizationResponse": "Boolean value specifying whether to enable Custom </br>Response Header parameter to return custom headers with the Authorization Response.",
      "dcrAuthorizationWithClientCredentials": "Boolean value indicating if DCR authorization to be performed using client credentials.",
      "dcrSignatureValidationEnabled": "Boolean value enables DCR signature validation. Default is false.",
      "dcrSkipSignatureValidation": "Boolean value indicating if signature validation is to be skipped.",
      "defaultSignatureAlgorithm": "The default signature algorithm to sign ID Tokens.",
      "defaultSubjectType": "Default Subject Type used for Dynamic Client Registration.",
      "deviceAuthzEndpoint": "URL for device authorization requests.",
      "deviceAuthzRequestExpiresIn": "Expiration time given for device authorization requests.",
      "deviceAuthzResponseTypeToProcessAuthz": "Response type used to process device authz requests.",
      "deviceAuthzTokenPollInterval": "Default interval returned to the client to process device token requests.",
      "disableJdkLogger": "Boolean value specifying whether to enable JDK Loggers.",
      "disableU2fEndpoint": "Enable/Disable U2F endpoints.",
      "discoveryCacheLifetimeInMinutes": "Lifetime of discovery cache.",
      "displayValuesSupported": "A list of the display parameter values that the OpenID Provider supports.",
      "dnName": "DN of certificate issuer.",
      "dynamicGrantTypeDefault": "A list of the OAuth 2.0 Grant Type values that it's possible to </br>set via client registration API.",
      "dynamicRegistrationExpirationTime": "Expiration time in seconds for clients created with </br>dynamic registration, -1 means never expire.",
      "dynamicRegistrationPasswordGrantTypeEnabled": "Boolean value specifying whether to enable </br>Password Grant Type during Dynamic Registration.",
      "dynamicRegistrationPersistClientAuthorizations": "Boolean value specifying whether to persist client authorizations.",
      "dynamicRegistrationScopesParamEnabled": "Boolean value specifying whether to enable </br>scopes parameter in dynamic registration.",
      "enableClientGrantTypeUpdate": "Boolean value to specify if client can update Grant Type values.",
      "enabledOAuthAuditLogging": "Enabled OAuth Audit Logging.",
      "endSessionEndpoint": "URL at the OP to which an RP can perform a redirect </br>to request that the End-User be logged out at the OP.",
      "endSessionWithAccessToken": "Accept access token to call end_session endpoint.",
      "errorHandlingMethod": "A list of possible error handling methods.",
      "errorReasonEnabled": "Boolean value specifying whether to return detailed </br>reason of the error from AS. Default value is false.",
      "expirationNotificatorEnabled": "Boolean value specifying whether expiration </br>notificator is enabled (used to identify expiration for persistence that </br>support TTL, like Couchbase). Default value is true",
      "expirationNotificatorIntervalInSeconds": "The expiration notificator interval in seconds.",
      "expirationNotificatorMapSizeLimit": "The expiration notificator maximum size limit.",
      "fapiCompatibility": "Boolean value specifying whether turn on FAPI </br>compatibility mode. If true AS behaves in more strict mode",
      "forceIdTokenHintPrecense": "Boolean value specifying whether force id_token_hint </br>parameter precense (false by default)",
      "forceOfflineAccessScopeToEnableRefreshToken": "Boolean value specifying whether force offline_access </br>scope to enable refresh_token grant type. Default value is true.",
      "frontChannelLogoutSessionSupported": "Boolean value to specify support for front channel logout session.",
      "grantTypesSupported": "A list of the OAuth 2.0 Grant Type values that this OP supports.",
      "httpLoggingEnabled": "Enable/Disable request/response logging filter.",
      "idGenerationEndpoint": "URL for the ID Generation Endpoint.",
      "idTokenEncryptionAlgValuesSupported": "A list of the JWE encryption algorithms (alg values) supported by the OP </br>for the ID Token to encode the Claims in a JWT.",
      "idTokenEncryptionEncValuesSupported": "A list of the JWE encryption algorithms (enc values) supported by the OP for </br>the ID Token to encode the Claims in a JWT.",
      "idTokenFilterClaimsBasedOnAccessToken": "idTokenFilterClaimsBasedOnAccessToken",
      "idTokenLifetime": "The lifetime of the ID Token.",
      "idTokenSigningAlgValuesSupported": "A list of the JWS signing algorithms (alg values) </br>supported by the OP for the ID Token to encode the Claims in a JWT.",
      "idTokenTokenBindingCnfValuesSupported": "Array containing a list of the JWT Confirmation </br>Method member names supported by the OP for Token Binding of ID Tokens. </br>The presence of this parameter indicates that the OpenID Provider supports Token Binding of ID Tokens.</br> If omitted, the default is that the OpenID Provider does not support Token Binding of ID Tokens.",
      "introspectionAccessTokenMustHaveUmaProtectionScope": "Reject introspection requests if access_token in Authorization </br>header does not have uma_protection scope.",
      "introspectionEndpoint": "URL for the Introspection Endpoint.",
      "introspectionResponseScopesBackwardCompatibility": "When false, introspection endpoint returns scopes as a space-separated string, otherwise as JSON array.",
      "introspectionScriptBackwardCompatibility": "Boolean value specifying whether switch off client's introspection scripts (true value) </br>and run all scripts that exists on server. Default value is false.",
      "invalidateSessionCookiesAfterAuthorizationFlow": "Boolean value to specify whether to invalidate `session_id` and `consent_session_id` </br>cookies right after successful or unsuccessful authorization.",
      "issuer": "URL using the https scheme with no query or fragment component </br> that the OP asserts as its Issuer Identifier.",
      "jwksAlgorithmsSupported": "A list of algorithms that will be used in JWKS endpoint.",
      "jwksUri": "URL of the OP's JSON Web Key Set (JWK) document. This contains the signing key(s) the RP uses to validate signatures from the OP.",
      "keepAuthenticatorAttributesOnAcrChange": "Boolean value specifying whether to keep authenticator attributes on ACR change.",
      "keyRegenerationEnabled": "Boolean value specifying whether to regenerate keys.",
      "keyRegenerationInterval": "The interval for key regeneration in hours.",
      "keySelectionStrategy": "Key selection strategy.",
      "keySignWithSameKeyButDiffAlg": "Specifies if signing to be done with same key but apply different algorithms.",
      "keyStoreFile": "The Key Store File (JKS).",
      "keyStoreSecret": "The password of the Key Store.",
      "legacyIdTokenClaims": "Include Claims in ID Token",
      "logClientIdOnClientAuthentication": "Boolean value to specify if application should log the Client ID on client authentication",
      "logClientNameOnClientAuthentication": "Boolean value to specify if application should log the Client Name on client authentication.",
      "loggingLayout": "Logging layout used for oxAuth loggers.",
      "loggingLevel": "Logging level for oxAuth loggers.",
      "metricReporterInterval": "The interval for metric reporter in seconds.",
      "metricReporterKeepDataDays": "The days to keep metric reported data.",
      "opPolicyUri": "URL that the OpenID Provider provides to the person </br>registering the Client to read about the OP's requirements </br>on how the Relying Party can use the data provided by the OP.",
      "opTosUri": "URL that the OpenID Provider provides to the person registering the Client to read about OpenID Provider's terms of service.",
      "openIdConfigurationEndpoint": "URL for the Open ID Connect Configuration Endpoint.",
      "openIdDiscoveryEndpoint": "URL for the Discovery Endpoint.",
      "openidScopeBackwardCompatibility": "Set to false to only allow token endpoint request for </br>openid scope with grant type equals to authorization_code, </br>restrict access to userinfo to scope openid </br>and only return id_token if scope contains openid.",
      "openidSubAttribute": "LDAP attribute used for the sub claim.",
      "oxElevenDeleteKeyEndpoint": "URL for the oxEleven Delete Key Endpoint.",
      "oxElevenGenerateKeyEndpoint": "URL for the oxEleven Generate Key Endpoint.",
      "oxElevenSignEndpoint": "URL for the oxEleven Sign Endpoint.",
      "oxElevenVerifySignatureEndpoint": "URL for the oxEleven Verify Signature Endpoint.",
      "oxElevenJwksEndpoint": "URL for the oxEleven JWKS Endpoint.",
      "oxId": "URL for the Inum generator Service.",
      "oxOpenIdConnectVersion": "OpenID Connect Version.",
      "pairwiseCalculationKey": "Key to calculate algorithmic pairwise IDs.",
      "pairwiseCalculationSalt": "Salt to calculate algorithmic pairwise IDs.",
      "pairwiseIdType": "The pairwise ID type.",
      "persistIdTokenInLdap": "Specifies whether to persist id_token into LDAP (otherwise saves into cache).",
      "persistRefreshTokenInLdap": "Specifies whether to persist refresh_token into LDAP (otherwise saves into cache).",
      "personCustomObjectClassList": "LDAP custom object class list for dynamic person enrollment.",
      "refreshTokenExtendLifetimeOnRotation": "Boolean value specifying whether to extend refresh token lifetime on rotation.",
      "refreshTokenLifetime": "The lifetime of the Refresh Token.",
      "registrationEndpoint": "URL of the Registration Enpoint.",
      "rejectJwtWithNoneAlg": "Boolean value specifying whether reject JWT requested or validated with algorithm None. Default value is true.",
      "removeRefreshTokensForClientOnLogout": "Boolean value specifying whether to remove refresh tokens on logout. Default value is true.",
      "requestObjectEncryptionAlgValuesSupported": "A list of the JWE encryption algorithms (alg values) supported by the OP for Request Objects.",
      "requestObjectEncryptionEncValuesSupported": "A list of the JWE encryption algorithms (enc values) supported by the OP for Request Objects.",
      "requestObjectSigningAlgValuesSupported": "A list of the JWS signing algorithms (alg values) supported by the OP for Request Objects.",
      "requestParameterSupported": "Boolean value specifying whether the OP supports use of the request parameter.",
      "requestUriHashVerificationEnabled": "Boolean value specifying whether the OP supports use of the request_uri hash verification.",
      "requestUriParameterSupported": "Boolean value specifying whether the OP supports use of the request_uri parameter.",
      "requireRequestUriRegistration": "Boolean value specifying whether the OP requires any request_uri values used to be </br>pre-registered using the request_uris registration parameter.",
      "responseModesSupported": "A list of the OAuth 2.0 Response Mode values that this OP supports.",
      "responseTypesSupported": "A list of the OAuth 2.0 response_type values that this OP supports.",
      "returnClientSecretOnRead": "Boolean value specifying whether a client_secret is returned on client GET or PUT. </br>Set to false by default which means to not return secret.",
      "sectorIdentifierCacheLifetimeInMinutes": "Lifetime of sector identifier redirect uri's cache.    ",
      "serverSessionIdLifetime": "The sessionId lifetime in seconds for sessionId. By default same as sessionIdLifetime.",
      "serviceDocumentation": "URL of a page containing human-readable information that developers might want or need to know when using the OpenID Provider.",
      "sessionAsJwt": "Experimental feature. Do not use in production!",
      "sessionIdEnabled": "Boolean value specifying whether to enable authentication by session_id.",
      "sessionIdLifetime": "The lifetime of session id in seconds. If 0 or -1 then expiration is not set. </br>`session_id` cookie expires when browser session ends.",
      "sessionIdPersistInCache": "Boolean value specifying whether to persist session_id in cache.",
      "sessionIdPersistOnPromptNone": "Boolean value specifying whether to persist session ID on prompt none.",
      "sessionIdRequestParameterEnabled": "Boolean value specifying whether to enable session_id HTTP request parameter.",
      "sessionIdUnauthenticatedUnusedLifetime": "The lifetime for unused unauthenticated session states.",
      "sessionIdUnusedLifetime": "The lifetime for unused session states.",
      "shareSubjectIdBetweenClientsWithSameSectorId": "Share Subject ID between clients with same Sector ID.",
      "skipAuthorizationForOpenIdScopeAndPairwiseId": "If a client has only openid scope and pairwise id, person should not have to authorize.",
      "skipRefreshTokenDuringRefreshing": "Boolean value specifying whether to skip refreshing tokens on refreshing.",
      "softwareStatementValidationType": "Specifies validation type for software statement during Dynamic Client Registration. </br>`script` - validate with help of Dynamic Client Registration custom script, </br>`jwks_uri` - validate by JWKS fetched by uri where jwks_uri is specified as claim of software statement by name defined in softwareStatementValidationClaimName. </br>`jwks` - validate by JWKS which are taken from sofware statement claims. </br>Not recommended. Claim name specified by softwareStatementValidationClaimName. </br>`none` - validation of software statement is skipped.",
      "spontaneousScopeLifetime": "The lifetime of spontaneous scope in seconds.",
      "statTimerIntervalInSeconds": "Interval in seconds which specifies how often statistic timer should run.",
      "statWebServiceIntervalLimitInSeconds": "Interval in seconds which specifies limit before statistic web service can handle next call. </br>Protection from calling expensive service too often.",
      "subjectTypesSupported": "A list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.",
      "tokenEndpoint": "The URL of the Token Endpoint.",
      "tokenEndpointAuthMethodsSupported": "A list of Client Authentication methods supported by this Token Endpoint.",
      "tokenEndpointAuthSigningAlgValuesSupported": "A list of the JWS signing algorithms (alg values) supported by the Token Endpoint for the signature </br>on the JWT used to authenticate the Client at the Token Endpoint for the </br>private_key_jwt and client_secret_jwt authentication methods.",
      "tokenRevocationEndpoint": "The URL of the Token (access_token or refresh_token) Revocation Endpoint.",
      "trustedClientEnabled": "Boolean value specifying whether a client is trusted and no authorization is required.",
      "uiLocalesSupported": "Languages and scripts supported for the user interface.",
      "umaAddScopesAutomatically": "Add UMA scopes automatically if it is not registered yet",
      "umaConfigurationEndpoint": "URL for the UMA Configuration Endpoint.",
      "umaGrantAccessIfNoPolicies": "Specify whether to grant access to resources if there is </br>no any policies associated with scopes.",
      "umaPctLifetime": "UMA PCT lifetime",
      "umaResourceLifetime": "UMA Resource lifetime",
      "umaRestrictResourceToAssociatedClient": "Restrict access to resource by associated client.",
      "umaRptAsJwt": "Issue RPT as JWT or as random string.",
      "umaRptLifetime": "UMA RPT lifetime",
      "umaTicketLifetime": "UMA ticket lifetime",
      "umaValidateClaimToken": "Validate claim_token as id_token assuming it is issued by local idp.",
      "updateClientAccessTime": "Boolean value to specify if application should update </br>oxLastAccessTime/oxLastLogonTime attributes on client authentication.",
      "updateUserLastLogonTime": "Boolean value to specify if application should update </br>oxLastLogonTime attribute on user authentication.",
      "useLocalCache": "Boolean value specifying whether to enable local in-memory cache for </br>attributes, scopes, clients and organization configuration.",
      "useNestedJwtDuringEncryption": "Use Nested Jwt During Encryption",
      "userInfoEncryptionAlgValuesSupported": "A list of the JWE encryption algorithms (alg values) JWA supported </br>by the UserInfo Endpoint to encode the Claims in a JWT.",
      "userInfoEncryptionEncValuesSupported": "A list of the JWE encryption algorithms (enc values) JWA supported </br>by the UserInfo Endpoint to encode the Claims in a JWT.",
      "userInfoEndpoint": "The URL of the User Info Endpoint.",
      "userInfoSigningAlgValuesSupported": "A list of the JWS signing algorithms (alg values) JWA supported by </br>the UserInfo Endpoint to encode the Claims in a JWT.",
      "webKeysStorage": "Web Key Storage Type.",
      "corsEnabled": "Boolean value indicating if the filter is enabled.",
      "filterName": "Filter name.",
      "corsAllowedOrigins": "A list of origins that are allowed to access the resource. A * can be specified to enable access to resource from any origin. Otherwise, a whitelist of comma separated origins can be provided.",
      "corsAllowedMethods": "A comma separated list of HTTP methods that can be used to access the resource, using cross-origin requests. These are the methods which will also be included as part of Access-Control-Allow-Methods header in pre-flight response.",
      "corsAllowedHeaders": "The names of the supported author request headers.",
      "corsSupportCredentials": "A flag that indicates whether the resource supports user credentials. This flag is exposed as part of Access-Control-Allow-Credentials header in a pre-flight response. It helps browser determine whether or not an actual request can be made using credentials.",
      "corsLoggingEnabled": "Value to enable logging, Setting the value to False will disable logging.",
      "corsPreflightMaxAge": "The duration in seconds the browser is allowed to cache the result of the pre-flight request.",
      "corsRequestDecorate": "A flag to control if CORS specific attributes should be added to the HttpServletRequest object.",
      "filter": "Filter to be used.",
      "bind": "Filter bind.",
      "attemptExpiration": "How long store in cache information about particular login attempt. It's needed to count login attempts withing specified period of time.",
      "maximumAllowedAttemptsWithoutDelay": "How many attempts application allow without delay.",
      "delayTime": "Delay time in seconds after reaching maximumAllowedAttemptsWithoutDelay limit.",
      "bruteForceProtectionEnabled": "Enable or disable service, This functionality can be enabled dynamically."
    },
    "openid_client": {
      "clientName": "The openid connect client name",
      "inum": "The openid connect client id",
      "clientId": "The openid connect client id",
      "clientSecret": "The openid connect client secret",
      "description": "A clear  and precise description of the client",
      "logoUri": "URL that references a logo for the Client application",
      "idTokenTokenBindingCnf": "Specifies the JWT Confirmation Method member name (e.g. tbh) </br>that the Relying Party expects when receiving Token Bound ID Tokens. </br>The presence of this parameter indicates that the Relying Party supports Token Binding</br> of ID Tokens. If omitted, the default is that the Relying Party </br>does not support Token Binding of ID Tokens.",
      "clientUri": "URL of the home page of the Client. The value of this field must point to a valid Web page.",
      "policyUri": "URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used.",
      "tosUri": "URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.",
      "jwksUri": "URL for the Client''s JSON Web Key Set (JWK) document containing key(s) that are used for signing requests to the OP. The JWK Set may also contain the Client''s encryption keys(s) that are used by the OP to encrypt the responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is required for all keys in the document to indicate each key''s intended usage.",
      "jwks": "List of JSON Web Key (JWK) - A JSON object that represents a cryptographic key. The members of the object represent properties of the key, including its value.",
      "sectorIdentifierUri": "URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.",
      "subjectType": "Subject type requested for the Client ID. Valid types include pairwise and public.",
      "idTokenSignedResponseAlg": "JWS alg algorithm (JWA) required for signing the ID Token issued to this Client.",
      "idTokenEncryptedResponseAlg": "JWE alg algorithm (JWA) required for encrypting the ID Token issued to this Client.",
      "idTokenEncryptedResponseEnc": "JWE enc algorithm (JWA) required for encrypting the ID Token issued to this Client.",
      "userInfoSignedResponseAlg": "JWS alg algorithm (JWA) required for signing UserInfo Responses.",
      "userInfoEncryptedResponseAlg": "JWE alg algorithm (JWA) required for encrypting UserInfo Responses.",
      "userInfoEncryptedResponseEnc": "JWE enc algorithm (JWA) required for encrypting UserInfo Responses.",
      "requestObjectSigningAlg": "JWS alg algorithm (JWA) that must be used for signing Request Objects sent to the OP.",
      "requestObjectEncryptionAlg": "JWE alg algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.",
      "requestObjectEncryptionEnc": "JWE enc algorithm (JWA) the RP is declaring that it may use for encrypting Request Objects sent to the OP.",
      "tokenEndpointAuthMethod": "Requested Client Authentication method for the Token Endpoint.",
      "tokenEndpointAuthSigningAlg": "JWS alg algorithm (JWA) that must be used for signing the JWT used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods.",
      "defaultMaxAge": "Specifies the Default Maximum Authentication Age.",
      "requireAuthTime": "Boolean value specifying whether the auth_time Claim in the ID Token is required. It is required when the value is true.",
      "defaultAcrValues": "Array of default requested Authentication Context Class Reference values that the Authorization Server must use for processing requests from the Client.",
      "initiateLoginUri": "Specifies the URI using the https scheme that the authorization server can call to initiate a login at the client.",
      "postLogoutRedirectUris": "Provide the URLs supplied by the RP to request that the user be redirected to this location after a logout has been performed.",
      "requestUris": "Provide a list of requests_uri values that are pre-registered by the Client for use at the Authorization Server.",
      "scopes": "Provide list of scopes granted to the client.",
      "claims": "Provide list of claims granted to the client.",
      "trustedClient": "Attribute which corresponds to the pre-Authorization property. Default value is false.",
      "lastAccessTime": "Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating last access time.",
      "lastLogonTime": "Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating last login time.",
      "persistClientAuthorizations": "Specifies if the client authorization details are to be persisted. Default value is true.",
      "includeClaimsInIdToken": "If true then claims are included in token id, default value is false.",
      "refreshTokenLifetime": "Specifies the Client-specific refresh token expiration.",
      "accessTokenLifetime": "Specifies the Client-specific access token expiration.",
      "rptAsJwt": "Specifies whether RPT should be return as signed JWT.",
      "accessTokenAsJwt": "Specifies whether access token as signed JWT.",
      "accessTokenSigningAlg": "Specifies signing algorithm that has to be used during JWT signing. If it''s not specified, then the default OP signing algorithm will be used.",
      "disabled": "Specifies whether client is disabled.",
      "authorizedOrigins": "Specifies authorized JavaScript origins.",
      "softwareId": "pecifies a unique identifier string (UUID) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.",
      "softwareVersion": "Specifies a version identifier string for the client software identified by 'software_id'. The value of the 'software_version' should change on any update to the client software identified by the same 'software_id'.",
      "softwareStatement": "Specifies a software statement containing client metadata values about the client software as claims. This is a string value containing the entire signed JWT.",
      "backchannelTokenDeliveryMode": "specifies how backchannel token will be delivered.",
      "backchannelClientNotificationEndpoint": "Client Initiated Backchannel Authentication (CIBA) enables a Client to initiate the authentication of an end-user by means of out-of-band mechanisms. Upon receipt of the notification, the Client makes a request to the token endpoint to obtain the tokens.",
      "backchannelAuthenticationRequestSigningAlg": "The JWS algorithm alg value that the Client will use for signing authentication request, as described in Section 7.1.1. of OAuth 2.0 [RFC6749]. When omitted, the Client will not send signed authentication requests.",
      "backchannelUserCodeParameter": "Boolean value specifying whether the Client supports the user_code parameter. If omitted, the default value is false.",
      "expirationDate": "Integer timestamp, measured in the number of seconds since January 1 1970 UTC, indicating when this permission will expire",
      "expirable": "Specifies whether client is expirable",
      "deletable": "Specifies whether client is deletable.",
      "jansId": "ttribute Scope Id.",
      "postAuthnScripts": "Post Authentication Scripts",
      "consentGatheringScripts": "Consent Gathering Scripts",
      "spontaneousScopeScriptDns": "Spontaneous Scope Script Dns",
      "introspectionScripts": "Introspection Scripts",
      "rptClaimsScripts": "Rpt Claims Scripts",
      "spontaneousScopes": "Spontaneous Scopes",
      "tlsClientAuthSubjectDn": "The tls Client Auth Subject Dn",
      "grantTypes": "The list of grant types for this client",
      "responseTypes": "The list of responses types for this client",
      "applicationType": "The OpenID connect Client application type.",
      "redirectUris": "The list of redirect uri for this client",
      "contacts": "OpenId connect client contacts list",
      "claimRedirectURIs": "Claim redirect URIs",
      "frontChannelLogoutUri": "The front channel logout Uri",
      "backchannelLogoutUri": "The back channel logout Uri",
      "additionalAudience": "The client audiences",
      "runIntrospectionScriptBeforeAccessTokenAsJwtCreationAndIncludeClaims": "Run Introspection Script Before AccessToken As Jwt Creation And Include Claims",
      "keepClientAuthorizationAfterExpiration": "Keep Client Authorization After Expiration",
      "allowSpontaneousScopes": "Allow Spontaneous Scopes",
      "backchannelLogoutSessionRequired": "Back channel Logout Session Required",
      "frontChannelLogoutSessionRequired": "Front Channel Logout Session Required"
    },
    "scope": {
      "inum": "Unique id identifying the scope",
      "displayName": "A human-readable name of the scope.",
      "description": "A human-readable string describing the scope.",
      "scopeType": "The scopes type associated with Access Tokens determine what resources will.",
      "claims": "Claim attributes associated with the scope.",
      "defaultScope": "Boolean value to specify is the scope is default.",
      "spontaneousClientId": "The spontaneous client Id",
      "spontaneousClientScopes": "The spontaneous Client Scopes",
      "umaAuthorizationPolicies": "Policies associated with scope",
      "showInConfigurationEndpoint": "Show this scope In Configuration Endpoint",
      "dynamicScopeScripts": "Dynamic Scope Scripts associated with the scope.",
      "umaType": "Specifies if the scope is of type UMA.",
      "id": "Based Url encode unique id for the scope",
      "attributes": "Custom attributes for the scope"
    },
    "attribute": {
      "inum": "Identifier to uniquely identify the attribute.",
      "name": "Name of the attribute.",
      "displayName": "DisplayName of the attribute.",
      "description": "User friendly descriptive detail of attribute.",
      "dataType": "Data Type of attribute.",
      "status": "Attrubute status",
      "editType": "Attribute edit type(s)",
      "viewType": "Attribute view type(s)",
      "usageType": "Attribute usage type(s)",
      "claimName": "Attribute claim name",
      "saml1Uri": "The URI of the SAML v1 for this attribute.",
      "saml2Uri": "The URI of the SAML v2 for this attribute.",
      "scimCustomAttr": "Boolean value indicating if the attribute is a SCIM custom attribute.",
      "oxMultiValuedAttribute": "Boolean value indicating if the attribute can hold multiple value.",
      "attributeValidation": "Details of validations to be applied on the attribute",
      "jansHideOnDiscovery": "Boolean value indicating if the attribute should be shown on that discovery page.",
      "regexp": "Reguar expression to be used to validate the dataType.",
      "minLength": "Minimum length",
      "maxcLength": "Maximum length",
      "location_type": "",
      "custom": "Boolean value indicating if the attribute is a custom attribute."
    },
    "script": {
      "inum": "Unique id identifying the script",
      "name": "Custom script name. Should contain only letters, digits and underscores.",
      "description": "Details describing the script.",
      "script": "Actual script content.",
      "scriptType": "Type of script.",
      "locationType": "Where the script is located.",
      "programmingLanguage": "Programming language of the custom script.",
      "moduleProperties": " Module-level properties applicable to the script.",
      "configurationProperties": "Configuration properties applicable to the script.",
      "level": "Script level.",
      "enabled": "boolean value indicating if script enabled.",
      "aliases": "List of possible aliases for the custom script.",
      "internal": "boolean value indicating if the script is internal.",
      "revision": "Update revision number of the script."
    },
    "settings": {
      "pageSize": "The default size for all list page.",
      "darkMode": "Whether to enable or disable adrk mode.",
      "configApiUrl": "The URL of the config api currently in used."
    },
    "license": {
      "productName": "The license is registered under following product.",
      "productCode": "The short code is used in our API calls in order to identify the product.",
      "licenseType": "The type of license (eg: Perpetual, Time-based, Subscription, and Consumption-based licenses).",
      "licenseKey": "The license key",
      "customerEmail": "The customer email address of the registered license.",
      "customerName": "The customer name of the registered license.",
      "companyName": "The company name of the registered license.",
      "validityPeriod": "The license will expire on following date.",
      "maxActivations": "The maximum allowed activations of this license on different machines.",
      "isLicenseActive": "Is license active?"
    },
    "ldap": {
      "configId": "Unique name of the configuration.",
      "bind_dn": "This contains the username to connect to the backend server. You need to use full DN here. As for example, cn=gluu,dc=company,dc=org.",
      "bind_password": " This can be used for a new password or to change any existing password.",
      "servers": "This contains the backend Active Directory/LDAP server hostname with port i.e. backend.organization.com:389.",
      "max_connections": "This value defines the maximum number of connections that are allowed to read the backend Active Directory/LDAP server. It is recommended to keep the value of 2 or 3.",
      "use_ssl": "Use this feature if the backend server allows SSL connectivity.",
      "base_dns": "This contains the location of the Active Directory/LDAP tree from where the Gluu Server shall read the user information.",
      "primary_key": "Primary Key",
      "local_primary_key": "Local Primary Key",
      "activate": "This check-box is used to save and push the changes. Do not use this unless the server administrator has entered all the required values."
    },
    "cache": {
      "cacheProviderType": "The cache Provider Type.",
      "servers": "Server details separated by spaces.",
      "maxOperationQueueLength": "Maximum operation Queue Length.",
      "bufferSize": "Buffer Size.",
      "defaultPutExpiration": "Expiration timeout value.",
      "redisDefaultPutExpiration": "Redis expiration timeout value.",
      "memDefaultPutExpiration": "memcached expiration timeout value.",
      "nativeDefaultPutExpiration": "Native cahce expiration timeout value.",
      "connectionFactoryType": "The Memcached Connection Factory Type.",
      "redisProviderType": "Type of redis connection.",
      "password": "Redis password.",
      "sentinelMasterGroupName": "Sentinel Master Group Name (required if SENTINEL type of connection is selected).",
      "useSSL": "Enable SSL communication between Gluu Server and Redis cache.",
      "sslTrustStoreFilePath": "Directory Path to Trust Store.",
      "maxIdleConnections": "The cap on the number of idle instances in the pool. If max idle is set too low on heavily loaded systems it is possible you will see objects being destroyed and almost immediately new objects being created.",
      "maxTotalConnections": "The number of maximum connection instances in the pool.",
      "connectionTimeout": "Connection time out.",
      "soTimeout": "So timeout",
      "maxRetryAttempts": " Maximum retry attempts in case of failure.",
      "defaultCleanupBatchSize": "Default cleanup batch page size.",
      "deleteExpiredOnGetRequest": "Whether to delete on get request."
    },
    "couchbase": {
      "configId": "Unique name of the configuration.",
      "servers": "Enter the IP address or hostname for your Couchbase nodes.",
      "buckets": "The couchbase buckets to store data.",
      "defaultBucket": "The default bucket for the Gluu Server.",
      "connectTimeout": "Connection time out.",
      "computationPoolSize": "Computation pool size.",
      "useSSL": "Use this feature if the backend server allows SSL connectivity.",
      "sslTrustStoreFile": "SSL truststore file.",
      "sslTrustStoreFormat": "SSL truststore format.",
      "sslTrustStorePin": "Encoded truststore pin.",
      "userName": "Database username.",
      "userPassword": "Database password."
    },
    "sql": {
      "config_name": "Enter the sql configuration name.",
      "username": "Enter the database username.",
      "password": "Enter the database password.",
      "schemaname": "Enter the schema name.",
      "passwordEncryptionMethod": "Add password encryption method.",
      "serverTimezone": "Enter server timezone.",
      "binaryAttributes": "Binary attributes.",
      "certificateAttributes": "Certificate attributes.",
      "activate": "Activate SQL configuration.",
      "connectionUri": "Connection URI of database."
    }
  }
}
