name: Publish packages

on:
  push:
    tags:
    - 'v**'

  workflow_dispatch:
    inputs:
      nightly:
        description: 'Enable nightly build'
        default: "false"
        required: false
  schedule:
    - cron: "0 0 * * *"
jobs:
  publish_binary_packages:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        name: [ubuntu22, ubuntu20, el8, suse15]

        include:
          - name: ubuntu22
            asset_suffix: ubuntu22.04_amd64.deb
            build_files: deb/jammy
            asset_prefix: '_'
            asset_path: flex
            sign_cmd: dpkg-sig -s builder -k DE92BEF14A1A4E542F678B64DC3C790386C73900
            python_version: "3.8"                
          - name: ubuntu20
            asset_suffix: ubuntu20.04_amd64.deb
            build_files: deb/focal
            asset_prefix: '_'
            asset_path: flex
            sign_cmd: dpkg-sig -s builder -k DE92BEF14A1A4E542F678B64DC3C790386C73900
            python_version: "3.8"
          - name: el8
            asset_suffix: el8.x86_64.rpm
            build_files: rpm/el8
            asset_prefix: '-'
            asset_path: flex/rpmbuild/RPMS/x86_64
            sign_cmd: rpm --addsign
            python_version: "3.6"
          - name: suse15
            asset_suffix: suse15.x86_64.rpm
            build_files: rpm/suse15
            asset_prefix: '-'
            asset_path: flex/rpmbuild/RPMS/x86_64
            sign_cmd: rpm --addsign
            python_version: "3.6"

    steps:
    - name: Getting build dependencies
      id: get_dependencies
      run: |     
         git clone -b flex https://github.com/GluuFederation/packaging
         mkdir -p flex/flex-src/opt/
         cp -rp packaging/${{ matrix.build_files }}/* flex/
         curl https://raw.githubusercontent.com/GluuFederation/flex/main/flex-linux-setup/flex_linux_setup/flex_setup.py > flex/flex_setup.py
         sudo add-apt-repository ppa:deadsnakes/ppa
         sudo apt-get update
         sudo apt-get install -y python${{ matrix.python_version }}
         sudo apt install -y build-essential devscripts debhelper rpm dpkg-sig python3-ldap3 python3-requests python3-ruamel.yaml python3-pymysql python3-crypto python${{ matrix.python_version }}-distutils python3-prompt-toolkit python3-psycopg2
         sudo cp -r /usr/lib/python3/dist-packages /usr/lib/python${{ matrix.python_version }}/
         sudo python${{ matrix.python_version }} -m pip install psycopg2-binary              
    - name: Import GPG key
      id: import_gpg
      continue-on-error: true
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true
    - name: List keys
      id: list_keys
      run: gpg -K        
    - name: Get latest tag
      id: previoustag
      run: |
        echo "version=$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1 | cut -d 'v' -f 2)" >> $GITHUB_OUTPUT
        TAG=$(curl https://api.github.com/repos/${{ github.repository }}/releases -s | grep "tag_name" | cut -d '"' -f 4 | grep -o '^\v.*' | head -n 1)
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "PACKAGE_PREFIX=flex" >> ${GITHUB_ENV}
        #If on schedule build nightly packages
        if [ ${{ github.event_name }} = "schedule" ] || [ ${{ github.event.inputs.nightly }} = true ]; then
          echo "Activating nightly build"
          mkdir test && cd test
          git clone https://github.com/GluuFederation/flex
          VERSION=$(cat flex/docker-casa/Dockerfile | grep "ENV GLUU_VERSION" | awk -F "[=-]" '{print $2}')
          cd ../../
          echo "PACKAGE_PREFIX=flex-nightly-build" >> ${GITHUB_ENV}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi
    - name: Print Version
      run: |
        echo "${{ steps.previoustag.outputs.version }}"
    - name: Running install and build
      id: run_build
      run: |
         cd flex/
         sudo python${{ matrix.python_version }} flex_setup.py -download-exit
         cp -r /opt/dist flex-src/opt/
         cp -r /opt/jans flex-src/opt/
         touch flex-src/opt/jans/jans-setup/package
         rm -rf install.py install jans-cli
         rm -rf flex-src/opt/jans/jans-setup/logs/setup.log
         rm -rf flex-src/opt/jans/jans-setup/logs/setup_error.log
         sed -i "s/%VERSION%/${{ steps.previoustag.outputs.version }}/g" run-build.sh
         cat run-build.sh
         sudo ./run-build.sh
    - name: "Set asset name env"
      run: |
        if [ "${{ matrix.name }}" == "ubuntu20" ] || [ "${{ matrix.name }}" == "ubuntu22" ]; then
          echo "ASSET_PRESUFFIX=~" >> $GITHUB_ENV
        elif echo "${{ steps.previoustag.outputs.version }}" | grep "-"; then
          echo "ASSET_PRESUFFIX=." >> $GITHUB_ENV
        else
          echo "ASSET_PRESUFFIX=-" >> $GITHUB_ENV
        fi
    - name: Sign package
      id: sign_package
      run : |
        echo '%_gpg_name moauto (automation) <54212639+mo-auto@users.noreply.github.com>' >> ~/.rpmmacros      
        ${{ matrix.sign_cmd }} ${{github.workspace}}/${{ matrix.asset_path }}/flex${{ matrix.asset_prefix }}${{ steps.previoustag.outputs.version }}${{ env.ASSET_PRESUFFIX }}${{ matrix.asset_suffix }}
    - name: Create checksum
      id: create_checksum
      run: |
        cd flex/
        sed -i "s/%VERSION%/${{ steps.previoustag.outputs.version }}/g" checksum.sh
        sudo ./checksum.sh      
    - name: Upload binaries to release
      id: upload_binaries
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.MOWORKFLOWTOKEN }}
        file: ${{github.workspace}}/${{ matrix.asset_path }}/flex${{ matrix.asset_prefix }}${{ steps.previoustag.outputs.version }}${{ env.ASSET_PRESUFFIX }}${{ matrix.asset_suffix }}
        asset_name: ${{ env.PACKAGE_PREFIX }}${{ matrix.asset_prefix }}${{ steps.previoustag.outputs.version }}${{ env.ASSET_PRESUFFIX }}${{ matrix.asset_suffix }}
        tag: ${{ steps.previoustag.outputs.tag }}
    - name: Upload checksum to release
      id: upload_shas
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.MOWORKFLOWTOKEN }}
        file: ${{github.workspace}}/${{ matrix.asset_path }}/flex${{ matrix.asset_prefix }}${{ steps.previoustag.outputs.version }}${{ env.ASSET_PRESUFFIX }}${{ matrix.asset_suffix }}.sha256sum
        asset_name: ${{ env.PACKAGE_PREFIX }}${{ matrix.asset_prefix }}${{ steps.previoustag.outputs.version }}${{ env.ASSET_PRESUFFIX }}${{ matrix.asset_suffix }}.sha256sum
        tag: ${{ steps.previoustag.outputs.tag }}







