name: release
on:
  workflow_dispatch:
    inputs:
      node_release_as:
        description: 'Release version for the admin ui'
        required: true
        default: '1.0.6'
      java_release_as:
        description: 'Release version for the java projects casa'
        required: true
        default: '5.0.0-5'
      docker_release_as:
        description: 'Release version for the docker images docker-*'
        required: true
        default: '1.0.6-1'
      python_release_as:
        description: 'Release version for the python projects'
        required: true
        default: '1.0.6'
      mega_release_as:
        description: 'Mega release version'
        required: true
        default: '5.0.0-5'
jobs:
  release-java-pr:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        maven: [ "casa"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.7
      id: release-please
      with:
         path: ${{ matrix.maven }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: maven
         package-name: ${{ matrix.maven }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.java_release_as }}
  release-simple-pr:
    needs: release-java-pr
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        simple: [ "docs", "docker-casa", "docker-admin-ui" ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.7
      if: matrix.simple == 'docker-casa'
      id: release-casa
      with:
         path: ${{ matrix.simple }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
         package-name: ${{ matrix.simple }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.java_release_as }}
    - uses: google-github-actions/release-please-action@v3.7
      if: matrix.simple == 'docker-admin-ui'
      id: release-admin-ui
      with:
         path: ${{ matrix.simple }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
         package-name: ${{ matrix.simple }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.docker_release_as }}
    - uses: google-github-actions/release-please-action@v3.7
      if: matrix.simple == 'docs'
      id: release-docs
      with:
         path: ${{ matrix.simple }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
         package-name: ${{ matrix.simple }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.mega_release_as }}
  release-python-pr:
    # Wait for other jobs to finish. This limits the API rate limit issue
    needs: release-simple-pr
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python-projects: ["flex-cn-setup", "flex-linux-setup"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.7
      id: release-please
      with:
         path: ${{ matrix.python-projects }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: python
         package-name: ${{ matrix.python-projects }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.python_release_as }}
  release-node-pr:
    # Wait for other jobs to finish. This limits the API rate limit issue
    needs: release-python-pr
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        node-projects: ["admin-ui"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"

    - uses: google-github-actions/release-please-action@v3.7
      id: release-please
      with:
         path: ${{ matrix.node-projects }}
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: node
         package-name: ${{ matrix.node-projects }}
         monorepo-tags: true
         release-as: ${{ github.event.inputs.node_release_as }}

  mega-release-pr:
    needs: release-node-pr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.MOAUTO_GPG_PRIVATE_KEY_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Configure Git
      run: |
        git config user.name "mo-auto"
        git config user.email "54212639+mo-auto@users.noreply.github.com"
        git config --global user.signingkey "${{ steps.import_gpg.outputs.keyid }}"


    - uses: google-github-actions/release-please-action@v3.7
      id: release-please
      with:
         token: ${{ secrets.MOWORKFLOWTOKEN }}
         release-type: simple
         release-as: ${{ github.event.inputs.mega_release_as }}
